/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å–æ —Å–∫–ª–∞–¥–æ–≤ FBO Ozon Seller –≤ Google –¢–∞–±–ª–∏—Ü—ã
 * –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–µ–π Ozon –∏ Google Sheets
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API Ozon
const OZON_CONFIG = {
  BASE_URL: 'https://api-seller.ozon.ru'
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ PropertiesService
 */
function getOzonConfig() {
  const properties = PropertiesService.getScriptProperties();
  
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
  const activeStore = getActiveStore();
  
  if (activeStore) {
    return {
      CLIENT_ID: activeStore.clientId,
      API_KEY: activeStore.apiKey,
      SPREADSHEET_ID: properties.getProperty('GOOGLE_SPREADSHEET_ID'),
      BASE_URL: OZON_CONFIG.BASE_URL,
      STORE_NAME: activeStore.name
    };
  }
  
  // Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  return {
    CLIENT_ID: properties.getProperty('OZON_CLIENT_ID'),
    API_KEY: properties.getProperty('OZON_API_KEY'),
    SPREADSHEET_ID: properties.getProperty('GOOGLE_SPREADSHEET_ID'),
    BASE_URL: OZON_CONFIG.BASE_URL,
    STORE_NAME: 'Legacy Store'
  };
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é WB –∏–∑ PropertiesService
 */
function getWBConfig() {
  const properties = PropertiesService.getScriptProperties();
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ WB –º–∞–≥–∞–∑–∏–Ω–∞
  const activeStore = getActiveWBStore();
  
  if (activeStore) {
    return {
      API_KEY: activeStore.api_key,
      SPREADSHEET_ID: properties.getProperty('GOOGLE_SPREADSHEET_ID'),
      STORE_NAME: activeStore.name
    };
  }
  
  // Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  return {
    API_KEY: properties.getProperty('WB_API_KEY'),
    SPREADSHEET_ID: properties.getProperty('GOOGLE_SPREADSHEET_ID'),
    STORE_NAME: 'Legacy WB Store'
  };
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ PropertiesService
 */
function saveOzonConfig(clientId, apiKey, spreadsheetId) {
  const properties = PropertiesService.getScriptProperties();
  
  properties.setProperties({
    'OZON_CLIENT_ID': clientId,
    'OZON_API_KEY': apiKey,
    'GOOGLE_SPREADSHEET_ID': spreadsheetId
  });
  
  console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–±–µ–∑ API –∫–ª—é—á–µ–π)
 */
function showCurrentSettings() {
  const config = getOzonConfig();
  
  console.log('–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
  console.log('Client ID:', config.CLIENT_ID ? '***' + config.CLIENT_ID.slice(-4) : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('API Key:', config.API_KEY ? '***' + config.API_KEY.slice(-4) : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('Spreadsheet ID:', config.SPREADSHEET_ID || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ Google –¢–∞–±–ª–∏—Ü—ã
 */
function onOpen() {
  const ui = SpreadsheetApp.getUi();
  
  ui.createMenu('üõí Ozon FBO Export')
    .addItem('üìä –í—ã–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –æ—Å—Ç–∞—Ç–∫–∏ (–∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω)', 'exportFBOStocks')
    .addItem('üìä –í—ã–≥—Ä—É–∑–∏—Ç—å —Ç–æ–ª—å–∫–æ FBO –æ—Å—Ç–∞—Ç–∫–∏', 'exportOnlyFBOStocks')
    .addItem('üìä –í—ã–≥—Ä—É–∑–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã)', 'exportAllStoresStocks')
    .addItem('üöÄ –¢–µ—Å—Ç v4 API —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π', 'testV4Pagination')
    .addSeparator()
    .addSubMenu(ui.createMenu('üè™ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏')
      .addItem('‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', 'addNewStore')
      .addItem('üìã –°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤', 'showStoresList')
      .addItem('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω', 'editStore')
      .addItem('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', 'deleteStore')
      .addItem('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω', 'switchActiveStore'))
    .addSeparator()
    .addSubMenu(ui.createMenu('üõí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ WB –º–∞–≥–∞–∑–∏–Ω–∞–º–∏')
      .addItem('‚ûï –î–æ–±–∞–≤–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', 'addNewWBStore')
      .addItem('üìã –°–ø–∏—Å–æ–∫ WB –º–∞–≥–∞–∑–∏–Ω–æ–≤', 'showWBStoresList')
      .addItem('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', 'editWBStore')
      .addItem('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', 'deleteWBStore')
      .addItem('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω', 'switchActiveWBStore'))
    .addSeparator()
    .addSubMenu(ui.createMenu('üìä WB –í—ã–≥—Ä—É–∑–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤')
      .addItem('üì¶ –í—ã–≥—Ä—É–∑–∏—Ç—å FBO –æ—Å—Ç–∞—Ç–∫–∏ (–∞–∫—Ç–∏–≤–Ω—ã–π WB)', 'exportWBFBOStocks')
      .addItem('üì¶ –í—ã–≥—Ä—É–∑–∏—Ç—å FBO –æ—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ WB –º–∞–≥–∞–∑–∏–Ω—ã)', 'exportAllWBStoresStocks')
      .addItem('üß™ –¢–µ—Å—Ç WB API', 'testWBConnection')
      .addItem('üß™ –¢–µ—Å—Ç WB API (taskId)', 'testWBTaskIdAPI'))
    .addSeparator()
    .addSubMenu(ui.createMenu('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
      .addItem('üìä ID Google –¢–∞–±–ª–∏—Ü—ã', 'setSpreadsheetId')
      .addItem('üìä –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É', 'setCurrentSpreadsheetId')
      .addItem('üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ', 'testOzonConnection')
      .addItem('üß™ –¢–µ—Å—Ç API endpoints', 'testStocksEndpoints')
      .addItem('üî¨ –ê–Ω–∞–ª–∏–∑ v3 API', 'analyzeV3Response')
      .addItem('üî¨ –ê–Ω–∞–ª–∏–∑ v4 API', 'analyzeV4Response')
      .addItem('üìã –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', 'showCurrentSettings'))
    .addSeparator()
    .addSubMenu(ui.createMenu('üìÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—Å—Ç–∞–º–∏')
      .addItem('üìã –°–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤', 'showStoreSheets')
      .addItem('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ª–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤', 'deleteStoreSheets')
      .addItem('üîÑ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ª–∏—Å—Ç—ã', 'renameStoreSheets'))
    .addSeparator()
    .addSubMenu(ui.createMenu('‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è')
      .addItem('üïò –°–æ–∑–¥–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä', 'createDailyTrigger')
      .addItem('‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã', 'deleteAllTriggers'))
    .addToUi();
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function getStoresList() {
  const properties = PropertiesService.getScriptProperties();
  const storesJson = properties.getProperty('OZON_STORES');
  
  if (!storesJson) {
    return [];
  }
  
  try {
    return JSON.parse(storesJson);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–ø–∏—Å–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤:', error);
    return [];
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function getWBStoresList() {
  const properties = PropertiesService.getScriptProperties();
  const storesJson = properties.getProperty('WB_STORES');
  
  if (!storesJson) {
    return [];
  }
  
  try {
    return JSON.parse(storesJson);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–ø–∏—Å–∫–∞ WB –º–∞–≥–∞–∑–∏–Ω–æ–≤:', error);
    return [];
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function saveStoresList(stores) {
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('OZON_STORES', JSON.stringify(stores));
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ WB –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function saveWBStoresList(stores) {
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('WB_STORES', JSON.stringify(stores));
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
 */
function getActiveStore() {
  const properties = PropertiesService.getScriptProperties();
  const activeStoreId = properties.getProperty('ACTIVE_STORE_ID');
  
  if (!activeStoreId) {
    return null;
  }
  
  const stores = getStoresList();
  return stores.find(store => store.id === activeStoreId) || null;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω
 */
function getActiveWBStore() {
  const properties = PropertiesService.getScriptProperties();
  const activeStoreId = properties.getProperty('ACTIVE_WB_STORE_ID');
  
  if (!activeStoreId) {
    return null;
  }
  
  const stores = getWBStoresList();
  return stores.find(store => store.id === activeStoreId) || null;
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
 */
function setActiveStore(storeId) {
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('ACTIVE_STORE_ID', storeId);
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω
 */
function setActiveWBStore(storeId) {
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('ACTIVE_WB_STORE_ID', storeId);
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω
 */
function addNewStore() {
  const ui = SpreadsheetApp.getUi();
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω–∞
  const storeName = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞:', ui.ButtonSet.OK_CANCEL);
  if (storeName.getSelectedButton() !== ui.Button.OK) return;
  
  const clientId = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ Client ID:', ui.ButtonSet.OK_CANCEL);
  if (clientId.getSelectedButton() !== ui.Button.OK) return;
  
  const apiKey = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ API Key:', ui.ButtonSet.OK_CANCEL);
  if (apiKey.getSelectedButton() !== ui.Button.OK) return;
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω
  const newStore = {
    id: Utilities.getUuid(),
    name: storeName.getResponseText(),
    clientId: clientId.getResponseText(),
    apiKey: apiKey.getResponseText(),
    createdAt: new Date().toISOString()
  };
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
  const stores = getStoresList();
  stores.push(newStore);
  saveStoresList(stores);
  
  // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –º–∞–≥–∞–∑–∏–Ω, –¥–µ–ª–∞–µ–º –µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã–º
  if (stores.length === 1) {
    setActiveStore(newStore.id);
  }
  
  ui.alert('–£—Å–ø–µ—Ö', `–ú–∞–≥–∞–∑–∏–Ω "${newStore.name}" –¥–æ–±–∞–≤–ª–µ–Ω!`, ui.ButtonSet.OK);
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π WB –º–∞–≥–∞–∑–∏–Ω
 */
function addNewWBStore() {
  const ui = SpreadsheetApp.getUi();
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω–∞
  const storeName = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞:', ui.ButtonSet.OK_CANCEL);
  if (storeName.getSelectedButton() !== ui.Button.OK) return;
  
  const apiKey = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ API Key:', ui.ButtonSet.OK_CANCEL);
  if (apiKey.getSelectedButton() !== ui.Button.OK) return;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
  if (!storeName.getResponseText().trim() || !apiKey.getResponseText().trim()) {
    ui.alert('–û—à–∏–±–∫–∞', '–í—Å–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!', ui.ButtonSet.OK);
    return;
  }
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω
  const newStore = {
    id: Utilities.getUuid(),
    name: storeName.getResponseText().trim(),
    api_key: apiKey.getResponseText().trim(),
    created_at: new Date().toISOString()
  };
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
  const stores = getWBStoresList();
  stores.push(newStore);
  saveWBStoresList(stores);
  
  // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –º–∞–≥–∞–∑–∏–Ω, –¥–µ–ª–∞–µ–º –µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã–º
  if (stores.length === 1) {
    setActiveWBStore(newStore.id);
  }
  
  ui.alert('–£—Å–ø–µ—Ö', `WB –º–∞–≥–∞–∑–∏–Ω "${newStore.name}" –¥–æ–±–∞–≤–ª–µ–Ω!`, ui.ButtonSet.OK);
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function showStoresList() {
  const stores = getStoresList();
  const activeStore = getActiveStore();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø—É—Å—Ç', '–î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏"', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  let message = '–°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤:\n\n';
  stores.forEach((store, index) => {
    const isActive = activeStore && store.id === activeStore.id ? ' (–ê–ö–¢–ò–í–ù–´–ô)' : '';
    message += `${index + 1}. ${store.name}${isActive}\n`;
    message += `   Client ID: ***${store.clientId.slice(-4)}\n`;
    message += `   API Key: ***${store.apiKey.slice(-4)}\n\n`;
  });
  
  SpreadsheetApp.getUi().alert('–°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤', message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
 */
function switchActiveStore() {
  const stores = getStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  if (stores.length === 1) {
    SpreadsheetApp.getUi().alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–£ –≤–∞—Å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –º–∞–≥–∞–∑–∏–Ω', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const selectedStore = stores[selectedIndex];
    setActiveStore(selectedStore.id);
    ui.alert('–£—Å–ø–µ—Ö', `–ê–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: ${selectedStore.name}`, ui.ButtonSet.OK);
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –º–∞–≥–∞–∑–∏–Ω
 */
function editStore() {
  const stores = getStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const store = stores[selectedIndex];
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const newName = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω', `–ù–∞–∑–≤–∞–Ω–∏–µ (—Ç–µ–∫—É—â–µ–µ: ${store.name}):`, ui.ButtonSet.OK_CANCEL);
    if (newName.getSelectedButton() !== ui.Button.OK) return;
    
    const newClientId = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω', `Client ID (—Ç–µ–∫—É—â–∏–π: ***${store.clientId.slice(-4)}):`, ui.ButtonSet.OK_CANCEL);
    if (newClientId.getSelectedButton() !== ui.Button.OK) return;
    
    const newApiKey = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω', `API Key (—Ç–µ–∫—É—â–∏–π: ***${store.apiKey.slice(-4)}):`, ui.ButtonSet.OK_CANCEL);
    if (newApiKey.getSelectedButton() !== ui.Button.OK) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    store.name = newName.getResponseText();
    store.clientId = newClientId.getResponseText();
    store.apiKey = newApiKey.getResponseText();
    
    saveStoresList(stores);
    ui.alert('–£—Å–ø–µ—Ö', `–ú–∞–≥–∞–∑–∏–Ω "${store.name}" –æ–±–Ω–æ–≤–ª–µ–Ω!`, ui.ButtonSet.OK);
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –£–¥–∞–ª—è–µ—Ç –º–∞–≥–∞–∑–∏–Ω
 */
function deleteStore() {
  const stores = getStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–£–¥–∞–ª–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const storeToDelete = stores[selectedIndex];
    const confirm = ui.alert('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', `–£–¥–∞–ª–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω "${storeToDelete.name}"?`, ui.ButtonSet.YES_NO);
    
    if (confirm === ui.Button.YES) {
      stores.splice(selectedIndex, 1);
      saveStoresList(stores);
      
      // –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω, –≤—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π
      const activeStore = getActiveStore();
      if (!activeStore && stores.length > 0) {
        setActiveStore(stores[0].id);
      }
      
      ui.alert('–£—Å–ø–µ—Ö', '–ú–∞–≥–∞–∑–∏–Ω —É–¥–∞–ª–µ–Ω!', ui.ButtonSet.OK);
    }
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ WB –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function showWBStoresList() {
  const stores = getWBStoresList();
  const activeStore = getActiveWBStore();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  let message = 'WB –ú–∞–≥–∞–∑–∏–Ω—ã:\n\n';
  stores.forEach((store, index) => {
    const isActive = activeStore && store.id === activeStore.id ? ' (–ê–ö–¢–ò–í–ù–´–ô)' : '';
    message += `${index + 1}. ${store.name}${isActive}\n`;
  });
  
  SpreadsheetApp.getUi().alert('WB –ú–∞–≥–∞–∑–∏–Ω—ã', message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω
 */
function switchActiveWBStore() {
  const stores = getWBStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const selectedStore = stores[selectedIndex];
    setActiveWBStore(selectedStore.id);
    ui.alert('–£—Å–ø–µ—Ö', `–ê–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω: ${selectedStore.name}`, ui.ButtonSet.OK);
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç WB –º–∞–≥–∞–∑–∏–Ω
 */
function editWBStore() {
  const stores = getWBStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ WB –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const storeToEdit = stores[selectedIndex];
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const newName = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', `–ù–∞–∑–≤–∞–Ω–∏–µ (—Ç–µ–∫—É—â–µ–µ: ${storeToEdit.name}):`, ui.ButtonSet.OK_CANCEL);
    if (newName.getSelectedButton() !== ui.Button.OK) return;
    
    const newApiKey = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', 'API Key (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º —á—Ç–æ–±—ã –Ω–µ –º–µ–Ω—è—Ç—å):', ui.ButtonSet.OK_CANCEL);
    if (newApiKey.getSelectedButton() !== ui.Button.OK) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    if (newName.getResponseText().trim()) {
      storeToEdit.name = newName.getResponseText().trim();
    }
    
    if (newApiKey.getResponseText().trim()) {
      storeToEdit.api_key = newApiKey.getResponseText().trim();
    }
    
    storeToEdit.updated_at = new Date().toISOString();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    saveWBStoresList(stores);
    
    ui.alert('–£—Å–ø–µ—Ö', 'WB –º–∞–≥–∞–∑–∏–Ω –æ–±–Ω–æ–≤–ª–µ–Ω!', ui.ButtonSet.OK);
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –£–¥–∞–ª—è–µ—Ç WB –º–∞–≥–∞–∑–∏–Ω
 */
function deleteWBStore() {
  const stores = getWBStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ WB –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–£–¥–∞–ª–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const storeToDelete = stores[selectedIndex];
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
    const confirm = ui.alert('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', `–£–¥–∞–ª–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω "${storeToDelete.name}"?`, ui.ButtonSet.YES_NO);
    if (confirm === ui.Button.YES) {
      stores.splice(selectedIndex, 1);
      saveWBStoresList(stores);
      
      // –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω, –≤—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π
      const activeStore = getActiveWBStore();
      if (!activeStore && stores.length > 0) {
        setActiveWBStore(stores[0].id);
      }
      
      ui.alert('–£—Å–ø–µ—Ö', 'WB –º–∞–≥–∞–∑–∏–Ω —É–¥–∞–ª–µ–Ω!', ui.ButtonSet.OK);
    }
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ID Google –¢–∞–±–ª–∏—Ü—ã
 */
function setSpreadsheetId() {
  const ui = SpreadsheetApp.getUi();
  const currentId = SpreadsheetApp.getActiveSpreadsheet().getId();
  
  const response = ui.prompt('ID Google –¢–∞–±–ª–∏—Ü—ã', `–¢–µ–∫—É—â–∏–π ID: ${currentId}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π ID (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ):`, ui.ButtonSet.OK_CANCEL);
  
  if (response.getSelectedButton() === ui.Button.OK) {
    const newId = response.getResponseText().trim();
    const spreadsheetId = newId || currentId;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å ID
    try {
      SpreadsheetApp.openById(spreadsheetId);
      const properties = PropertiesService.getScriptProperties();
      properties.setProperty('GOOGLE_SPREADSHEET_ID', spreadsheetId);
      ui.alert('–£—Å–ø–µ—Ö', `ID —Ç–∞–±–ª–∏—Ü—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${spreadsheetId}`, ui.ButtonSet.OK);
    } catch (error) {
      ui.alert('–û—à–∏–±–∫–∞', `–ù–µ–≤–µ—Ä–Ω—ã–π ID —Ç–∞–±–ª–∏—Ü—ã: ${error.message}`, ui.ButtonSet.OK);
    }
  }
}

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ID —Ç–µ–∫—É—â–µ–π —Ç–∞–±–ª–∏—Ü—ã
 */
function setCurrentSpreadsheetId() {
  const ui = SpreadsheetApp.getUi();
  const currentId = SpreadsheetApp.getActiveSpreadsheet().getId();
  
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('GOOGLE_SPREADSHEET_ID', currentId);
  
  ui.alert('–£—Å–ø–µ—Ö', `ID —Ç–µ–∫—É—â–µ–π —Ç–∞–±–ª–∏—Ü—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${currentId}`, ui.ButtonSet.OK);
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏
 */
function exportFBOStocks() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const config = getOzonConfig();
    if (!config.CLIENT_ID || !config.API_KEY) {
      throw new Error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏! –î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω —á–µ—Ä–µ–∑ –º–µ–Ω—é "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏".');
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É –æ—Å—Ç–∞—Ç–∫–æ–≤ FBO –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${config.STORE_NAME}...`);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π v4 API
    let allStocks = fetchAllFboStocksV4();
    
    if (allStocks.length === 0) {
      console.log('v4 API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–±—É–µ–º v3...');
      allStocks = getFBOStocksV3();
      
      if (allStocks.length === 0) {
        console.log('v3 API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–±—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É...');
        allStocks = getFBOStocksAnalytics();
      }
    }
    
    console.log(`–ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö: ${allStocks.length}`);
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ Google –¢–∞–±–ª–∏—Ü—ã
    writeToGoogleSheets(allStocks);
    
  console.log('–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  
} catch (error) {
  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ:', error);
  throw error;
}
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç —Ç–æ–ª—å–∫–æ FBO –æ—Å—Ç–∞—Ç–∫–∏ (–±–µ–∑ FBS)
 */
function exportOnlyFBOStocks() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const config = getOzonConfig();
    if (!config.CLIENT_ID || !config.API_KEY) {
      throw new Error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏! –î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω —á–µ—Ä–µ–∑ –º–µ–Ω—é "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏".');
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É —Ç–æ–ª—å–∫–æ FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${config.STORE_NAME}...`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ FBO —Å–∫–ª–∞–¥—ã
    const fboWarehouses = getWarehouses();
    console.log(`–ù–∞–π–¥–µ–Ω–æ FBO —Å–∫–ª–∞–¥–æ–≤: ${fboWarehouses.length}`);
    
    if (fboWarehouses.length === 0) {
      console.log('–ù–µ—Ç FBO —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–ª—å–∫–æ —Å FBO —Å–∫–ª–∞–¥–æ–≤
    const warehouseIds = fboWarehouses.map(w => w.warehouse_id);
    let fboStocks = getFBOStocksV3(warehouseIds);
    
    if (fboStocks.length === 0) {
      console.log('v3 API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–±—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É...');
      fboStocks = getFBOStocksAnalytics(warehouseIds);
    }
    
    console.log(`–ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –æ–± FBO –æ—Å—Ç–∞—Ç–∫–∞—Ö: ${fboStocks.length}`);
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ Google –¢–∞–±–ª–∏—Ü—ã
    writeToGoogleSheets(fboStocks);
    
    console.log('–í—ã–≥—Ä—É–∑–∫–∞ FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ FBO –æ—Å—Ç–∞—Ç–∫–æ–≤:', error);
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤ FBO
 */
function getWarehouses() {
  const config = getOzonConfig();
  const url = `${config.BASE_URL}/v1/warehouse/list`;
  
  const options = {
    method: 'POST',
    headers: {
      'Client-Id': config.CLIENT_ID,
      'Api-Key': config.API_KEY,
      'Content-Type': 'application/json'
    },
    payload: JSON.stringify({
      filter: {
        type: ['FBO'] // –¢–æ–ª—å–∫–æ FBO —Å–∫–ª–∞–¥—ã
      }
    })
  };
  
  const response = UrlFetchApp.fetch(url, options);
  const data = JSON.parse(response.getContentText());
  
  if (!data.result) {
    throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤: ' + JSON.stringify(data));
  }
  
  return data.result;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Å–∫–ª–∞–¥—ã (FBO –∏ FBS)
 */
function getAllWarehouses() {
  const config = getOzonConfig();
  const url = `${config.BASE_URL}/v1/warehouse/list`;
  
  const options = {
    method: 'POST',
    headers: {
      'Client-Id': config.CLIENT_ID,
      'Api-Key': config.API_KEY,
      'Content-Type': 'application/json'
    },
    payload: JSON.stringify({}) // –ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞ - –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–∫–ª–∞–¥—ã
  };
  
  const response = UrlFetchApp.fetch(url, options);
  const data = JSON.parse(response.getContentText());
  
  if (!data.result) {
    throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤: ' + JSON.stringify(data));
  }
  
  return data.result;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ FBO –æ—Å—Ç–∞—Ç–∫–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ v4 API
 */
function fetchAllFboStocksV4() {
  const config = getOzonConfig();
  const headers = {
    'Client-Id': config.CLIENT_ID,
    'Api-Key': config.API_KEY
  };
  
  let lastId = '';
  const result = [];
  let pageCount = 0;
  const PAGE_LIMIT = 1000;

  console.log('–ù–∞—á–∏–Ω–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –ø–æ v4 API...');

  do {
    pageCount++;
    console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É ${pageCount}...`);
    
    const payload = {
      filter: {
        visibility: 'ALL' // –±–µ—Ä—ë–º –≤—Å–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏
      },
      limit: PAGE_LIMIT,
      last_id: lastId
    };

    const resp = callOzonAPI('/v4/product/info/stocks', payload, headers);

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
    let items = [];
    if (resp && resp.result && Array.isArray(resp.result.items)) {
      items = resp.result.items;
      lastId = resp.result.last_id || '';
    } else if (resp && Array.isArray(resp.items)) {
      items = resp.items;
      lastId = resp.last_id || '';
    } else if (resp && Array.isArray(resp.result)) {
      items = resp.result;
      lastId = resp.last_id || '';
    } else {
      items = [];
      lastId = '';
    }

    console.log(`–ü–æ–ª—É—á–µ–Ω–æ ${items.length} —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageCount}`);

    // –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º: –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ FBO –æ—Å—Ç–∞—Ç–∫–∏
    for (const it of items) {
      const productId = it.product_id || it.id || '';
      const offerId = it.offer_id || '';
      const sku = it.sku || '';
      const stocks = Array.isArray(it.stocks) ? it.stocks : [];
      const fbo = stocks.find(s => (s.type || '').toLowerCase() === 'fbo');

      // –í v4 –∏–Ω–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è—é—Ç –¥–µ—Ç–∞–ª–∏ —Å–∫–ª–∞–¥–∞: s.warehouse_ids (–º–∞—Å—Å–∏–≤).
      const warehouseIds = fbo && Array.isArray(fbo.warehouse_ids) ? fbo.warehouse_ids.join(',') : '';

      if (fbo) { // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä—ã —Å FBO –æ—Å—Ç–∞—Ç–∫–∞–º–∏
        result.push({
          product_id: productId,
          offer_id: offerId,
          sku: sku,
          name: it.name || '',
          fbo_present: fbo ? Number(fbo.present || 0) : 0,
          fbo_reserved: fbo ? Number(fbo.reserved || 0) : 0,
          warehouse_ids: warehouseIds,
          store_name: config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω'
        });
      }
    }

  } while (lastId);

  console.log(`–ü–∞–≥–∏–Ω–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${pageCount}, FBO —Ç–æ–≤–∞—Ä–æ–≤: ${result.length}`);
  return result;
}

/**
 * –ù–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ Ozon Seller API
 */
function callOzonAPI(path, body, headers) {
  const config = getOzonConfig();
  const url = config.BASE_URL + path;
  
  const resp = UrlFetchApp.fetch(url, {
    method: 'post',
    muteHttpExceptions: true,
    contentType: 'application/json; charset=utf-8',
    headers: headers,
    payload: JSON.stringify(body)
  });

  const code = resp.getResponseCode();
  if (code < 200 || code >= 300) {
    throw new Error(`Ozon API ${path} –≤–µ—Ä–Ω—É–ª –∫–æ–¥ ${code}: ${resp.getContentText()}`);
  }
  const text = resp.getContentText();
  return text ? JSON.parse(text) : {};
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ v3 API (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥)
 */
function getFBOStocksV3(warehouseIds = []) {
  const config = getOzonConfig();
  
  try {
    const url = `${config.BASE_URL}/v3/product/info/stocks`;
    console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º endpoint v3: ${url}`);
    
    const payload = {
      filter: {}
    };
    
    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–∫–ª–∞–¥—ã, –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä
    if (warehouseIds.length > 0) {
      payload.filter.warehouse_id = warehouseIds;
    }
    
    payload.limit = 1000; // –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø–∏—Å–µ–π –∑–∞ —Ä–∞–∑
    
    const options = {
      method: 'POST',
      headers: {
        'Client-Id': config.CLIENT_ID,
        'Api-Key': config.API_KEY,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    };
    
    const response = UrlFetchApp.fetch(url, options);
    const responseCode = response.getResponseCode();
    const responseText = response.getContentText();
    
    console.log(`Response code: ${responseCode}`);
    
    if (responseCode === 200) {
      const data = JSON.parse(responseText);
      console.log(`üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ v3:`, Object.keys(data));
      
      if (data.result && data.result.items && Array.isArray(data.result.items)) {
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –æ—Å—Ç–∞—Ç–∫–∏ —á–µ—Ä–µ–∑ v3: ${data.result.items.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        return data.result.items;
      } else if (data.items && Array.isArray(data.items)) {
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –æ—Å—Ç–∞—Ç–∫–∏ —á–µ—Ä–µ–∑ v3 (items): ${data.items.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        return data.items;
      } else {
        console.log(`‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ v3:`, data);
        return [];
      }
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ ${responseCode} v3: ${responseText}`);
      return [];
    }
    
  } catch (error) {
    console.log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ v3: ${error.message}`);
    return [];
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ –∞–Ω–∞–ª–∏—Ç–∏–∫—É FBO (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥)
 */
function getFBOStocksAnalytics(warehouseIds = []) {
  const config = getOzonConfig();
  
  try {
    const url = `${config.BASE_URL}/v1/analytics/stocks`;
    console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º endpoint –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: ${url}`);
    
    const payload = {
      skus: [] // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    };
    
    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–∫–ª–∞–¥—ã, –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä
    if (warehouseIds.length > 0) {
      payload.warehouse_ids = warehouseIds;
    }
    
    const options = {
      method: 'POST',
      headers: {
        'Client-Id': config.CLIENT_ID,
        'Api-Key': config.API_KEY,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    };
    
    const response = UrlFetchApp.fetch(url, options);
    const responseCode = response.getResponseCode();
    const responseText = response.getContentText();
    
    console.log(`Response code: ${responseCode}`);
    
    if (responseCode === 200) {
      const data = JSON.parse(responseText);
      console.log(`üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:`, Object.keys(data));
      
      if (data.items && Array.isArray(data.items)) {
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –æ—Å—Ç–∞—Ç–∫–∏ —á–µ—Ä–µ–∑ –∞–Ω–∞–ª–∏—Ç–∏–∫—É: ${data.items.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        return data.items;
      } else {
        console.log(`‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—è items –≤ –æ—Ç–≤–µ—Ç–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:`, Object.keys(data));
        return [];
      }
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ ${responseCode} –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: ${responseText}`);
      return [];
    }
    
  } catch (error) {
    console.log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: ${error.message}`);
    return [];
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Å–∫–ª–∞–¥–µ (—Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
 */
function getFBOStocks(warehouseId) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  return getFBOStocksAnalytics([warehouseId]);
}

/**
 * –û—á–∏—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –æ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
 */
function sanitizeSheetName(name) {
  // Google Sheets –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: –º–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤, –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: \ / ? * [ ]
  let cleanName = name
    .replace(/[\\\/\?\*\[\]]/g, '') // –£–¥–∞–ª—è–µ–º –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
    .replace(/\s+/g, ' ') // –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –æ–¥–∏–Ω
    .trim(); // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
  
  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤
  if (cleanName.length > 100) {
    cleanName = cleanName.substring(0, 100);
  }
  
  // –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—É—Å—Ç–æ–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
  if (!cleanName) {
    cleanName = 'FBO Stocks';
  }
  
  return cleanName;
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ Google –¢–∞–±–ª–∏—Ü—ã
 */
function writeToGoogleSheets(stocks) {
  const config = getOzonConfig();
  
  // –ü–æ–ª—É—á–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã
  let spreadsheetId = config.SPREADSHEET_ID;
  
  // –ï—Å–ª–∏ ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
  if (!spreadsheetId) {
    spreadsheetId = SpreadsheetApp.getActiveSpreadsheet().getId();
    console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É: ${spreadsheetId}`);
  }
  
  console.log(`–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å ID: ${spreadsheetId}`);
  
  let spreadsheet;
  try {
    spreadsheet = SpreadsheetApp.openById(spreadsheetId);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å ID ${spreadsheetId}:`, error);
    // –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
    spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É');
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞–≥–∞–∑–∏–Ω–∞
  const storeName = config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω';
  const sheetName = sanitizeSheetName(storeName);
  
  console.log(`–°–æ–∑–¥–∞–µ–º/–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–∏—Å—Ç: ${sheetName}`);
  
  let sheet = spreadsheet.getSheetByName(sheetName);
  
  // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!sheet) {
    sheet = spreadsheet.insertSheet(sheetName);
  }
  
  // –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∏–∞–ø–∞–∑–æ–Ω —Å –¥–∞–Ω–Ω—ã–º–∏ (A:J)
  const lastRow = sheet.getLastRow();
  if (lastRow > 0) {
    const range = sheet.getRange(1, 1, lastRow, 10); // 10 –∫–æ–ª–æ–Ω–æ–∫ A-J
    range.clear();
  }
  
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏
  const headers = [
    '–ú–∞–≥–∞–∑–∏–Ω',
    'Product ID',
    'SKU',
    '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞',
    '–ê—Ä—Ç–∏–∫—É–ª',
    'FBO –û—Å—Ç–∞—Ç–æ–∫',
    'FBO –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ',
    'FBO –î–æ—Å—Ç—É–ø–Ω–æ',
    'ID —Å–∫–ª–∞–¥–æ–≤',
    '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
  ];
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  const headerRange = sheet.getRange(1, 1, 1, headers.length);
  headerRange.setFontWeight('bold');
  headerRange.setBackground('#E8F0FE');
  
  if (stocks.length === 0) {
    console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
    return;
  }
  
  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  const rows = [];
  
  stocks.forEach(stock => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö - –Ω–æ–≤—ã–π v4 API –∏–ª–∏ —Å—Ç–∞—Ä—ã–µ –º–µ—Ç–æ–¥—ã
    if (stock.fbo_present !== undefined) {
      // –ù–æ–≤—ã–π v4 API —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π - —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      rows.push([
        stock.store_name || config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
        stock.product_id || '',
        stock.sku || '',
        stock.name || '',
        stock.offer_id || '',
        stock.fbo_present || 0,
        stock.fbo_reserved || 0,
        (stock.fbo_present || 0) - (stock.fbo_reserved || 0), // available = present - reserved
        stock.warehouse_ids || '',
        new Date().toLocaleString('ru-RU')
      ]);
    } else if (stock.stocks && Array.isArray(stock.stocks)) {
      // v3 API - —É —Ç–æ–≤–∞—Ä–∞ –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ stocks
      stock.stocks.forEach(stockItem => {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ FBO –æ—Å—Ç–∞—Ç–∫–∏
        if (stockItem.type === 'fbo') {
          rows.push([
            stock.store_name || config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
            stock.product_id || '',
            stock.sku || '',
            stock.name || '',
            stock.offer_id || '',
            stockItem.present || 0,
            stockItem.reserved || 0,
            (stockItem.present || 0) - (stockItem.reserved || 0), // available = present - reserved
            stockItem.warehouse_ids && stockItem.warehouse_ids.length > 0 ? stockItem.warehouse_ids.join(',') : '',
            new Date().toLocaleString('ru-RU')
          ]);
        }
      });
    } else if (stock.available_stock_count !== undefined) {
      // API –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ - –ø–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
      rows.push([
        stock.store_name || config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
        stock.product_id || '',
        stock.sku || '',
        stock.name || '',
        stock.offer_id || '',
        stock.available_stock_count || 0,
        0, // reserved –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ
        stock.available_stock_count || 0,
        stock.warehouse_id || '',
        new Date().toLocaleString('ru-RU')
      ]);
    } else {
      // –°—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
      rows.push([
        stock.store_name || config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
        stock.product_id || '',
        stock.sku || '',
        stock.name || '',
        stock.offer_id || '',
        stock.present || 0,
        stock.reserved || 0,
        stock.available || 0,
        stock.warehouse_id || '',
        new Date().toLocaleString('ru-RU')
      ]);
    }
  });
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  if (rows.length > 0) {
    sheet.getRange(2, 1, rows.length, headers.length).setValues(rows);
  }
  
  // –ê–≤—Ç–æ–ø–æ–¥–±–æ—Ä —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫
  sheet.autoResizeColumns(1, headers.length);
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
  sheet.getRange(1, 1, rows.length + 1, headers.length).createFilter();
  
  console.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${rows.length} —Å—Ç—Ä–æ–∫ –≤ Google –¢–∞–±–ª–∏—Ü—ã`);
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Å–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function exportAllStoresStocks() {
  try {
    const stores = getStoresList();
    
    if (stores.length === 0) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ (${stores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤)...`);
    
    const originalActiveStore = getActiveStore();
    let totalProcessed = 0;
    
    stores.forEach((store, index) => {
      try {
        console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–∞–≥–∞–∑–∏–Ω ${index + 1}/${stores.length}: ${store.name}`);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
        setActiveStore(store.id);
        
        // –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
        let storeStocks = fetchAllFboStocksV4();
        
        if (storeStocks.length === 0) {
          console.log(`  v4 API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–±—É–µ–º v3...`);
          storeStocks = getFBOStocksV3();
          
          if (storeStocks.length === 0) {
            console.log(`  v3 API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–±—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É...`);
            storeStocks = getFBOStocksAnalytics();
          }
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –∫ –∫–∞–∂–¥–æ–º—É —Ç–æ–≤–∞—Ä—É
        storeStocks.forEach(stock => {
          stock.store_name = store.name;
        });
        
        console.log(`  –ü–æ–ª—É—á–µ–Ω–æ ${storeStocks.length} —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ "${store.name}"`);
        
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç –¥–ª—è —ç—Ç–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
        if (storeStocks.length > 0) {
          writeToGoogleSheets(storeStocks);
          totalProcessed += storeStocks.length;
        }
        
        console.log(`  –ú–∞–≥–∞–∑–∏–Ω "${store.name}" –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
        
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–∞–≥–∞–∑–∏–Ω–∞ "${store.name}":`, error);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏
      }
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
    if (originalActiveStore) {
      setActiveStore(originalActiveStore.id);
    }
    
    console.log(`–í—ã–≥—Ä—É–∑–∫–∞ —Å–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`);
    
    SpreadsheetApp.getUi().alert('–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${stores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≤—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤:', error);
    throw error;
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API Ozon
 */
function testOzonConnection() {
  try {
    const config = getOzonConfig();
    if (!config.CLIENT_ID || !config.API_KEY) {
      console.error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ saveOzonConfig() –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.');
      return false;
    }
    
    const warehouses = getWarehouses();
    console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Ozon API —É—Å–ø–µ—à–Ω–æ!');
    console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å–∫–ª–∞–¥—ã:', warehouses);
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Ozon API:', error);
    return false;
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function showStoreSheets() {
  const config = getOzonConfig();
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheets = spreadsheet.getSheets();
  
  const storeSheets = sheets.filter(sheet => {
    const sheetName = sheet.getName();
    const stores = getStoresList();
    return stores.some(store => sanitizeSheetName(store.name) === sheetName);
  });
  
  if (storeSheets.length === 0) {
    SpreadsheetApp.getUi().alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ù–µ—Ç –ª–∏—Å—Ç–æ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  let message = '–õ–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤:\n\n';
  storeSheets.forEach((sheet, index) => {
    const rowCount = sheet.getLastRow() - 1; // -1 –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    message += `${index + 1}. ${sheet.getName()} (${rowCount} —Ç–æ–≤–∞—Ä–æ–≤)\n`;
  });
  
  SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤', message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * –£–¥–∞–ª—è–µ—Ç –ª–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function deleteStoreSheets() {
  const ui = SpreadsheetApp.getUi();
  const confirm = ui.alert('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', '–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ª–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤?', ui.ButtonSet.YES_NO);
  
  if (confirm === ui.Button.YES) {
    const config = getOzonConfig();
    const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    const sheets = spreadsheet.getSheets();
    const stores = getStoresList();
    
    let deletedCount = 0;
    
    sheets.forEach(sheet => {
      const sheetName = sheet.getName();
      const isStoreSheet = stores.some(store => sanitizeSheetName(store.name) === sheetName);
      
      if (isStoreSheet) {
        spreadsheet.deleteSheet(sheet);
        deletedCount++;
      }
    });
    
    ui.alert('–£—Å–ø–µ—Ö', `–£–¥–∞–ª–µ–Ω–æ –ª–∏—Å—Ç–æ–≤: ${deletedCount}`, ui.ButtonSet.OK);
  }
}

/**
 * –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç –ª–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function renameStoreSheets() {
  const ui = SpreadsheetApp.getUi();
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheets = spreadsheet.getSheets();
  const stores = getStoresList();
  
  let renamedCount = 0;
  
  stores.forEach(store => {
    const expectedSheetName = sanitizeSheetName(store.name);
    const existingSheet = spreadsheet.getSheetByName(expectedSheetName);
    
    if (!existingSheet) {
      // –ò—â–µ–º –ª–∏—Å—Ç —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
      const oldSheet = sheets.find(sheet => {
        const sheetName = sheet.getName();
        return sheetName.includes(store.name) || store.name.includes(sheetName);
      });
      
      if (oldSheet && oldSheet.getName() !== expectedSheetName) {
        try {
          oldSheet.setName(expectedSheetName);
          renamedCount++;
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –ª–∏—Å—Ç–∞ ${oldSheet.getName()}:`, error);
        }
      }
    }
  });
  
  ui.alert('–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ', `–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ –ª–∏—Å—Ç–æ–≤: ${renamedCount}`, ui.ButtonSet.OK);
}

// ==================== WB API –§–£–ù–ö–¶–ò–ò ====================

const WB_ANALYTICS_HOST = 'https://seller-analytics-api.wildberries.ru';
const WB_REPORT_TIMEOUT_MS = 6 * 60 * 1000; // –∂–¥–∞—Ç—å –¥–æ 6 –º–∏–Ω—É—Ç
const WB_REPORT_POLL_INTERVAL_MS = 4000;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–∏–º–∏—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
const WB_RATE_LIMIT_MAX_RETRIES = 5; // –º–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ 429 –æ—à–∏–±–∫–µ
const WB_RATE_LIMIT_BASE_DELAY_MS = 2000; // –±–∞–∑–æ–≤–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ 2 —Å–µ–∫—É–Ω–¥—ã
const WB_RATE_LIMIT_MAX_DELAY_MS = 30000; // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ 30 —Å–µ–∫—É–Ω–¥

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç FBO –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ WB –º–∞–≥–∞–∑–∏–Ω–∞
 */
function exportWBFBOStocks() {
  try {
    const config = getWBConfig();
    
    if (!config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞: ${config.STORE_NAME}`);
    
    const taskId = wbCreateWarehouseRemainsReport_(config.API_KEY);
    const downloadUrl = wbWaitReportAndGetUrl_(taskId, config.API_KEY);
    const csv = wbDownloadReportCsv_(taskId, config.API_KEY);
    const rows = parseCsv_(csv);
    
    if (rows.length === 0) {
      console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
      return;
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const headerMap = normalizeHeaderMap_(rows[0]);
    const data = rows.slice(1).map(r => ({
      nmId: pick_(r, headerMap.nmId),
      supplierArticle: pick_(r, headerMap.supplierArticle),
      barcode: pick_(r, headerMap.barcode),
      techSize: pick_(r, headerMap.techSize),
      warehouseName: pick_(r, headerMap.warehouseName),
      warehouseId: pick_(r, headerMap.warehouseId),
      quantity: toNum_(pick_(r, headerMap.quantity)),
      reserve: toNum_(pick_(r, headerMap.reserve)),
      inWayToClient: toNum_(pick_(r, headerMap.inWayToClient)),
      inWayFromClient: toNum_(pick_(r, headerMap.inWayFromClient)),
      store_name: config.STORE_NAME
    }));
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ Google Sheets
    writeWBToGoogleSheets(data);
    
    console.log(`–í—ã–≥—Ä—É–∑–∫–∞ WB FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ó–∞–ø–∏—Å–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${data.length}`);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ WB FBO –æ—Å—Ç–∞—Ç–∫–æ–≤:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç FBO –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function exportAllWBStoresStocks() {
  try {
    const stores = getWBStoresList();
    
    if (stores.length === 0) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å–æ –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤ (${stores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤)...`);
    
    const originalActiveStore = getActiveWBStore();
    let totalProcessed = 0;
    
    stores.forEach((store, index) => {
      try {
        console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º WB –º–∞–≥–∞–∑–∏–Ω ${index + 1}/${stores.length}: ${store.name}`);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
        setActiveWBStore(store.id);
        
        // –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
        const taskId = wbCreateWarehouseRemainsReport_(store.api_key);
        const downloadUrl = wbWaitReportAndGetUrl_(taskId, store.api_key);
        const csv = wbDownloadReportCsv_(taskId, store.api_key);
        const rows = parseCsv_(csv);
        
        if (rows.length > 0) {
          // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
          const headerMap = normalizeHeaderMap_(rows[0]);
          const data = rows.slice(1).map(r => ({
            nmId: pick_(r, headerMap.nmId),
            supplierArticle: pick_(r, headerMap.supplierArticle),
            barcode: pick_(r, headerMap.barcode),
            techSize: pick_(r, headerMap.techSize),
            warehouseName: pick_(r, headerMap.warehouseName),
            warehouseId: pick_(r, headerMap.warehouseId),
            quantity: toNum_(pick_(r, headerMap.quantity)),
            reserve: toNum_(pick_(r, headerMap.reserve)),
            inWayToClient: toNum_(pick_(r, headerMap.inWayToClient)),
            inWayFromClient: toNum_(pick_(r, headerMap.inWayFromClient)),
            store_name: store.name
          }));
          
          // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç –¥–ª—è —ç—Ç–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
          writeWBToGoogleSheets(data);
          totalProcessed += data.length;
        }
        
        console.log(`  WB –º–∞–≥–∞–∑–∏–Ω "${store.name}" –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
        
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ WB –º–∞–≥–∞–∑–∏–Ω–∞ "${store.name}":`, error);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏
      }
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
    if (originalActiveStore) {
      setActiveWBStore(originalActiveStore.id);
    }
    
    console.log(`–í—ã–≥—Ä—É–∑–∫–∞ —Å–æ –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`);
    
    SpreadsheetApp.getUi().alert('–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${stores.length} WB –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≤—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å–æ –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤:', error);
    throw error;
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ—Ç—á—ë—Ç "Warehouses Remains Report" –≤ WB
 */
function wbCreateWarehouseRemainsReport_(apiKey) {
  const url = WB_ANALYTICS_HOST + '/api/v1/warehouse_remains';
  const resp = UrlFetchApp.fetch(url, {
    method: 'get',
    muteHttpExceptions: true,
    headers: {
      'Authorization': apiKey
    }
  });
  
  const code = resp.getResponseCode();
  if (code < 200 || code >= 300) {
    throw new Error(`WB create report: HTTP ${code} ‚Äî ${resp.getContentText()}`);
  }
  
  const body = JSON.parse(resp.getContentText() || '{}');
  console.log('WB API Response:', JSON.stringify(body, null, 2));
  
  // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–ª—É—á–µ–Ω–∏—è taskId (–Ω–æ–≤—ã–π API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç taskId –≤–º–µ—Å—Ç–æ reportId)
  const taskId = body?.data?.taskId || 
                 body?.data?.id || 
                 body?.data?.reportId || 
                 body?.reportId || 
                 body?.id ||
                 body?.requestId ||
                 body?.data?.requestId ||
                 body?.taskId;
  
  if (!taskId) {
    console.error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ taskId –≤ –æ—Ç–≤–µ—Ç–µ:', body);
    throw new Error(`WB create report: –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ taskId. –û—Ç–≤–µ—Ç: ${JSON.stringify(body)}`);
  }
  
  console.log(`–ü–æ–ª—É—á–µ–Ω taskId: ${taskId}`);
  return taskId;
}

/**
 * –ñ–¥—ë—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á—ë—Ç–∞ –∏ –ø–æ–ª—É—á–∞–µ—Ç URL —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
 */
function wbWaitReportAndGetUrl_(taskId, apiKey) {
  const started = Date.now();
  
  while (Date.now() - started < WB_REPORT_TIMEOUT_MS) {
    Utilities.sleep(WB_REPORT_POLL_INTERVAL_MS);
    
    const url = WB_ANALYTICS_HOST + '/api/v1/warehouse_remains';
    const resp = UrlFetchApp.fetch(url + '?id=' + encodeURIComponent(taskId), {
      method: 'get',
      muteHttpExceptions: true,
      headers: {
        'Authorization': apiKey
      }
    });
    
    if (resp.getResponseCode() === 200) {
      const body = JSON.parse(resp.getContentText() || '{}');
      console.log(`WB Report Status Response:`, JSON.stringify(body, null, 2));
      
      const status = (body?.data?.status || body?.status || '').toLowerCase();
      console.log(`Report status: ${status}`);
      
      if (status === 'ready' || status === 'done' || status === 'success') {
        const downloadUrl = body?.data?.file || 
                           body?.data?.downloadUrl || 
                           body?.downloadUrl || 
                           body?.file ||
                           body?.data?.url ||
                           body?.url;
        
        if (!downloadUrl) {
          console.error('–ù–µ –Ω–∞–π–¥–µ–Ω downloadUrl –≤ –æ—Ç–≤–µ—Ç–µ:', body);
          throw new Error(`WB report ready, –Ω–æ –Ω–µ—Ç downloadUrl. –û—Ç–≤–µ—Ç: ${JSON.stringify(body)}`);
        }
        
        console.log(`–ü–æ–ª—É—á–µ–Ω downloadUrl: ${downloadUrl}`);
        return downloadUrl;
      }
      
      if (status === 'failed' || status === 'error') {
        throw new Error('WB report status: ' + status);
      }
    }
  }
  
  throw new Error('WB report: –æ–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–µ–≤—ã—Å–∏–ª–æ –ª–∏–º–∏—Ç');
}

/**
 * –°–∫–∞—á–∏–≤–∞–µ—Ç CSV-—Ñ–∞–π–ª –æ—Ç—á—ë—Ç–∞ –ø–æ taskId
 */
function wbDownloadReportCsv_(taskId, apiKey) {
  // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–æ taskId
  const statusUrl = WB_ANALYTICS_HOST + '/api/v1/warehouse_remains';
  const statusResp = UrlFetchApp.fetch(statusUrl + '?id=' + encodeURIComponent(taskId), {
    method: 'get',
    muteHttpExceptions: true,
    headers: {
      'Authorization': apiKey
    }
  });
  
  if (statusResp.getResponseCode() !== 200) {
    throw new Error(`WB get download URL: HTTP ${statusResp.getResponseCode()} ‚Äî ${statusResp.getContentText()}`);
  }
  
  const statusBody = JSON.parse(statusResp.getContentText() || '{}');
  const downloadUrl = statusBody?.data?.file || 
                     statusBody?.data?.downloadUrl || 
                     statusBody?.downloadUrl || 
                     statusBody?.file ||
                     statusBody?.data?.url ||
                     statusBody?.url;
  
  if (!downloadUrl) {
    throw new Error(`WB download: –Ω–µ –Ω–∞–π–¥–µ–Ω downloadUrl –¥–ª—è taskId ${taskId}. –û—Ç–≤–µ—Ç: ${JSON.stringify(statusBody)}`);
  }
  
  console.log(`–°–∫–∞—á–∏–≤–∞–µ–º –æ—Ç—á—ë—Ç –ø–æ URL: ${downloadUrl}`);
  
  // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
  const resp = UrlFetchApp.fetch(downloadUrl, {
    method: 'get',
    muteHttpExceptions: true,
    headers: {
      'Authorization': apiKey
    }
  });
  
  const code = resp.getResponseCode();
  if (code < 200 || code >= 300) {
    throw new Error(`WB download CSV: HTTP ${code} ‚Äî ${resp.getContentText()}`);
  }
  
  return resp.getContentText();
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ WB –≤ Google –¢–∞–±–ª–∏—Ü—ã
 */
function writeWBToGoogleSheets(data) {
  const config = getWBConfig();
  
  // –ü–æ–ª—É—á–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã
  let spreadsheetId = config.SPREADSHEET_ID;
  
  // –ï—Å–ª–∏ ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
  if (!spreadsheetId) {
    spreadsheetId = SpreadsheetApp.getActiveSpreadsheet().getId();
    console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É: ${spreadsheetId}`);
  }
  
  console.log(`–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å ID: ${spreadsheetId}`);
  
  let spreadsheet;
  try {
    spreadsheet = SpreadsheetApp.openById(spreadsheetId);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å ID ${spreadsheetId}:`, error);
    // –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
    spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É');
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞–≥–∞–∑–∏–Ω–∞
  const storeName = config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω';
  const sheetName = sanitizeSheetName(storeName);
  
  console.log(`–°–æ–∑–¥–∞–µ–º/–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–∏—Å—Ç: ${sheetName}`);
  
  let sheet = spreadsheet.getSheetByName(sheetName);
  
  // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!sheet) {
    sheet = spreadsheet.insertSheet(sheetName);
  }
  
  // –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∏–∞–ø–∞–∑–æ–Ω —Å –¥–∞–Ω–Ω—ã–º–∏ (A:K)
  const lastRow = sheet.getLastRow();
  if (lastRow > 0) {
    const range = sheet.getRange(1, 1, lastRow, 11); // 11 –∫–æ–ª–æ–Ω–æ–∫ A-K
    range.clear();
  }
  
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è WB
  const headers = [
    '–ú–∞–≥–∞–∑–∏–Ω',
    'nmId',
    '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
    '–®—Ç—Ä–∏—Ö–∫–æ–¥',
    '–†–∞–∑–º–µ—Ä',
    '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞',
    'ID —Å–∫–ª–∞–¥–∞',
    '–û—Å—Ç–∞—Ç–æ–∫',
    '–ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ',
    '–í –ø—É—Ç–∏ –∫ –∫–ª–∏–µ–Ω—Ç—É',
    '–í –ø—É—Ç–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞'
  ];
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  const headerRange = sheet.getRange(1, 1, 1, headers.length);
  headerRange.setFontWeight('bold');
  headerRange.setBackground('#E8F0FE');
  
  if (data.length === 0) {
    console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
    return;
  }
  
  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  const rows = data.map(item => [
    item.store_name || config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω',
    item.nmId || '',
    item.supplierArticle || '',
    item.barcode || '',
    item.techSize || '',
    item.warehouseName || '',
    item.warehouseId || '',
    item.quantity || 0,
    item.reserve || 0,
    item.inWayToClient || 0,
    item.inWayFromClient || 0
  ]);
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  if (rows.length > 0) {
    try {
      const dataRange = sheet.getRange(2, 1, rows.length, headers.length);
      dataRange.setValues(rows);
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
      const filterRange = sheet.getRange(1, 1, rows.length + 1, headers.length);
      filterRange.createFilter();
      
      console.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${rows.length} —Å—Ç—Ä–æ–∫ –≤ Google –¢–∞–±–ª–∏—Ü—ã`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      throw error;
    }
  } else {
    console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
  }
}

/**
 * –ü–∞—Ä—Å–∏—Ç CSV –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫
 */
function parseCsv_(csv) {
  const rows = Utilities.parseCsv(csv, ',');
  return rows;
}

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫ –æ–∂–∏–¥–∞–µ–º—ã–º –∫–ª—é—á–∞–º
 */
function normalizeHeaderMap_(headerRow) {
  const map = {};
  const norm = s => String(s || '').trim().toLowerCase();
  
  headerRow.forEach((h, i) => {
    const n = norm(h);
    if (['nmid', 'nm_id', 'nm id', 'nm'].includes(n)) map.nmId = i;
    if (['supplierarticle', 'supplier_article', 'sa', 'vendorcode'].includes(n)) map.supplierArticle = i;
    if (['barcode', 'bar_code', '—à—Ç—Ä–∏—Ö–∫–æ–¥'].includes(n)) map.barcode = i;
    if (['techsize', 'size', 'tech_size', '—Ä–∞–∑–º–µ—Ä'].includes(n)) map.techSize = i;
    if (['warehousename', 'warehouse_name', '—Å–∫–ª–∞–¥'].includes(n)) map.warehouseName = i;
    if (['warehouseid', 'warehouse_id', 'id —Å–∫–ª–∞–¥–∞'].includes(n)) map.warehouseId = i;
    if (['quantity', 'qty', 'present', '–æ—Å—Ç–∞—Ç–æ–∫'].includes(n)) map.quantity = i;
    if (['reserve', 'reserved'].includes(n)) map.reserve = i;
    if (['inwaytoclient', 'in_way_to_client'].includes(n)) map.inWayToClient = i;
    if (['inwayfromclient', 'in_way_from_client'].includes(n)) map.inWayFromClient = i;
  });
  
  return map;
}

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */
function pick_(row, idx) { 
  return (idx == null) ? '' : row[idx]; 
}

function toNum_(v) { 
  return Number(String(v || '').replace(',', '.')) || 0; 
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WB API
 */
function testWBConnection() {
  try {
    const config = getWBConfig();
    
    if (!config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WB API...');
    console.log(`API Key: ${config.API_KEY.substring(0, 10)}...`);
    
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ endpoints
    const endpoints = [
      '/api/v1/warehouse_remains',
      '/api/v1/warehouses',
      '/api/v1/supplier/warehouses',
      '/api/v1/supplier/warehouse_remains'
    ];
    
    let success = false;
    let lastError = '';
    
    for (const endpoint of endpoints) {
      try {
        console.log(`–ü—Ä–æ–±—É–µ–º endpoint: ${WB_ANALYTICS_HOST}${endpoint}`);
        
        const resp = UrlFetchApp.fetch(WB_ANALYTICS_HOST + endpoint, {
          method: 'get',
          muteHttpExceptions: true,
          headers: {
            'Authorization': config.API_KEY
          }
        });
        
        const code = resp.getResponseCode();
        console.log(`Response code: ${code}`);
        
        if (code === 200) {
          const body = resp.getContentText();
          console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç ${endpoint}:`, body.substring(0, 500));
          success = true;
          break;
        } else {
          const errorText = resp.getContentText();
          console.log(`‚ùå –û—à–∏–±–∫–∞ ${code} —Å ${endpoint}:`, errorText);
          lastError = `HTTP ${code}: ${errorText}`;
        }
        
      } catch (error) {
        console.log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ —Å ${endpoint}:`, error.message);
        lastError = error.message;
      }
    }
    
    if (success) {
      SpreadsheetApp.getUi().alert('–£—Å–ø–µ—Ö', '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WB API —Ä–∞–±–æ—Ç–∞–µ—Ç!', SpreadsheetApp.getUi().ButtonSet.OK);
    } else {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WB API. –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${lastError}`, SpreadsheetApp.getUi().ButtonSet.OK);
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WB API:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π WB API —Å taskId –¥–ª—è –æ—Ç—á—ë—Ç–∞ "Warehouses Remains"
 */
function testWBTaskIdAPI() {
  try {
    const config = getWBConfig();
    
    if (!config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π WB API —Å taskId...');
    console.log(`API Key: ${config.API_KEY.substring(0, 10)}...`);
    
    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞
    console.log('1. –°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç...');
    const taskId = wbCreateWarehouseRemainsReport_(config.API_KEY);
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω taskId: ${taskId}`);
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç—á—ë—Ç–∞
    console.log('2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç—á—ë—Ç–∞...');
    let attempts = 0;
    const maxAttempts = 5;
    
    while (attempts < maxAttempts) {
      attempts++;
      console.log(`–ü–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts}...`);
      
      const url = WB_ANALYTICS_HOST + '/api/v1/warehouse_remains';
      const resp = UrlFetchApp.fetch(url + '?id=' + encodeURIComponent(taskId), {
        method: 'get',
        muteHttpExceptions: true,
        headers: {
          'Authorization': config.API_KEY
        }
      });
      
      if (resp.getResponseCode() === 200) {
        const body = JSON.parse(resp.getContentText() || '{}');
        console.log(`‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç—á—ë—Ç–∞:`, JSON.stringify(body, null, 2));
        
        const status = (body?.data?.status || body?.status || '').toLowerCase();
        console.log(`–°—Ç–∞—Ç—É—Å: ${status}`);
        
        if (status === 'ready' || status === 'done' || status === 'success') {
          console.log('‚úÖ –û—Ç—á—ë—Ç –≥–æ—Ç–æ–≤!');
          
          // –¢–µ—Å—Ç 3: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞
          console.log('3. –°–∫–∞—á–∏–≤–∞–µ–º –æ—Ç—á—ë—Ç...');
          const csv = wbDownloadReportCsv_(taskId, config.API_KEY);
          console.log(`‚úÖ –û—Ç—á—ë—Ç —Å–∫–∞—á–∞–Ω, —Ä–∞–∑–º–µ—Ä: ${csv.length} —Å–∏–º–≤–æ–ª–æ–≤`);
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏
          const lines = csv.split('\n');
          console.log(`–ü–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏ –æ—Ç—á—ë—Ç–∞:`);
          lines.slice(0, 3).forEach((line, index) => {
            console.log(`${index + 1}: ${line}`);
          });
          
          SpreadsheetApp.getUi().alert('–£—Å–ø–µ—Ö', `–¢–µ—Å—Ç WB API —Å taskId –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ!\nTaskId: ${taskId}\n–†–∞–∑–º–µ—Ä –æ—Ç—á—ë—Ç–∞: ${csv.length} —Å–∏–º–≤–æ–ª–æ–≤`, SpreadsheetApp.getUi().ButtonSet.OK);
          return;
        } else if (status === 'failed' || status === 'error') {
          throw new Error(`–û—Ç—á—ë—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: ${status}`);
        } else {
          console.log(`–û—Ç—á—ë—Ç –µ—â—ë –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è (—Å—Ç–∞—Ç—É—Å: ${status}), –∂–¥—ë–º...`);
          if (attempts < maxAttempts) {
            Utilities.sleep(3000); // –ñ–¥—ë–º 3 —Å–µ–∫—É–Ω–¥—ã
          }
        }
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞ HTTP ${resp.getResponseCode()}: ${resp.getContentText()}`);
      }
    }
    
    console.log('‚ö†Ô∏è –û—Ç—á—ë—Ç –Ω–µ –≥–æ—Ç–æ–≤ –∑–∞ –æ—Ç–≤–µ–¥—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è, –Ω–æ API —Ä–∞–±–æ—Ç–∞–µ—Ç');
    SpreadsheetApp.getUi().alert('–ß–∞—Å—Ç–∏—á–Ω—ã–π —É—Å–ø–µ—Ö', `WB API —Å taskId —Ä–∞–±–æ—Ç–∞–µ—Ç!\nTaskId: ${taskId}\n–û—Ç—á—ë—Ç –µ—â—ë –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WB API —Å taskId:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç v4 API —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 */
function testV4Pagination() {
  try {
    const config = getOzonConfig();
    if (!config.CLIENT_ID || !config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log('–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç v4 API —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π...');
    
    const result = fetchAllFboStocksV4();
    
    console.log(`–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ü–æ–ª—É—á–µ–Ω–æ FBO —Ç–æ–≤–∞—Ä–æ–≤: ${result.length}`);
    
    if (result.length > 0) {
      console.log('–ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö:');
      result.slice(0, 3).forEach((item, index) => {
        console.log(`${index + 1}. ${item.offer_id} - FBO: ${item.fbo_present}, Reserved: ${item.fbo_reserved}`);
      });
    }
    
    SpreadsheetApp.getUi().alert('–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω', `–ü–æ–ª—É—á–µ–Ω–æ FBO —Ç–æ–≤–∞—Ä–æ–≤: ${result.length}`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ v4 API:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –î–µ—Ç–∞–ª—å–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç v3 API
 */
function analyzeV3Response() {
  const config = getOzonConfig();
  if (!config.CLIENT_ID || !config.API_KEY) {
    console.error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏!');
    return;
  }
  
  const warehouses = getWarehouses();
  if (warehouses.length === 0) {
    console.error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    return;
  }
  
  const testWarehouseId = warehouses[0].warehouse_id;
  console.log(`–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç v3 API –¥–ª—è —Å–∫–ª–∞–¥–∞: ${testWarehouseId}`);
  
  try {
    const url = `${config.BASE_URL}/v3/product/info/stocks`;
    console.log(`URL: ${url}`);
    
    const options = {
      method: 'POST',
      headers: {
        'Client-Id': config.CLIENT_ID,
        'Api-Key': config.API_KEY,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify({
        filter: {
          warehouse_id: [testWarehouseId]
        },
        limit: 10
      }),
      muteHttpExceptions: true
    };
    
    const response = UrlFetchApp.fetch(url, options);
    const responseCode = response.getResponseCode();
    const responseText = response.getContentText();
    
    console.log(`Response code: ${responseCode}`);
    console.log(`Response text: ${responseText}`);
    
    if (responseCode === 200) {
      const data = JSON.parse(responseText);
      console.log('üìã –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ v3:');
      console.log(JSON.stringify(data, null, 2));
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ v3 API:', error);
  }
}

/**
 * –î–µ—Ç–∞–ª—å–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç v4 API
 */
function analyzeV4Response() {
  const config = getOzonConfig();
  if (!config.CLIENT_ID || !config.API_KEY) {
    console.error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏!');
    return;
  }
  
  const warehouses = getWarehouses();
  if (warehouses.length === 0) {
    console.error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    return;
  }
  
  const testWarehouseId = warehouses[0].warehouse_id;
  console.log(`–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç v4 API –¥–ª—è —Å–∫–ª–∞–¥–∞: ${testWarehouseId}`);
  
  try {
    const url = `${config.BASE_URL}/v4/product/info/stocks`;
    console.log(`URL: ${url}`);
    
    const options = {
      method: 'POST',
      headers: {
        'Client-Id': config.CLIENT_ID,
        'Api-Key': config.API_KEY,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify({
        filter: {
          warehouse_id: [testWarehouseId]
        },
        limit: 10
      }),
      muteHttpExceptions: true
    };
    
    const response = UrlFetchApp.fetch(url, options);
    const responseCode = response.getResponseCode();
    const responseText = response.getContentText();
    
    console.log(`Response code: ${responseCode}`);
    console.log(`Response text: ${responseText}`);
    
    if (responseCode === 200) {
      const data = JSON.parse(responseText);
      console.log('üìã –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:');
      console.log(JSON.stringify(data, null, 2));
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ v4 API:', error);
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ API endpoints –¥–ª—è –æ—Å—Ç–∞—Ç–∫–æ–≤
 */
function testStocksEndpoints() {
  const config = getOzonConfig();
  if (!config.CLIENT_ID || !config.API_KEY) {
    console.error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏!');
    return;
  }
  
  const warehouses = getWarehouses();
  if (warehouses.length === 0) {
    console.error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    return;
  }
  
  const testWarehouseId = warehouses[0].warehouse_id;
  console.log(`–¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints –¥–ª—è —Å–∫–ª–∞–¥–∞: ${testWarehouseId}`);
  
  const apiEndpoints = [
    '/v3/product/info/stocks',
    '/v2/product/info/stocks', 
    '/v1/product/info/stocks',
    '/v4/product/info/stocks',
    '/v1/product/stocks',
    '/v2/product/stocks',
    '/v1/warehouse/stocks',
    '/v2/warehouse/stocks'
  ];
  
  apiEndpoints.forEach(endpoint => {
    try {
      const url = `${config.BASE_URL}${endpoint}`;
      console.log(`\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: ${endpoint}`);
      
      const options = {
        method: 'POST',
        headers: {
          'Client-Id': config.CLIENT_ID,
          'Api-Key': config.API_KEY,
          'Content-Type': 'application/json'
        },
        payload: JSON.stringify({
          filter: {
            warehouse_id: [testWarehouseId]
          },
          limit: 10
        }),
        muteHttpExceptions: true
      };
      
      const response = UrlFetchApp.fetch(url, options);
      const responseCode = response.getResponseCode();
      const responseText = response.getContentText();
      
      if (responseCode === 200) {
        console.log(`‚úÖ ${endpoint} - OK (200)`);
        try {
          const data = JSON.parse(responseText);
          console.log(`   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:`, Object.keys(data));
          if (data.result) {
            console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç:`, typeof data.result, Array.isArray(data.result) ? `–º–∞—Å—Å–∏–≤ –∏–∑ ${data.result.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤` : Object.keys(data.result));
          }
        } catch (parseError) {
          console.log(`   –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: ${parseError.message}`);
        }
      } else {
        console.log(`‚ùå ${endpoint} - ${responseCode}: ${responseText.substring(0, 200)}...`);
      }
      
    } catch (error) {
      console.log(`‚ùå ${endpoint} - –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: ${error.message}`);
    }
  });
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 9:00)
 */
function createDailyTrigger() {
  // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
  const triggers = ScriptApp.getProjectTriggers();
  triggers.forEach(trigger => {
    if (trigger.getHandlerFunction() === 'exportFBOStocks') {
      ScriptApp.deleteTrigger(trigger);
    }
  });
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä
  ScriptApp.newTrigger('exportFBOStocks')
    .timeBased()
    .everyDays(1)
    .atHour(9)
    .create();
    
  console.log('–¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–æ–∑–¥–∞–Ω (9:00)');
}

/**
 * –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
 */
function deleteAllTriggers() {
  const triggers = ScriptApp.getProjectTriggers();
  triggers.forEach(trigger => {
    ScriptApp.deleteTrigger(trigger);
  });
  console.log('–í—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã');
}
