/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å–æ —Å–∫–ª–∞–¥–æ–≤ FBO Ozon Seller –≤ Google –¢–∞–±–ª–∏—Ü—ã
 * –¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–µ–π Ozon –∏ Google Sheets
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API Ozon
const OZON_CONFIG = {
  BASE_URL: 'https://api-seller.ozon.ru'
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ PropertiesService
 */
function getOzonConfig() {
  const properties = PropertiesService.getScriptProperties();
  
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
  const activeStore = getActiveStore();
  
  if (activeStore) {
    return {
      CLIENT_ID: activeStore.clientId,
      API_KEY: activeStore.apiKey,
      SPREADSHEET_ID: properties.getProperty('GOOGLE_SPREADSHEET_ID'),
      BASE_URL: OZON_CONFIG.BASE_URL,
      STORE_NAME: activeStore.name
    };
  }
  
  // Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  return {
    CLIENT_ID: properties.getProperty('OZON_CLIENT_ID'),
    API_KEY: properties.getProperty('OZON_API_KEY'),
    SPREADSHEET_ID: properties.getProperty('GOOGLE_SPREADSHEET_ID'),
    BASE_URL: OZON_CONFIG.BASE_URL,
    STORE_NAME: 'Legacy Store'
  };
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é WB –∏–∑ PropertiesService
 */
function getWBConfig() {
  const properties = PropertiesService.getScriptProperties();
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ WB –º–∞–≥–∞–∑–∏–Ω–∞
  const activeStore = getActiveWBStore();
  
  if (activeStore) {
    return {
      API_KEY: activeStore.api_key,
      SPREADSHEET_ID: properties.getProperty('GOOGLE_SPREADSHEET_ID'),
      STORE_NAME: activeStore.name
    };
  }
  
  // Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  return {
    API_KEY: properties.getProperty('WB_API_KEY'),
    SPREADSHEET_ID: properties.getProperty('GOOGLE_SPREADSHEET_ID'),
    STORE_NAME: 'Legacy WB Store'
  };
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–∞
 */
function getYandexConfig() {
  const properties = PropertiesService.getScriptProperties();
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–∞
  const activeStore = getActiveYandexStore();
  
  if (activeStore) {
    return {
      API_TOKEN: activeStore.api_token,
      CAMPAIGN_ID: activeStore.campaign_id,
      SPREADSHEET_ID: properties.getProperty('GOOGLE_SPREADSHEET_ID'),
      STORE_NAME: activeStore.name
    };
  }
  
  // Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  return {
    API_TOKEN: properties.getProperty('YANDEX_API_TOKEN'),
    CAMPAIGN_ID: properties.getProperty('YANDEX_CAMPAIGN_ID'),
    SPREADSHEET_ID: properties.getProperty('GOOGLE_SPREADSHEET_ID'),
    STORE_NAME: 'Legacy Yandex Store'
  };
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ PropertiesService
 */
function saveOzonConfig(clientId, apiKey, spreadsheetId) {
  const properties = PropertiesService.getScriptProperties();
  
  properties.setProperties({
    'OZON_CLIENT_ID': clientId,
    'OZON_API_KEY': apiKey,
    'GOOGLE_SPREADSHEET_ID': spreadsheetId
  });
  
  console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–±–µ–∑ API –∫–ª—é—á–µ–π)
 */
function showCurrentSettings() {
  const config = getOzonConfig();
  
  console.log('–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
  console.log('Client ID:', config.CLIENT_ID ? '***' + config.CLIENT_ID.slice(-4) : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('API Key:', config.API_KEY ? '***' + config.API_KEY.slice(-4) : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  console.log('Spreadsheet ID:', config.SPREADSHEET_ID || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ Google –¢–∞–±–ª–∏—Ü—ã
 */
function onOpen() {
  const ui = SpreadsheetApp.getUi();
  
  ui.createMenu('üõí Ozon FBO Export')
    .addItem('üìä –í—ã–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –æ—Å—Ç–∞—Ç–∫–∏ (–∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω)', 'exportFBOStocks')
    .addItem('üìä –í—ã–≥—Ä—É–∑–∏—Ç—å —Ç–æ–ª—å–∫–æ FBO –æ—Å—Ç–∞—Ç–∫–∏', 'exportOnlyFBOStocks')
    .addItem('üìä –í—ã–≥—Ä—É–∑–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã)', 'exportAllStoresStocks')
    .addItem('üìà –í—ã–≥—Ä—É–∑–∏—Ç—å —Ü–µ–Ω—ã (–∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω)', 'exportOzonPrices')
    .addItem('üìä –í—ã–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã (–≤—Å–µ —Ç–æ–≤–∞—Ä—ã)', 'exportOzonPricesDetailed')
    .addItem('üìä –í—ã–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã (–≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã)', 'exportAllStoresPricesDetailed')
    .addItem('üöÄ –¢–µ—Å—Ç v4 API —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π', 'testV4Pagination')
    .addSeparator()
    .addSubMenu(ui.createMenu('üè™ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏')
      .addItem('‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', 'addNewStore')
      .addItem('üìã –°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤', 'showStoresList')
      .addItem('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω', 'editStore')
      .addItem('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', 'deleteStore')
      .addItem('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω', 'switchActiveStore'))
    .addSeparator()
    .addSubMenu(ui.createMenu('üõí –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ WB –º–∞–≥–∞–∑–∏–Ω–∞–º–∏')
      .addItem('‚ûï –î–æ–±–∞–≤–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', 'addNewWBStore')
      .addItem('üìã –°–ø–∏—Å–æ–∫ WB –º–∞–≥–∞–∑–∏–Ω–æ–≤', 'showWBStoresList')
      .addItem('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', 'editWBStore')
      .addItem('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', 'deleteWBStore')
      .addItem('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω', 'switchActiveWBStore'))
    .addSubMenu(ui.createMenu('üõçÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–∞–º–∏')
      .addItem('‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', 'addNewYandexStore')
      .addItem('üìã –°–ø–∏—Å–æ–∫ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤', 'showYandexStoresList')
      .addItem('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', 'editYandexStore')
      .addItem('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', 'deleteYandexStore')
      .addItem('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', 'switchActiveYandexStore'))
    .addSeparator()
    .addSubMenu(ui.createMenu('üìä WB –í—ã–≥—Ä—É–∑–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤')
      .addItem('üì¶ –í—ã–≥—Ä—É–∑–∏—Ç—å FBO –æ—Å—Ç–∞—Ç–∫–∏ (–∞–∫—Ç–∏–≤–Ω—ã–π WB)', 'exportWBFBOStocks')
      .addItem('üì¶ –í—ã–≥—Ä—É–∑–∏—Ç—å FBO –æ—Å—Ç–∞—Ç–∫–∏ (Statistics API)', 'loadAllStocks')
      .addItem('üì¶ –í—ã–≥—Ä—É–∑–∏—Ç—å FBO –æ—Å—Ç–∞—Ç–∫–∏ (—Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏)', 'exportWBFBOStocksWithLongDelays')
      .addItem('üì¶ –í—ã–≥—Ä—É–∑–∏—Ç—å FBO –æ—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ WB –º–∞–≥–∞–∑–∏–Ω—ã)', 'exportAllWBStoresStocks')
      .addItem('üì¶ –í—ã–≥—Ä—É–∑–∏—Ç—å FBO –æ—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ WB –º–∞–≥–∞–∑–∏–Ω—ã, Statistics API)', 'exportAllWBStoresStocksStatisticsAPI')
      .addSeparator()
      .addItem('üìà –í—ã–≥—Ä—É–∑–∏—Ç—å —Ü–µ–Ω—ã (–∞–∫—Ç–∏–≤–Ω—ã–π WB)', 'exportWBPrices')
      .addItem('üìà –í—ã–≥—Ä—É–∑–∏—Ç—å —Ü–µ–Ω—ã (–≤—Å–µ WB –º–∞–≥–∞–∑–∏–Ω—ã)', 'exportAllWBStoresPrices')
      .addSeparator()
      .addItem('üìä –í—ã–≥—Ä—É–∑–∏—Ç—å —á–µ—Ä–µ–∑ Statistics API (–ø—Ä–æ–¥–∞–∂–∏)', 'exportWBStocksViaStatisticsAPI')
      .addItem('üß™ –¢–µ—Å—Ç WB API', 'testWBConnection')
      .addItem('üß™ –¢–µ—Å—Ç WB API (taskId)', 'testWBTaskIdAPI')
      .addItem('üß™ –¢–µ—Å—Ç WB Statistics API', 'testWBStatisticsAPI')
      .addItem('üß™ –¢–µ—Å—Ç WB Statistics API (–ø–µ—Ä–∏–æ–¥—ã)', 'testWBStatisticsAPIWithPeriods')
      .addItem('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ—Ç—á—ë—Ç–∞ WB', 'configureWBReportParams')
      .addItem('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–º–∏—Ç–æ–≤ WB API', 'configureWBRateLimits'))
    .addSubMenu(ui.createMenu('üìä –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –í—ã–≥—Ä—É–∑–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤')
      .addItem('üì¶ –í—ã–≥—Ä—É–∑–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ (–∞–∫—Ç–∏–≤–Ω—ã–π –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç)', 'exportYandexStocks')
      .addItem('üì¶ –í—ã–≥—Ä—É–∑–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ (–≤—Å–µ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω—ã)', 'exportAllYandexStoresStocks')
      .addSeparator()
      .addItem('üìà –í—ã–≥—Ä—É–∑–∏—Ç—å —Ü–µ–Ω—ã (–∞–∫—Ç–∏–≤–Ω—ã–π –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç)', 'exportYandexPrices')
      .addSeparator()
      .addItem('üß™ –¢–µ—Å—Ç –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç API', 'testYandexConnection')
      .addItem('üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å –≤–∞—à–∏–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏', 'testYandexWithYourTokens'))
    .addSeparator()
    .addSubMenu(ui.createMenu('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
      .addItem('üìä ID Google –¢–∞–±–ª–∏—Ü—ã', 'setSpreadsheetId')
      .addItem('üìä –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É', 'setCurrentSpreadsheetId')
      .addItem('üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ', 'testOzonConnection')
      .addItem('üß™ –¢–µ—Å—Ç API endpoints', 'testStocksEndpoints')
      .addItem('üî¨ –ê–Ω–∞–ª–∏–∑ v3 API', 'analyzeV3Response')
      .addItem('üî¨ –ê–Ω–∞–ª–∏–∑ v4 API', 'analyzeV4Response')
      .addItem('üìã –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', 'showCurrentSettings'))
    .addSeparator()
    .addSubMenu(ui.createMenu('üìÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—Å—Ç–∞–º–∏')
      .addItem('üìã –°–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤', 'showStoreSheets')
      .addItem('üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ª–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤', 'deleteStoreSheets')
      .addItem('üîÑ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ª–∏—Å—Ç—ã', 'renameStoreSheets'))
    .addSeparator()
    .addSubMenu(ui.createMenu('‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è')
      .addItem('üïò –°–æ–∑–¥–∞—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä', 'createDailyTrigger')
      .addItem('‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã', 'deleteAllTriggers'))
    .addToUi();
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function getStoresList() {
  const properties = PropertiesService.getScriptProperties();
  const storesJson = properties.getProperty('OZON_STORES');
  
  if (!storesJson) {
    return [];
  }
  
  try {
    return JSON.parse(storesJson);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–ø–∏—Å–∫–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤:', error);
    return [];
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function getWBStoresList() {
  const properties = PropertiesService.getScriptProperties();
  const storesJson = properties.getProperty('WB_STORES');
  
  if (!storesJson) {
    return [];
  }
  
  try {
    return JSON.parse(storesJson);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–ø–∏—Å–∫–∞ WB –º–∞–≥–∞–∑–∏–Ω–æ–≤:', error);
    return [];
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function saveStoresList(stores) {
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('OZON_STORES', JSON.stringify(stores));
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ WB –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function saveWBStoresList(stores) {
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('WB_STORES', JSON.stringify(stores));
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
 */
function getActiveStore() {
  const properties = PropertiesService.getScriptProperties();
  const activeStoreId = properties.getProperty('ACTIVE_STORE_ID');
  
  if (!activeStoreId) {
    return null;
  }
  
  const stores = getStoresList();
  return stores.find(store => store.id === activeStoreId) || null;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω
 */
function getActiveWBStore() {
  const properties = PropertiesService.getScriptProperties();
  const activeStoreId = properties.getProperty('ACTIVE_WB_STORE_ID');
  
  if (!activeStoreId) {
    return null;
  }
  
  const stores = getWBStoresList();
  return stores.find(store => store.id === activeStoreId) || null;
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
 */
function setActiveStore(storeId) {
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('ACTIVE_STORE_ID', storeId);
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω
 */
function setActiveWBStore(storeId) {
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('ACTIVE_WB_STORE_ID', storeId);
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω
 */
function addNewStore() {
  const ui = SpreadsheetApp.getUi();
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω–∞
  const storeName = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞:', ui.ButtonSet.OK_CANCEL);
  if (storeName.getSelectedButton() !== ui.Button.OK) return;
  
  const clientId = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ Client ID:', ui.ButtonSet.OK_CANCEL);
  if (clientId.getSelectedButton() !== ui.Button.OK) return;
  
  const apiKey = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ API Key:', ui.ButtonSet.OK_CANCEL);
  if (apiKey.getSelectedButton() !== ui.Button.OK) return;
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω
  const newStore = {
    id: Utilities.getUuid(),
    name: storeName.getResponseText(),
    clientId: clientId.getResponseText(),
    apiKey: apiKey.getResponseText(),
    createdAt: new Date().toISOString()
  };
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
  const stores = getStoresList();
  stores.push(newStore);
  saveStoresList(stores);
  
  // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –º–∞–≥–∞–∑–∏–Ω, –¥–µ–ª–∞–µ–º –µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã–º
  if (stores.length === 1) {
    setActiveStore(newStore.id);
  }
  
  ui.alert('–£—Å–ø–µ—Ö', `–ú–∞–≥–∞–∑–∏–Ω "${newStore.name}" –¥–æ–±–∞–≤–ª–µ–Ω!`, ui.ButtonSet.OK);
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π WB –º–∞–≥–∞–∑–∏–Ω
 */
function addNewWBStore() {
  const ui = SpreadsheetApp.getUi();
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω–∞
  const storeName = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞:', ui.ButtonSet.OK_CANCEL);
  if (storeName.getSelectedButton() !== ui.Button.OK) return;
  
  const apiKey = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ API Key:', ui.ButtonSet.OK_CANCEL);
  if (apiKey.getSelectedButton() !== ui.Button.OK) return;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
  if (!storeName.getResponseText().trim() || !apiKey.getResponseText().trim()) {
    ui.alert('–û—à–∏–±–∫–∞', '–í—Å–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!', ui.ButtonSet.OK);
    return;
  }
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω
  const newStore = {
    id: Utilities.getUuid(),
    name: storeName.getResponseText().trim(),
    api_key: apiKey.getResponseText().trim(),
    created_at: new Date().toISOString()
  };
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
  const stores = getWBStoresList();
  stores.push(newStore);
  saveWBStoresList(stores);
  
  // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –º–∞–≥–∞–∑–∏–Ω, –¥–µ–ª–∞–µ–º –µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã–º
  if (stores.length === 1) {
    setActiveWBStore(newStore.id);
  }
  
  ui.alert('–£—Å–ø–µ—Ö', `WB –º–∞–≥–∞–∑–∏–Ω "${newStore.name}" –¥–æ–±–∞–≤–ª–µ–Ω!`, ui.ButtonSet.OK);
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function showStoresList() {
  const stores = getStoresList();
  const activeStore = getActiveStore();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø—É—Å—Ç', '–î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏"', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  let message = '–°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤:\n\n';
  stores.forEach((store, index) => {
    const isActive = activeStore && store.id === activeStore.id ? ' (–ê–ö–¢–ò–í–ù–´–ô)' : '';
    message += `${index + 1}. ${store.name}${isActive}\n`;
    message += `   Client ID: ***${store.clientId.slice(-4)}\n`;
    message += `   API Key: ***${store.apiKey.slice(-4)}\n\n`;
  });
  
  SpreadsheetApp.getUi().alert('–°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤', message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
 */
function switchActiveStore() {
  const stores = getStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  if (stores.length === 1) {
    SpreadsheetApp.getUi().alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–£ –≤–∞—Å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –º–∞–≥–∞–∑–∏–Ω', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const selectedStore = stores[selectedIndex];
    setActiveStore(selectedStore.id);
    ui.alert('–£—Å–ø–µ—Ö', `–ê–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: ${selectedStore.name}`, ui.ButtonSet.OK);
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –º–∞–≥–∞–∑–∏–Ω
 */
function editStore() {
  const stores = getStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const store = stores[selectedIndex];
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const newName = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω', `–ù–∞–∑–≤–∞–Ω–∏–µ (—Ç–µ–∫—É—â–µ–µ: ${store.name}):`, ui.ButtonSet.OK_CANCEL);
    if (newName.getSelectedButton() !== ui.Button.OK) return;
    
    const newClientId = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω', `Client ID (—Ç–µ–∫—É—â–∏–π: ***${store.clientId.slice(-4)}):`, ui.ButtonSet.OK_CANCEL);
    if (newClientId.getSelectedButton() !== ui.Button.OK) return;
    
    const newApiKey = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞–≥–∞–∑–∏–Ω', `API Key (—Ç–µ–∫—É—â–∏–π: ***${store.apiKey.slice(-4)}):`, ui.ButtonSet.OK_CANCEL);
    if (newApiKey.getSelectedButton() !== ui.Button.OK) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    store.name = newName.getResponseText();
    store.clientId = newClientId.getResponseText();
    store.apiKey = newApiKey.getResponseText();
    
    saveStoresList(stores);
    ui.alert('–£—Å–ø–µ—Ö', `–ú–∞–≥–∞–∑–∏–Ω "${store.name}" –æ–±–Ω–æ–≤–ª–µ–Ω!`, ui.ButtonSet.OK);
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –£–¥–∞–ª—è–µ—Ç –º–∞–≥–∞–∑–∏–Ω
 */
function deleteStore() {
  const stores = getStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–£–¥–∞–ª–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const storeToDelete = stores[selectedIndex];
    const confirm = ui.alert('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', `–£–¥–∞–ª–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω "${storeToDelete.name}"?`, ui.ButtonSet.YES_NO);
    
    if (confirm === ui.Button.YES) {
      stores.splice(selectedIndex, 1);
      saveStoresList(stores);
      
      // –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω, –≤—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π
      const activeStore = getActiveStore();
      if (!activeStore && stores.length > 0) {
        setActiveStore(stores[0].id);
      }
      
      ui.alert('–£—Å–ø–µ—Ö', '–ú–∞–≥–∞–∑–∏–Ω —É–¥–∞–ª–µ–Ω!', ui.ButtonSet.OK);
    }
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ WB –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function showWBStoresList() {
  const stores = getWBStoresList();
  const activeStore = getActiveWBStore();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  let message = 'WB –ú–∞–≥–∞–∑–∏–Ω—ã:\n\n';
  stores.forEach((store, index) => {
    const isActive = activeStore && store.id === activeStore.id ? ' (–ê–ö–¢–ò–í–ù–´–ô)' : '';
    message += `${index + 1}. ${store.name}${isActive}\n`;
  });
  
  SpreadsheetApp.getUi().alert('WB –ú–∞–≥–∞–∑–∏–Ω—ã', message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω
 */
function switchActiveWBStore() {
  const stores = getWBStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const selectedStore = stores[selectedIndex];
    setActiveWBStore(selectedStore.id);
    ui.alert('–£—Å–ø–µ—Ö', `–ê–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω: ${selectedStore.name}`, ui.ButtonSet.OK);
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç WB –º–∞–≥–∞–∑–∏–Ω
 */
function editWBStore() {
  const stores = getWBStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ WB –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const storeToEdit = stores[selectedIndex];
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const newName = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', `–ù–∞–∑–≤–∞–Ω–∏–µ (—Ç–µ–∫—É—â–µ–µ: ${storeToEdit.name}):`, ui.ButtonSet.OK_CANCEL);
    if (newName.getSelectedButton() !== ui.Button.OK) return;
    
    const newApiKey = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', 'API Key (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º —á—Ç–æ–±—ã –Ω–µ –º–µ–Ω—è—Ç—å):', ui.ButtonSet.OK_CANCEL);
    if (newApiKey.getSelectedButton() !== ui.Button.OK) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    if (newName.getResponseText().trim()) {
      storeToEdit.name = newName.getResponseText().trim();
    }
    
    if (newApiKey.getResponseText().trim()) {
      storeToEdit.api_key = newApiKey.getResponseText().trim();
    }
    
    storeToEdit.updated_at = new Date().toISOString();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    saveWBStoresList(stores);
    
    ui.alert('–£—Å–ø–µ—Ö', 'WB –º–∞–≥–∞–∑–∏–Ω –æ–±–Ω–æ–≤–ª–µ–Ω!', ui.ButtonSet.OK);
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –£–¥–∞–ª—è–µ—Ç WB –º–∞–≥–∞–∑–∏–Ω
 */
function deleteWBStore() {
  const stores = getWBStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ WB –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–£–¥–∞–ª–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const storeToDelete = stores[selectedIndex];
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
    const confirm = ui.alert('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', `–£–¥–∞–ª–∏—Ç—å WB –º–∞–≥–∞–∑–∏–Ω "${storeToDelete.name}"?`, ui.ButtonSet.YES_NO);
    if (confirm === ui.Button.YES) {
      stores.splice(selectedIndex, 1);
      saveWBStoresList(stores);
      
      // –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω, –≤—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π
      const activeStore = getActiveWBStore();
      if (!activeStore && stores.length > 0) {
        setActiveWBStore(stores[0].id);
      }
      
      ui.alert('–£—Å–ø–µ—Ö', 'WB –º–∞–≥–∞–∑–∏–Ω —É–¥–∞–ª–µ–Ω!', ui.ButtonSet.OK);
    }
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

// ==================== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –Ø–ù–î–ï–ö–° –ú–ê–†–ö–ï–¢ –ú–ê–ì–ê–ó–ò–ù–ê–ú–ò ====================

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function getYandexStoresList() {
  const properties = PropertiesService.getScriptProperties();
  const storesJson = properties.getProperty('YANDEX_STORES');
  
  if (!storesJson) {
    return [];
  }
  
  try {
    return JSON.parse(storesJson);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤:', error);
    return [];
  }
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function saveYandexStoresList(stores) {
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('YANDEX_STORES', JSON.stringify(stores));
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω
 */
function getActiveYandexStore() {
  const properties = PropertiesService.getScriptProperties();
  const activeStoreId = properties.getProperty('ACTIVE_YANDEX_STORE_ID');
  
  if (!activeStoreId) {
    return null;
  }
  
  const stores = getYandexStoresList();
  return stores.find(store => store.id === activeStoreId) || null;
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω
 */
function setActiveYandexStore(storeId) {
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('ACTIVE_YANDEX_STORE_ID', storeId);
}

/**
 * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω
 */
function addNewYandexStore() {
  const ui = SpreadsheetApp.getUi();
  
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω–∞
  const storeName = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞:', ui.ButtonSet.OK_CANCEL);
  if (storeName.getSelectedButton() !== ui.Button.OK) return;
  
  const apiToken = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ API Token:', ui.ButtonSet.OK_CANCEL);
  if (apiToken.getSelectedButton() !== ui.Button.OK) return;
  
  const campaignId = ui.prompt('–î–æ–±–∞–≤–∏—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', '–í–≤–µ–¥–∏—Ç–µ Campaign ID:', ui.ButtonSet.OK_CANCEL);
  if (campaignId.getSelectedButton() !== ui.Button.OK) return;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
  if (!storeName.getResponseText().trim() || !apiToken.getResponseText().trim() || !campaignId.getResponseText().trim()) {
    ui.alert('–û—à–∏–±–∫–∞', '–í—Å–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!', ui.ButtonSet.OK);
    return;
  }
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω
  const newStore = {
    id: Utilities.getUuid(),
    name: storeName.getResponseText().trim(),
    api_token: apiToken.getResponseText().trim(),
    campaign_id: campaignId.getResponseText().trim(),
    created_at: new Date().toISOString()
  };
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
  const stores = getYandexStoresList();
  stores.push(newStore);
  saveYandexStoresList(stores);
  
  // –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –º–∞–≥–∞–∑–∏–Ω, –¥–µ–ª–∞–µ–º –µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã–º
  if (stores.length === 1) {
    setActiveYandexStore(newStore.id);
  }
  
  ui.alert('–£—Å–ø–µ—Ö', `–Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω "${newStore.name}" –¥–æ–±–∞–≤–ª–µ–Ω!`, ui.ButtonSet.OK);
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function showYandexStoresList() {
  const stores = getYandexStoresList();
  const activeStore = getActiveYandexStore();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  let message = '–Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –ú–∞–≥–∞–∑–∏–Ω—ã:\n\n';
  stores.forEach((store, index) => {
    const isActive = activeStore && store.id === activeStore.id ? ' (–ê–ö–¢–ò–í–ù–´–ô)' : '';
    message += `${index + 1}. ${store.name}${isActive}\n`;
    message += `   Campaign ID: ${store.campaign_id}\n`;
    message += `   API Token: ***${store.api_token.slice(-4)}\n\n`;
  });
  
  SpreadsheetApp.getUi().alert('–Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –ú–∞–≥–∞–∑–∏–Ω—ã', message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–π –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω
 */
function switchActiveYandexStore() {
  const stores = getYandexStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã–π –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const selectedStore = stores[selectedIndex];
    setActiveYandexStore(selectedStore.id);
    ui.alert('–£—Å–ø–µ—Ö', `–ê–∫—Ç–∏–≤–Ω—ã–π –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "${selectedStore.name}"`, ui.ButtonSet.OK);
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω
 */
function editYandexStore() {
  const stores = getYandexStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const storeToEdit = stores[selectedIndex];
    
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    const newName = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', `–ù–∞–∑–≤–∞–Ω–∏–µ (—Ç–µ–∫—É—â–µ–µ: ${storeToEdit.name}):`, ui.ButtonSet.OK_CANCEL);
    if (newName.getSelectedButton() !== ui.Button.OK) return;
    
    const newApiToken = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', 'API Token (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º —á—Ç–æ–±—ã –Ω–µ –º–µ–Ω—è—Ç—å):', ui.ButtonSet.OK_CANCEL);
    if (newApiToken.getSelectedButton() !== ui.Button.OK) return;
    
    const newCampaignId = ui.prompt('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', `Campaign ID (—Ç–µ–∫—É—â–∏–π: ${storeToEdit.campaign_id}):`, ui.ButtonSet.OK_CANCEL);
    if (newCampaignId.getSelectedButton() !== ui.Button.OK) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    if (newName.getResponseText().trim()) {
      storeToEdit.name = newName.getResponseText().trim();
    }
    if (newApiToken.getResponseText().trim()) {
      storeToEdit.api_token = newApiToken.getResponseText().trim();
    }
    if (newCampaignId.getResponseText().trim()) {
      storeToEdit.campaign_id = newCampaignId.getResponseText().trim();
    }
    
    storeToEdit.updated_at = new Date().toISOString();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    saveYandexStoresList(stores);
    
    ui.alert('–£—Å–ø–µ—Ö', '–Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω –æ–±–Ω–æ–≤–ª–µ–Ω!', ui.ButtonSet.OK);
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –£–¥–∞–ª—è–µ—Ç –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω
 */
function deleteYandexStore() {
  const stores = getYandexStoresList();
  
  if (stores.length === 0) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  const ui = SpreadsheetApp.getUi();
  let message = '–í—ã–±–µ—Ä–∏—Ç–µ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n\n';
  stores.forEach((store, index) => {
    message += `${index + 1}. ${store.name}\n`;
  });
  
  const response = ui.prompt('–£–¥–∞–ª–∏—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  const selectedIndex = parseInt(response.getResponseText()) - 1;
  
  if (selectedIndex >= 0 && selectedIndex < stores.length) {
    const storeToDelete = stores[selectedIndex];
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
    const confirm = ui.alert('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', `–£–¥–∞–ª–∏—Ç—å –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω "${storeToDelete.name}"?`, ui.ButtonSet.YES_NO);
    if (confirm === ui.Button.YES) {
      stores.splice(selectedIndex, 1);
      saveYandexStoresList(stores);
      
      // –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω, –≤—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π
      const activeStore = getActiveYandexStore();
      if (!activeStore && stores.length > 0) {
        setActiveYandexStore(stores[0].id);
      }
      
      ui.alert('–£—Å–ø–µ—Ö', '–Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω —É–¥–∞–ª–µ–Ω!', ui.ButtonSet.OK);
    }
  } else {
    ui.alert('–û—à–∏–±–∫–∞', '–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞–≥–∞–∑–∏–Ω–∞', ui.ButtonSet.OK);
  }
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ID Google –¢–∞–±–ª–∏—Ü—ã
 */
function setSpreadsheetId() {
  const ui = SpreadsheetApp.getUi();
  const currentId = SpreadsheetApp.getActiveSpreadsheet().getId();
  
  const response = ui.prompt('ID Google –¢–∞–±–ª–∏—Ü—ã', `–¢–µ–∫—É—â–∏–π ID: ${currentId}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π ID (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ):`, ui.ButtonSet.OK_CANCEL);
  
  if (response.getSelectedButton() === ui.Button.OK) {
    const newId = response.getResponseText().trim();
    const spreadsheetId = newId || currentId;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å ID
    try {
      SpreadsheetApp.openById(spreadsheetId);
      const properties = PropertiesService.getScriptProperties();
      properties.setProperty('GOOGLE_SPREADSHEET_ID', spreadsheetId);
      ui.alert('–£—Å–ø–µ—Ö', `ID —Ç–∞–±–ª–∏—Ü—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${spreadsheetId}`, ui.ButtonSet.OK);
    } catch (error) {
      ui.alert('–û—à–∏–±–∫–∞', `–ù–µ–≤–µ—Ä–Ω—ã–π ID —Ç–∞–±–ª–∏—Ü—ã: ${error.message}`, ui.ButtonSet.OK);
    }
  }
}

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ID —Ç–µ–∫—É—â–µ–π —Ç–∞–±–ª–∏—Ü—ã
 */
function setCurrentSpreadsheetId() {
  const ui = SpreadsheetApp.getUi();
  const currentId = SpreadsheetApp.getActiveSpreadsheet().getId();
  
  const properties = PropertiesService.getScriptProperties();
  properties.setProperty('GOOGLE_SPREADSHEET_ID', currentId);
  
  ui.alert('–£—Å–ø–µ—Ö', `ID —Ç–µ–∫—É—â–µ–π —Ç–∞–±–ª–∏—Ü—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${currentId}`, ui.ButtonSet.OK);
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏
 */
function exportFBOStocks() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const config = getOzonConfig();
    if (!config.CLIENT_ID || !config.API_KEY) {
      throw new Error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏! –î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω —á–µ—Ä–µ–∑ –º–µ–Ω—é "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏".');
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É –æ—Å—Ç–∞—Ç–∫–æ–≤ FBO –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${config.STORE_NAME}...`);
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π v4 API
    let allStocks = fetchAllFboStocksV4();
    
    if (allStocks.length === 0) {
      console.log('v4 API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–±—É–µ–º v3...');
      allStocks = getFBOStocksV3();
      
      if (allStocks.length === 0) {
        console.log('v3 API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–±—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É...');
        allStocks = getFBOStocksAnalytics();
      }
    }
    
    console.log(`–ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö: ${allStocks.length}`);
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ Google –¢–∞–±–ª–∏—Ü—ã
    writeToGoogleSheets(allStocks);
    
  console.log('–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  
} catch (error) {
  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ:', error);
  throw error;
}
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç —Ç–æ–ª—å–∫–æ FBO –æ—Å—Ç–∞—Ç–∫–∏ (–±–µ–∑ FBS)
 */
function exportOnlyFBOStocks() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const config = getOzonConfig();
    if (!config.CLIENT_ID || !config.API_KEY) {
      throw new Error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏! –î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω —á–µ—Ä–µ–∑ –º–µ–Ω—é "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏".');
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É —Ç–æ–ª—å–∫–æ FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${config.STORE_NAME}...`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ FBO —Å–∫–ª–∞–¥—ã
    const fboWarehouses = getWarehouses();
    console.log(`–ù–∞–π–¥–µ–Ω–æ FBO —Å–∫–ª–∞–¥–æ–≤: ${fboWarehouses.length}`);
    
    if (fboWarehouses.length === 0) {
      console.log('–ù–µ—Ç FBO —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–ª—å–∫–æ —Å FBO —Å–∫–ª–∞–¥–æ–≤
    const warehouseIds = fboWarehouses.map(w => w.warehouse_id);
    let fboStocks = getFBOStocksV3(warehouseIds);
    
    if (fboStocks.length === 0) {
      console.log('v3 API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–±—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É...');
      fboStocks = getFBOStocksAnalytics(warehouseIds);
    }
    
    console.log(`–ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –æ–± FBO –æ—Å—Ç–∞—Ç–∫–∞—Ö: ${fboStocks.length}`);
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ Google –¢–∞–±–ª–∏—Ü—ã
    writeToGoogleSheets(fboStocks);
    
    console.log('–í—ã–≥—Ä—É–∑–∫–∞ FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ FBO –æ—Å—Ç–∞—Ç–∫–æ–≤:', error);
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤ FBO
 */
function getWarehouses() {
  const config = getOzonConfig();
  const url = `${config.BASE_URL}/v1/warehouse/list`;
  
  const options = {
    method: 'POST',
    headers: {
      'Client-Id': config.CLIENT_ID,
      'Api-Key': config.API_KEY,
      'Content-Type': 'application/json'
    },
    payload: JSON.stringify({
      filter: {
        type: ['FBO'] // –¢–æ–ª—å–∫–æ FBO —Å–∫–ª–∞–¥—ã
      }
    })
  };
  
  const response = UrlFetchApp.fetch(url, options);
  const data = JSON.parse(response.getContentText());
  
  if (!data.result) {
    throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤: ' + JSON.stringify(data));
  }
  
  return data.result;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Å–∫–ª–∞–¥—ã (FBO –∏ FBS)
 */
function getAllWarehouses() {
  const config = getOzonConfig();
  const url = `${config.BASE_URL}/v1/warehouse/list`;
  
  const options = {
    method: 'POST',
    headers: {
      'Client-Id': config.CLIENT_ID,
      'Api-Key': config.API_KEY,
      'Content-Type': 'application/json'
    },
    payload: JSON.stringify({}) // –ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞ - –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–∫–ª–∞–¥—ã
  };
  
  const response = UrlFetchApp.fetch(url, options);
  const data = JSON.parse(response.getContentText());
  
  if (!data.result) {
    throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤: ' + JSON.stringify(data));
  }
  
  return data.result;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ FBO –æ—Å—Ç–∞—Ç–∫–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π —á–µ—Ä–µ–∑ v4 API
 */
function fetchAllFboStocksV4() {
  const config = getOzonConfig();
  const headers = {
    'Client-Id': config.CLIENT_ID,
    'Api-Key': config.API_KEY
  };
  
  let lastId = '';
  const result = [];
  let pageCount = 0;
  const PAGE_LIMIT = 1000;

  console.log('–ù–∞—á–∏–Ω–∞–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –ø–æ v4 API...');

  do {
    pageCount++;
    console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É ${pageCount}...`);
    
    const payload = {
      filter: {
        visibility: 'ALL' // –±–µ—Ä—ë–º –≤—Å–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏
      },
      limit: PAGE_LIMIT,
      last_id: lastId
    };

    const resp = callOzonAPI('/v4/product/info/stocks', payload, headers);

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
    let items = [];
    if (resp && resp.result && Array.isArray(resp.result.items)) {
      items = resp.result.items;
      lastId = resp.result.last_id || '';
    } else if (resp && Array.isArray(resp.items)) {
      items = resp.items;
      lastId = resp.last_id || '';
    } else if (resp && Array.isArray(resp.result)) {
      items = resp.result;
      lastId = resp.last_id || '';
    } else {
      items = [];
      lastId = '';
    }

    console.log(`–ü–æ–ª—É—á–µ–Ω–æ ${items.length} —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${pageCount}`);

    // –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º: –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ FBO –æ—Å—Ç–∞—Ç–∫–∏
    for (const it of items) {
      const productId = it.product_id || it.id || '';
      const offerId = it.offer_id || '';
      const sku = it.sku || '';
      const stocks = Array.isArray(it.stocks) ? it.stocks : [];
      const fbo = stocks.find(s => (s.type || '').toLowerCase() === 'fbo');

      // –í v4 –∏–Ω–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è—é—Ç –¥–µ—Ç–∞–ª–∏ —Å–∫–ª–∞–¥–∞: s.warehouse_ids (–º–∞—Å—Å–∏–≤).
      const warehouseIds = fbo && Array.isArray(fbo.warehouse_ids) ? fbo.warehouse_ids.join(',') : '';

      if (fbo) { // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä—ã —Å FBO –æ—Å—Ç–∞—Ç–∫–∞–º–∏
        result.push({
          product_id: productId,
          offer_id: offerId,
          sku: sku,
          name: it.name || '',
          fbo_present: fbo ? Number(fbo.present || 0) : 0,
          fbo_reserved: fbo ? Number(fbo.reserved || 0) : 0,
          warehouse_ids: warehouseIds,
          store_name: config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω'
        });
      }
    }

  } while (lastId);

  console.log(`–ü–∞–≥–∏–Ω–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${pageCount}, FBO —Ç–æ–≤–∞—Ä–æ–≤: ${result.length}`);
  return result;
}

/**
 * –ù–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ Ozon Seller API
 */
function callOzonAPI(path, body, headers) {
  const config = getOzonConfig();
  const url = config.BASE_URL + path;
  
  const resp = UrlFetchApp.fetch(url, {
    method: 'post',
    muteHttpExceptions: true,
    contentType: 'application/json; charset=utf-8',
    headers: headers,
    payload: JSON.stringify(body)
  });

  const code = resp.getResponseCode();
  if (code < 200 || code >= 300) {
    throw new Error(`Ozon API ${path} –≤–µ—Ä–Ω—É–ª –∫–æ–¥ ${code}: ${resp.getContentText()}`);
  }
  const text = resp.getContentText();
  return text ? JSON.parse(text) : {};
}

// ==================== WB –¶–ï–ù–´ ====================

/**
 * –í—ã–≥—Ä—É–∑–∏—Ç—å —Ü–µ–Ω—ã –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ WB –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –ª–∏—Å—Ç —Å –∫–æ–ª–æ–Ω–∫–∏ T
 */
function exportWBPrices() {
  const config = getWBConfig();
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π API –ø–æ nmId –∏–∑ –∫–æ–ª–æ–Ω–∫–∏ P2:P –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ WB –º–∞–≥–∞–∑–∏–Ω–∞
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheetName = sanitizeSheetName(config.STORE_NAME || 'WB –ú–∞–≥–∞–∑–∏–Ω');
  const sheet = spreadsheet.getSheetByName(sheetName) || spreadsheet.insertSheet(sheetName);

  const nmIds = readColumnValues_(sheet, 2, 16); // P2:P
  if (nmIds.length > 0) {
    const publicPrices = fetchWBPublicPricesByNmIds(nmIds);
    writeWBPublicPricesToSheetT(publicPrices, config.STORE_NAME, nmIds);
    return;
  }

  // –ï—Å–ª–∏ P2:P –ø—É—Å—Ç–æ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–∫—Ä—ã—Ç—ã–π Supplier API –ø–æ API_KEY –∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞'
  if (!config.API_KEY) {
    throw new Error('–î–ª—è WB –Ω–µ –∑–∞–¥–∞–Ω API_KEY. –î–æ–±–∞–≤—å—Ç–µ WB –º–∞–≥–∞–∑–∏–Ω –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –∫–ª—é—á.');
  }
  const prices = fetchWBPrices(config.API_KEY);
  writeWBPricesToSheetT(prices, config.STORE_NAME);
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç —Ü–µ–Ω—ã WB –¥–ª—è –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤.
 * –õ–æ–≥–∏–∫–∞:
 * - –ï—Å–ª–∏ –Ω–∞ –ª–∏—Å—Ç–µ –º–∞–≥–∞–∑–∏–Ω–∞ –µ—Å—Ç—å nmId –≤ P2:P ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π API –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ writeWBPublicPricesToSheetT
 * - –ò–Ω–∞—á–µ, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω API_KEY –º–∞–≥–∞–∑–∏–Ω–∞ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º Supplier API –∏ writeWBPricesToSheetT
 */
function exportAllWBStoresPrices() {
  const stores = getWBStoresList();
  if (!Array.isArray(stores) || stores.length === 0) {
    throw new Error('–°–ø–∏—Å–æ–∫ WB –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ WB –º–∞–≥–∞–∑–∏–Ω—ã.');
  }

  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const ui = SpreadsheetApp.getUi();

  let processed = 0;
  const errors = [];

  for (const store of stores) {
    try {
      const storeName = store.name || 'WB –ú–∞–≥–∞–∑–∏–Ω';
      const sheetName = sanitizeSheetName(storeName);
      const sheet = spreadsheet.getSheetByName(sheetName) || spreadsheet.insertSheet(sheetName);

      const nmIds = readColumnValues_(sheet, 2, 16); // P2:P
      if (nmIds.length > 0) {
        const publicPrices = fetchWBPublicPricesByNmIds(nmIds);
        writeWBPublicPricesToSheetT(publicPrices, storeName, nmIds);
        processed++;
        Utilities.sleep(200);
        continue;
      }

      const apiKey = store.api_key || store.apiKey || '';
      if (apiKey) {
        const prices = fetchWBPrices(apiKey);
        writeWBPricesToSheetT(prices, storeName);
        processed++;
        Utilities.sleep(200);
        continue;
      }

      errors.push(`–ú–∞–≥–∞–∑–∏–Ω ${storeName}: –Ω–µ—Ç nmId –≤ P –∏ –Ω–µ –∑–∞–¥–∞–Ω API –∫–ª—é—á`);
    } catch (e) {
      errors.push(String(e));
    }
  }

  const msg = `–ì–æ—Ç–æ–≤–æ. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –º–∞–≥–∞–∑–∏–Ω–æ–≤: ${processed}/${stores.length}.` + (errors.length ? ('\n–û—à–∏–±–∫–∏:\n- ' + errors.join('\n- ')) : '');
  console.log(msg);
  if (errors.length) {
    // –ü–æ–∑–≤–æ–ª–∏–º –≤–Ω–µ—à–Ω–µ–º—É —Ä–∞–Ω–Ω–µ—Ä—É (runStep) –ø–æ–º–µ—Ç–∏—Ç—å —à–∞–≥ –∫–∞–∫ —É–ø–∞–≤—à–∏–π –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    throw new Error(msg);
  } else {
    ui.alert('–í—ã–≥—Ä—É–∑–∫–∞ —Ü–µ–Ω WB (–≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã)', msg, ui.ButtonSet.OK);
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ü–µ–Ω –∏–∑ WB API. –°–ø–µ–∫—É–ª—è—Ü–∏—è: –æ—Å–Ω–æ–≤–Ω–æ–π –ø—É—Ç—å ‚Äî /public/api/v1/info,
 * —Ñ–æ–ª–ª–±–µ–∫ ‚Äî /public/api/v1/prices (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω —É –∞–∫–∫–∞—É–Ω—Ç–∞).
 */
function fetchWBPrices(apiKey) {
  const base = 'https://suppliers-api.wildberries.ru';
  const headers = {
    'Authorization': apiKey
  };

  // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã –∏ —Å–∫–∏–¥–∫–∏
  // –í–∞—Ä–∏–∞–Ω—Ç 1: /public/api/v1/info?quantity=0 ‚Äî —á–∞—Å—Ç–æ –¥–æ—Å—Ç—É–ø–µ–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç priceU/salePriceU
  try {
    const url = base + '/public/api/v1/info?quantity=0';
    const resp = UrlFetchApp.fetch(url, { method: 'get', headers: headers, muteHttpExceptions: true });
    const code = resp.getResponseCode();
    if (code >= 200 && code < 300) {
      const data = JSON.parse(resp.getContentText());
      if (Array.isArray(data)) {
        return data.map(item => {
          // priceU/salePriceU –≤ –∫–æ–ø–µ–π–∫–∞—Ö
          const supplierArticle = item.supplierArticle || item.supplier_article || '';
          const priceU = Number(item.priceU || 0);
          const salePriceU = Number(item.salePriceU || 0);
          return {
            supplierArticle: supplierArticle,
            price: salePriceU ? Math.round(salePriceU / 100) : '',
            old_price: priceU ? Math.round(priceU / 100) : '',
            min_price: '',
            currency: 'RUB'
          };
        });
      }
    }
  } catch (e) {
    // –ø–µ—Ä–µ–π–¥–µ–º –∫ —Ñ–æ–ª–ª–±–µ–∫—É
  }

  // –í–∞—Ä–∏–∞–Ω—Ç 2 (—Ñ–æ–ª–ª–±–µ–∫): /public/api/v1/prices ‚Äî –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –∏–º–µ—é—Ç —ç—Ç–æ—Ç –º–µ—Ç–æ–¥
  try {
    const url = base + '/public/api/v1/prices';
    const resp = UrlFetchApp.fetch(url, { method: 'get', headers: headers, muteHttpExceptions: true });
    const code = resp.getResponseCode();
    if (code >= 200 && code < 300) {
      const data = JSON.parse(resp.getContentText());
      if (Array.isArray(data)) {
        return data.map(item => {
          const supplierArticle = item.supplierArticle || item.supplier_article || '';
          const priceU = Number(item.priceU || 0);
          const salePriceU = Number(item.salePriceU || 0);
          return {
            supplierArticle: supplierArticle,
            price: salePriceU ? Math.round(salePriceU / 100) : '',
            old_price: priceU ? Math.round(priceU / 100) : '',
            min_price: '',
            currency: 'RUB'
          };
        });
      }
    }
  } catch (e) {
    // –∏–≥–Ω–æ—Ä
  }

  return [];
}

/**
 * –ó–∞–ø–∏—Å—å —Ü–µ–Ω WB –≤ –ª–∏—Å—Ç –º–∞–≥–∞–∑–∏–Ω–∞, –Ω–∞—á–∏–Ω–∞—è —Å T. –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–æ '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞'.
 */
function writeWBPricesToSheetT(prices, storeName) {
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheetName = sanitizeSheetName(storeName || 'WB –ú–∞–≥–∞–∑–∏–Ω');
  let sheet = spreadsheet.getSheetByName(sheetName) || spreadsheet.insertSheet(sheetName);

  const headerRow = 1;
  const startCol = 20; // T
  const headers = ['–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞', '–¶–µ–Ω–∞, ‚ÇΩ', '–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞, ‚ÇΩ', '–ú–∏–Ω. —Ü–µ–Ω–∞, ‚ÇΩ', '–í–∞–ª—é—Ç–∞'];
  // –û—á–∏—Å—Ç–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ T:X –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é
  const lastRowClear1 = sheet.getLastRow();
  if (lastRowClear1 > 0) {
    sheet.getRange(1, startCol, lastRowClear1, headers.length).clearContent();
  }
  sheet.getRange(headerRow, startCol, 1, headers.length).setValues([headers]);
  sheet.getRange(headerRow, startCol, 1, headers.length).setFontWeight('bold').setBackground('#FFF3CD');

  // –î–∞–∂–µ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ‚Äî –æ–±–Ω–æ–≤–∏–º –æ—Ç–º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏ –Ω–∏–∂–µ
  if (!prices) prices = [];

  // map –ø–æ supplierArticle
  const bySa = {};
  prices.forEach(p => { if (p.supplierArticle) bySa[p.supplierArticle] = p; });

  // –ò—â–µ–º –∫–æ–ª–æ–Ω–∫—É '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞' –≤ —à–∞–ø–∫–µ WB –ª–∏—Å—Ç–∞
  let saCol = 3; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é C, –∫–∞–∫ –≤ –Ω–∞—à–∏—Ö WB –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö
  try {
    const firstRow = sheet.getRange(1, 1, 1, sheet.getMaxColumns()).getValues()[0];
    const idx = firstRow.findIndex(v => String(v).toLowerCase() === '–∞—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞');
    if (idx >= 0) saCol = idx + 1;
  } catch (e) {}

  const lastRow = sheet.getLastRow();
  if (lastRow < 2) return;

  const saValues = sheet.getRange(2, saCol, lastRow - 1, 1).getValues();
  const rows = [];
  for (let i = 0; i < saValues.length; i++) {
    const sa = (saValues[i][0] || '').toString().trim();
    const p = bySa[sa];
    if (p) {
      rows.push([
        sa,
        (p.price !== undefined && p.price !== null && p.price !== '') ? p.price : 0,
        (p.old_price !== undefined && p.old_price !== null && p.old_price !== '') ? p.old_price : 0,
        (p.min_price !== undefined && p.min_price !== null && p.min_price !== '') ? p.min_price : 0,
        p.currency || 'RUB'
      ]);
    } else {
      rows.push([sa, 0, 0, 0, 'RUB']);
    }
  }

  sheet.getRange(2, startCol, rows.length, headers.length).setValues(rows);
  sheet.autoResizeColumns(startCol, headers.length);
  sheet.getRange(rows.length + 3, startCol).setValue('–¶–µ–Ω—ã WB –æ–±–Ω–æ–≤–ª–µ–Ω—ã: ' + new Date().toLocaleString('ru-RU'));
}

/**
 * –ß–∏—Ç–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–æ–ª–æ–Ω–∫–∏ –Ω–∞—á–∏–Ω–∞—è —Å rowStart. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ (–±–µ–∑ –ø—É—Å—Ç—ã—Ö).
 */
function readColumnValues_(sheet, rowStart, colIndex) {
  const last = sheet.getLastRow();
  if (last < rowStart) return [];
  const rng = sheet.getRange(rowStart, colIndex, last - rowStart + 1, 1).getValues();
  const out = [];
  for (const [cell] of rng) {
    if (cell === '' || cell === null || cell === undefined) continue;
    const s = String(cell).trim();
    if (s) out.push(s);
  }
  return out;
}

/**
 * –ü—É–±–ª–∏—á–Ω—ã–π WB: –ø–æ–ª—É—á–∞–µ—Ç —Ü–µ–Ω—ã –ø–æ –º–∞—Å—Å–∏–≤—É nmId —á–µ—Ä–µ–∑ cards/v2/detail, –±–∞—Ç—á–∞–º–∏ –ø–æ 100.
 */
function fetchWBPublicPricesByNmIds(nmIds) {
  const BASE = 'https://card.wb.ru/cards/v2/detail?appType=1&curr=rub&dest=-1255987&spp=30&ab_testing=false&nm=';
  const CHUNK = 100;
  const map = new Map(); // nmId -> { nmId, price, old_price, discount_percent, currency }

  for (let i = 0; i < nmIds.length; i += CHUNK) {
    const chunk = nmIds.slice(i, i + CHUNK);
    const url = BASE + encodeURIComponent(chunk.join(';'));
    const resp = safeFetchJson_(url);
    const products = resp && resp.data && Array.isArray(resp.data.products) ? resp.data.products : [];
    for (const p of products) {
      const nmId = String(p.id);
      let priceBasic = null;
      let priceTotal = null;
      if (Array.isArray(p.sizes) && p.sizes.length) {
        const s = p.sizes[0];
        priceBasic = toMoney_(s && s.price && s.price.basic);
        priceTotal = toMoney_(s && s.price && s.price.total);
      }
      // Fallback –Ω–∞ –≤–µ—Ä—Ö–Ω–µ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –ø–æ–ª—è
      if (priceBasic == null) priceBasic = toMoney_(p.priceU);
      if (priceTotal == null) priceTotal = toMoney_(p.salePriceU);
      let discount = '';
      if (isFiniteNumber_(priceBasic) && isFiniteNumber_(priceTotal) && priceBasic > 0) {
        discount = Math.round((1 - priceTotal / priceBasic) * 100);
      }
      map.set(nmId, {
        nmId: nmId,
        price: (priceTotal != null && priceTotal !== '') ? priceTotal : 0,
        old_price: (priceBasic != null && priceBasic !== '') ? priceBasic : 0,
        discount_percent: discount,
        currency: 'RUB'
      });
    }
    Utilities.sleep(150);
  }

  return map;
}

function writeWBPublicPricesToSheetT(priceMap, storeName, nmIdsOrder) {
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheetName = sanitizeSheetName(storeName || 'WB –ú–∞–≥–∞–∑–∏–Ω');
  let sheet = spreadsheet.getSheetByName(sheetName) || spreadsheet.insertSheet(sheetName);

  const headerRow = 1;
  const startCol = 20; // T
  const headers = ['nmId', '–¶–µ–Ω–∞, ‚ÇΩ', '–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞, ‚ÇΩ', '–°–∫–∏–¥–∫–∞, %', '–í–∞–ª—é—Ç–∞'];
  // –û—á–∏—Å—Ç–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ T:X –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é
  const lastRowClear2 = sheet.getLastRow();
  if (lastRowClear2 > 0) {
    sheet.getRange(1, startCol, lastRowClear2, headers.length).clearContent();
  }
  sheet.getRange(headerRow, startCol, 1, headers.length).setValues([headers]);
  sheet.getRange(headerRow, startCol, 1, headers.length).setFontWeight('bold').setBackground('#FFF3CD');

  if (!priceMap || priceMap.size === 0) {
    // –ù–µ—Ç —Ü–µ–Ω ‚Äî –Ω–æ –æ–±–Ω–æ–≤–∏–º –æ—Ç–º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å —Ñ–∞–∫—Ç –∑–∞–ø—É—Å–∫–∞
    sheet.getRange(3, startCol).setValue('–¶–µ–Ω—ã WB (public) –æ–±–Ω–æ–≤–ª–µ–Ω—ã: ' + new Date().toLocaleString('ru-RU'));
    return;
  }

  const rows = [];
  // –ø–∏—à–µ–º –≤ –ø–æ—Ä—è–¥–∫–µ nmIds –∏–∑ –∫–æ–ª–æ–Ω–∫–∏ P
  for (const nmIdRaw of nmIdsOrder) {
    const nmId = String(nmIdRaw);
    const p = priceMap.get(nmId);
    if (p) {
      rows.push([
        nmId,
        (p.price !== undefined && p.price !== null && p.price !== '') ? p.price : 0,
        (p.old_price !== undefined && p.old_price !== null && p.old_price !== '') ? p.old_price : 0,
        p.discount_percent || 0,
        p.currency || 'RUB'
      ]);
    } else {
      rows.push([nmId, 0, 0, 0, 'RUB']);
    }
  }

  sheet.getRange(2, startCol, rows.length, headers.length).setValues(rows);
  sheet.autoResizeColumns(startCol, headers.length);
  sheet.getRange(rows.length + 3, startCol).setValue('–¶–µ–Ω—ã WB (public) –æ–±–Ω–æ–≤–ª–µ–Ω—ã: ' + new Date().toLocaleString('ru-RU'));
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ WB
function safeFetchJson_(url) {
  try {
    const res = UrlFetchApp.fetch(url, { method: 'get', muteHttpExceptions: true, headers: { 'Accept': 'application/json' } });
    if (res.getResponseCode() >= 200 && res.getResponseCode() < 300) {
      return JSON.parse(res.getContentText());
    }
    return null;
  } catch (e) {
    return null;
  }
}

function toMoney_(v) {
  if (v === null || v === undefined || v === '') return null;
  const n = Number(v);
  if (!Number.isFinite(n)) return null;
  return Math.round(n) / 100;
}

function isFiniteNumber_(v) {
  return typeof v === 'number' && Number.isFinite(v);
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤ Ozon —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π v4
 */
function fetchAllOzonPricesV4() {
  const config = getOzonConfig();
  const headers = {
    'Client-Id': config.CLIENT_ID,
    'Api-Key': config.API_KEY
  };

  let lastId = '';
  const result = [];
  const PAGE_LIMIT = 1000;

  do {
    const payload = {
      filter: {
        visibility: 'ALL'
      },
      limit: PAGE_LIMIT,
      last_id: lastId
    };

    // –°–æ–≥–ª–∞—Å–Ω–æ v4: /v4/product/info/prices
    const resp = callOzonAPI('/v4/product/info/prices', payload, headers);

    let items = [];
    if (resp && resp.result && Array.isArray(resp.result.items)) {
      items = resp.result.items;
      lastId = resp.result.last_id || '';
    } else if (Array.isArray(resp.items)) {
      items = resp.items;
      lastId = resp.last_id || '';
    } else {
      items = [];
      lastId = '';
    }

    for (const it of items) {
      result.push({
        offer_id: it.offer_id || '',
        sku: it.sku || '',
        product_id: it.product_id || it.id || '',
        // –í –æ—Ç–≤–µ—Ç–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è price –∏ old_price, min_price
        price: it.price && it.price.price ? Number(it.price.price) : (typeof it.price === 'number' ? it.price : null),
        old_price: it.price && it.price.old_price ? Number(it.price.old_price) : null,
        min_price: it.price && it.price.min_price ? Number(it.price.min_price) : null,
        currency_code: it.price && it.price.currency_code ? it.price.currency_code : ''
      });
    }
  } while (lastId);

  return result;
}

/**
 * –°—á–∏—Ç—ã–≤–∞–µ—Ç offer_id –∏–∑ –ª–∏—Å—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ (–∏—â–µ—Ç –∫–æ–ª–æ–Ω–∫—É '–ê—Ä—Ç–∏–∫—É–ª')
 */
function getOfferIdsFromActiveStoreSheet() {
  const config = getOzonConfig();
  let spreadsheetId = config.SPREADSHEET_ID || SpreadsheetApp.getActiveSpreadsheet().getId();
  let spreadsheet;
  try {
    spreadsheet = SpreadsheetApp.openById(spreadsheetId);
  } catch (e) {
    spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  }

  const sheetName = sanitizeSheetName(config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω');
  const sheet = spreadsheet.getSheetByName(sheetName);
  if (!sheet) return [];

  const header = sheet.getRange(1, 1, 1, sheet.getMaxColumns()).getValues()[0];
  let offerCol = header.findIndex(v => String(v).toLowerCase() === '–∞—Ä—Ç–∏–∫—É–ª');
  if (offerCol === -1) offerCol = 4; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é E -> –∏–Ω–¥–µ–∫—Å 4 (0-based)
  const lastRow = sheet.getLastRow();
  if (lastRow < 2) return [];

  const values = sheet.getRange(2, offerCol + 1, lastRow - 1, 1).getValues();
  const ids = [];
  for (const v of values) {
    const id = (v[0] || '').toString().trim();
    if (id) ids.push(id);
  }
  // —É–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏
  return Array.from(new Set(ids));
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ü–µ–Ω—ã –ø–æ —Å–ø–∏—Å–∫—É offer_id, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –∏ —Ç–µ–ª
 */
function fetchOzonPricesByOfferIds(offerIds) {
  const config = getOzonConfig();
  const headers = {
    'Client-Id': config.CLIENT_ID,
    'Api-Key': config.API_KEY
  };

  const chunkSize = 1000; // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —â–∞–¥—è—â–∏–π –±–∞—Ç—á
  const result = [];

  for (let i = 0; i < offerIds.length; i += chunkSize) {
    const chunk = offerIds.slice(i, i + chunkSize);

    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º v5 —Å –∫—É—Ä—Å–æ—Ä–æ–º
    let v5Items = [];
    try {
      let cursor = '';
      do {
        const body = {
          filter: { offer_id: chunk, visibility: 'ALL' },
          limit: 1000,
          cursor: cursor
        };
        const resp = callOzonAPI('/v5/product/info/prices', body, headers);
        const items = (resp && resp.items) || [];
        if (Array.isArray(items) && items.length) v5Items.push(...items);
        cursor = (resp && resp.cursor) || '';
        Utilities.sleep(100);
      } while (cursor);
    } catch (e) {
      v5Items = [];
    }

    let items = v5Items;
    if (!items || items.length === 0) {
      // –§–æ–ª–ª–±–µ–∫–∏: v3, v2, v4 (–Ω–∞ —Å–ª—É—á–∞–π –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π –∞–∫–∫–∞—É–Ω—Ç–∞/–≤–µ—Ä—Å–∏–∏)
      const tryCalls = [
        { path: '/v3/product/info/prices', body: { offer_id: chunk } },
        { path: '/v2/product/info/prices', body: { offer_id: chunk } },
        { path: '/v4/product/info/prices', body: { filter: { offer_id: chunk } } }
      ];
      let got = null;
      for (const tc of tryCalls) {
        try {
          const resp = callOzonAPI(tc.path, tc.body, headers);
          got = resp;
          break;
        } catch (e) {
          // –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π
        }
      }
      if (!got) continue;
      if (got.result && Array.isArray(got.result)) items = got.result;
      if (got.result && Array.isArray(got.result.items)) items = got.result.items;
      if (Array.isArray(got.items)) items = got.items;
    }

    for (const it of items) {
      const priceObj = it.price || it.prices || it.price_info || {};
      const price = typeof it.price === 'number' ? it.price : (priceObj.price || priceObj.value || null);
      const old_price = priceObj.old_price || null;
      const min_price = priceObj.min_price || null;
      const currency_code = priceObj.currency_code || priceObj.currency || '';

      result.push({
        offer_id: it.offer_id || it.offerId || '',
        sku: it.sku || '',
        product_id: it.product_id || it.id || '',
        price: price != null ? Number(price) : null,
        old_price: old_price != null ? Number(old_price) : null,
        min_price: min_price != null ? Number(min_price) : null,
        currency_code
      });
    }
  }

  return result;
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç —Ü–µ–Ω—ã –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –ª–∏—Å—Ç –º–∞–≥–∞–∑–∏–Ω–∞ —Å –∫–æ–ª–æ–Ω–∫–∏ T
 */
function exportOzonPrices() {
  const config = getOzonConfig();
  if (!config.CLIENT_ID || !config.API_KEY) {
    throw new Error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏ Ozon. –î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω.');
  }

  // –ß–∏—Ç–∞–µ–º offer_id –∏–∑ –ª–∏—Å—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –≤—ã—Ç—è–≥–∏–≤–∞–µ–º —Ü–µ–Ω—ã –±–∞—Ç—á–∞–º–∏
  const offerIds = getOfferIdsFromActiveStoreSheet();
  if (offerIds.length === 0) {
    throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –æ–¥–∏–Ω offer_id –Ω–∞ –ª–∏—Å—Ç–µ –º–∞–≥–∞–∑–∏–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –≤—ã–≥—Ä—É–∑–∏—Ç–µ –æ—Å—Ç–∞—Ç–∫–∏.');
  }

  const prices = fetchOzonPricesByOfferIds(offerIds);
  writePricesToSheetT(prices);
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã Ozon –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–∞–∫ –≤ ozon_price_example
 */
function exportOzonPricesDetailed() {
  const config = getOzonConfig();
  if (!config.CLIENT_ID || !config.API_KEY) {
    throw new Error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏ Ozon. –î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω.');
  }

  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheetName = sanitizeSheetName(config.STORE_NAME || 'Ozon Prices');
  const sheet = spreadsheet.getSheetByName(sheetName) || spreadsheet.insertSheet(sheetName);

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ü–µ–Ω—ã —á–µ—Ä–µ–∑ v5 API
  const allPrices = fetchAllOzonPricesV5(config.CLIENT_ID, config.API_KEY);
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –¥–µ—Ç–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
  writeOzonPricesDetailed(sheet, allPrices);
  
  console.log(`–í—ã–≥—Ä—É–∂–µ–Ω–æ ${allPrices.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ü–µ–Ω–∞–º–∏`);
  SpreadsheetApp.getUi().alert('–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${allPrices.length} —Ç–æ–≤–∞—Ä–æ–≤`, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö Ozon –º–∞–≥–∞–∑–∏–Ω–æ–≤ –≤ –∏—Ö –ª–∏—Å—Ç—ã
 */
function exportAllStoresPricesDetailed() {
  const stores = getStoresList();
  if (!Array.isArray(stores) || stores.length === 0) {
    throw new Error('–°–ø–∏—Å–æ–∫ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω—ã –≤ \'üè™ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏\'.');
  }

  const ui = SpreadsheetApp.getUi();
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();

  let processed = 0;
  let totalItems = 0;
  const errors = [];

  for (const store of stores) {
    const clientId = store.clientId;
    const apiKey = store.apiKey;
    const storeName = store.name || 'Ozon Store';

    if (!clientId || !apiKey) {
      errors.push(`–ú–∞–≥–∞–∑–∏–Ω ${storeName}: –Ω–µ –∑–∞–¥–∞–Ω—ã clientId/apiKey`);
      continue;
    }

    try {
      const items = fetchAllOzonPricesV5(clientId, apiKey);
      totalItems += items.length;

      const sheetName = sanitizeSheetName(storeName);
      const sheet = spreadsheet.getSheetByName(sheetName) || spreadsheet.insertSheet(sheetName);
      writeOzonPricesDetailed(sheet, items);
      processed++;

      Utilities.sleep(300);
    } catch (e) {
      errors.push(`–ú–∞–≥–∞–∑–∏–Ω ${storeName}: ${String(e)}`);
    }
  }

  const msg = `–ì–æ—Ç–æ–≤–æ. –ú–∞–≥–∞–∑–∏–Ω–æ–≤: ${processed}/${stores.length}. –í—Å–µ–≥–æ –ø–æ–∑–∏—Ü–∏–π: ${totalItems}.` + (errors.length ? ('\n–û—à–∏–±–∫–∏:\n- ' + errors.join('\n- ')) : '');
  console.log(msg);
  ui.alert('–í—ã–≥—Ä—É–∑–∫–∞ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω (–≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã)', msg, ui.ButtonSet.OK);
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ü–µ–Ω—ã —á–µ—Ä–µ–∑ v5 API —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 */
function fetchAllOzonPricesV5(clientId, apiKey) {
  const url = 'https://api-seller.ozon.ru/v5/product/info/prices';
  const headers = {
    'Client-Id': clientId,
    'Api-Key': apiKey
  };
  
  let cursor = '';
  const allItems = [];
  let page = 0;
  
  do {
    const body = {
      cursor: cursor,
      filter: {
        visibility: 'ALL'
      },
      limit: 1000
    };
    
    const options = {
      method: 'post',
      contentType: 'application/json',
      payload: JSON.stringify(body),
      headers: headers,
      muteHttpExceptions: true
    };
    
    const response = UrlFetchApp.fetch(url, options);
    const code = response.getResponseCode();
    
    if (code >= 200 && code < 300) {
      const data = JSON.parse(response.getContentText());
      if (data.items && data.items.length > 0) {
        allItems.push(...data.items);
      }
      cursor = data.cursor || '';
    } else {
      throw new Error(`–û—à–∏–±–∫–∞ API: HTTP ${code}: ${response.getContentText()}`);
    }
    
    page++;
    Utilities.sleep(150);
    if (page > 1000) throw new Error('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü, –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
  } while (cursor);
  
  return allItems;
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã Ozon –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–∞–∫ –≤ ozon_price_example –Ω–∞—á–∏–Ω–∞—è —Å–æ —Å—Ç–æ–ª–±—Ü–∞ T
 */
function writeOzonPricesDetailed(sheet, items) {
  const startCol = 20; // T
  const headerRow = 1;
  
  const header = [
    '–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞',
    'ID —Ç–æ–≤–∞—Ä–∞', 
    '–í–∞–ª—é—Ç–∞',
    '–¶–µ–Ω–∞',
    '–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞',
    '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è —Ü–µ–Ω–∞',
    '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞',
    '–ú–∏–Ω. —Ü–µ–Ω–∞',
    '–ù–µ—Ç—Ç–æ —Ü–µ–Ω–∞',
    '–†–æ–∑–Ω–∏—á–Ω–∞—è —Ü–µ–Ω–∞',
    '–ù–î–°',
    '–≠–∫–≤–∞–π—Ä–∏–Ω–≥',
    '% –ø—Ä–æ–¥–∞–∂ FBO',
    '% –ø—Ä–æ–¥–∞–∂ FBS',
    'FBO –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é',
    'FBO –ø—Ä—è–º–æ–π –ø–æ—Ç–æ–∫ –º–∏–Ω',
    'FBO –ø—Ä—è–º–æ–π –ø–æ—Ç–æ–∫ –º–∞–∫—Å', 
    'FBO –≤–æ–∑–≤—Ä–∞—Ç',
    'FBS –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é',
    'FBS –ø—Ä—è–º–æ–π –ø–æ—Ç–æ–∫ –º–∏–Ω',
    'FBS –ø—Ä—è–º–æ–π –ø–æ—Ç–æ–∫ –º–∞–∫—Å',
    'FBS –ø–µ—Ä–≤–∞—è –º–∏–ª—è –º–∏–Ω',
    'FBS –ø–µ—Ä–≤–∞—è –º–∏–ª—è –º–∞–∫—Å',
    'FBS –≤–æ–∑–≤—Ä–∞—Ç',
    '–ò–Ω–¥–µ–∫—Å —Ü–µ–Ω—ã (—Ü–≤–µ—Ç)',
    'Ozon –∏–Ω–¥–µ–∫—Å –º–∏–Ω. —Ü–µ–Ω–∞',
    'Ozon –∏–Ω–¥–µ–∫—Å –≤–∞–ª—é—Ç–∞',
    'Ozon –∏–Ω–¥–µ–∫—Å –∑–Ω–∞—á–µ–Ω–∏–µ',
    '–í–Ω–µ—à–Ω–∏–π –∏–Ω–¥–µ–∫—Å –º–∏–Ω. —Ü–µ–Ω–∞',
    '–í–Ω–µ—à–Ω–∏–π –∏–Ω–¥–µ–∫—Å –≤–∞–ª—é—Ç–∞', 
    '–í–Ω–µ—à–Ω–∏–π –∏–Ω–¥–µ–∫—Å –∑–Ω–∞—á–µ–Ω–∏–µ',
    '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ú–ü –º–∏–Ω. —Ü–µ–Ω–∞',
    '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ú–ü –≤–∞–ª—é—Ç–∞',
    '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ú–ü –∑–Ω–∞—á–µ–Ω–∏–µ',
    '–û–±—ä—ë–º–Ω—ã–π –≤–µ—Å'
  ];

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ü–µ–Ω–µ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
  const sorted = items.slice().sort((a, b) => {
    const ap = Number(((a.price || {}).price) || 0);
    const bp = Number(((b.price || {}).price) || 0);
    return bp - ap;
  });

  const rows = sorted.map((item) => {
    const p = item.price || {};
    const c = item.commissions || {};
    const idx = item.price_indexes || {};
    const oz = (idx.ozon_index_data || {});
    const ex = (idx.external_index_data || {});
    const sm = (idx.self_marketplaces_index_data || {});
    
    return [
      safeString(item.offer_id),
      safeString(item.product_id),
      safeString(p.currency_code),
      safeNumber(p.price),
      safeNumber(p.old_price),
      safeNumber(p.marketing_price),
      safeNumber(p.marketing_seller_price),
      safeNumber(p.min_price),
      safeNumber(p.net_price),
      safeNumber(p.retail_price),
      safeNumber(p.vat),
      safeNumber(item.acquiring),
      safeNumber(c.sales_percent_fbo),
      safeNumber(c.sales_percent_fbs),
      safeNumber(c.fbo_deliv_to_customer_amount),
      safeNumber(c.fbo_direct_flow_trans_min_amount),
      safeNumber(c.fbo_direct_flow_trans_max_amount),
      safeNumber(c.fbo_return_flow_amount),
      safeNumber(c.fbs_deliv_to_customer_amount),
      safeNumber(c.fbs_direct_flow_trans_min_amount),
      safeNumber(c.fbs_direct_flow_trans_max_amount),
      safeNumber(c.fbs_first_mile_min_amount),
      safeNumber(c.fbs_first_mile_max_amount),
      safeNumber(c.fbs_return_flow_amount),
      safeString(idx.color_index),
      safeNumber(oz.min_price),
      safeString(oz.min_price_currency),
      safeNumber(oz.price_index_value),
      safeNumber(ex.min_price),
      safeString(ex.min_price_currency),
      safeNumber(ex.price_index_value),
      safeNumber(sm.min_price),
      safeString(sm.min_price_currency),
      safeNumber(sm.price_index_value),
      safeNumber(item.volume_weight)
    ];
  });

  // –û—á–∏—â–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω T:BB (—Å—Ç–æ–ª–±—Ü—ã 20-54)
  const lastRow = sheet.getLastRow();
  if (lastRow > 0) {
    sheet.getRange(1, startCol, lastRow, 35).clearContent(); // T:BB (20-54 –∫–æ–ª–æ–Ω–∫–∏)
  }
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞—á–∏–Ω–∞—è —Å–æ —Å—Ç–æ–ª–±—Ü–∞ T
  sheet.getRange(headerRow, startCol, 1, header.length).setValues([header]);
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  sheet.getRange(headerRow, startCol, 1, header.length)
    .setFontWeight('bold')
    .setBackground('#E8F0FE');
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—è —Å–æ —Å—Ç—Ä–æ–∫–∏ 2, —Å—Ç–æ–ª–±—Ü–∞ T
  if (rows.length > 0) {
    sheet.getRange(2, startCol, rows.length, header.length).setValues(rows);
  }
  
  // –ê–≤—Ç–æ–ø–æ–¥–±–æ—Ä —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ T:AY
  sheet.autoResizeColumns(startCol, header.length);
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
function safeString(v) {
  if (v === null || v === undefined) return '';
  return String(v);
}

function safeNumber(v) {
  if (v === null || v === undefined || v === '') return '';
  const n = Number(v);
  return isNaN(n) ? '' : n;
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ü–µ–Ω—ã –≤ –ª–∏—Å—Ç –º–∞–≥–∞–∑–∏–Ω–∞, –Ω–∞—á–∏–Ω–∞—è —Å–æ —Å—Ç–æ–ª–±—Ü–∞ T (20-—è –∫–æ–ª–æ–Ω–∫–∞)
 */
function writePricesToSheetT(prices) {
  const config = getOzonConfig();
  let spreadsheetId = config.SPREADSHEET_ID || SpreadsheetApp.getActiveSpreadsheet().getId();
  let spreadsheet;
  try {
    spreadsheet = SpreadsheetApp.openById(spreadsheetId);
  } catch (e) {
    spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  }

  const sheetName = sanitizeSheetName(config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω');
  let sheet = spreadsheet.getSheetByName(sheetName) || spreadsheet.insertSheet(sheetName);

  // –û—á–∏—â–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω T:BB –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const maxRow = sheet.getLastRow() || 1000;
  if (maxRow > 0) {
    sheet.getRange(1, 20, maxRow, 29).clearContent(); // T:BB (20-48 –∫–æ–ª–æ–Ω–∫–∏)
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ T:Z (–∏–ª–∏ –¥–∞–ª—å—à–µ), –Ω–µ —Ç—Ä–æ–≥–∞–µ–º A:S
  const headerRow = 1;
  const startCol = 20; // T
  const headers = ['offer_id', '–¶–µ–Ω–∞, ‚ÇΩ', '–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞, ‚ÇΩ', '–ú–∏–Ω. —Ü–µ–Ω–∞, ‚ÇΩ', '–í–∞–ª—é—Ç–∞'];
  sheet.getRange(headerRow, startCol, 1, headers.length).setValues([headers]);
  sheet.getRange(headerRow, startCol, 1, headers.length).setFontWeight('bold').setBackground('#FFF3CD');

  if (!prices || prices.length === 0) {
    return;
  }

  // –°–æ–∑–¥–∞—ë–º map –ø–æ offer_id -> {price...}
  const byOffer = {};
  prices.forEach(p => {
    if (p.offer_id) byOffer[p.offer_id] = p;
  });

  // –ù–∞–π—Ç–∏ –∫–æ–ª–æ–Ω–∫–∏ —Å offer_id –Ω–∞ –ª–∏—Å—Ç–µ: –ø–æ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —ç—Ç–æ –∫–æ–ª–æ–Ω–∫–∞ E (5)
  // –ï—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–∏—Ç—Å—è, –º–æ–∂–Ω–æ –∏—Å–∫–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ '–ê—Ä—Ç–∏–∫—É–ª' –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
  let offerCol = 5;
  try {
    const firstRow = sheet.getRange(1, 1, 1, sheet.getMaxColumns()).getValues()[0];
    const idx = firstRow.findIndex(v => String(v).toLowerCase() === '–∞—Ä—Ç–∏–∫—É–ª');
    if (idx >= 0) offerCol = idx + 1;
  } catch (e) {
    // –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç 5
  }

  const lastRow = sheet.getLastRow();
  if (lastRow < 2) {
    // –Ω–µ—Ç —Å—Ç—Ä–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ ‚Äî —Ç–æ–ª—å–∫–æ —à–∞–ø–∫–∞ –∏ –æ—Ç–º–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
    sheet.getRange(3, startCol).setValue('–¶–µ–Ω—ã WB –æ–±–Ω–æ–≤–ª–µ–Ω—ã: ' + new Date().toLocaleString('ru-RU'));
    return;
  }

  // –ß–∏—Ç–∞–µ–º offer_id –ø–æ —Å—Ç—Ä–æ–∫–∞–º
  const offerValues = sheet.getRange(2, offerCol, lastRow - 1, 1).getValues();

  const rowsToWrite = [];
  for (let i = 0; i < offerValues.length; i++) {
    const offerId = (offerValues[i][0] || '').toString();
    const p = byOffer[offerId];
    if (p) {
      rowsToWrite.push([
        offerId,
        p.price != null ? p.price : '',
        p.old_price != null ? p.old_price : '',
        p.min_price != null ? p.min_price : '',
        p.currency_code || ''
      ]);
    } else {
      rowsToWrite.push([offerId, '', '', '', '']);
    }
  }

  sheet.getRange(2, startCol, rowsToWrite.length, headers.length).setValues(rowsToWrite);
  sheet.autoResizeColumns(startCol, headers.length);
  sheet.getRange(rowsToWrite.length + 3, startCol).setValue('–¶–µ–Ω—ã WB –æ–±–Ω–æ–≤–ª–µ–Ω—ã: ' + new Date().toLocaleString('ru-RU'));
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ v3 API (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥)
 */
function getFBOStocksV3(warehouseIds = []) {
  const config = getOzonConfig();
  
  try {
    const url = `${config.BASE_URL}/v3/product/info/stocks`;
    console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º endpoint v3: ${url}`);
    
    const payload = {
      filter: {}
    };
    
    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–∫–ª–∞–¥—ã, –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä
    if (warehouseIds.length > 0) {
      payload.filter.warehouse_id = warehouseIds;
    }
    
    payload.limit = 1000; // –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø–∏—Å–µ–π –∑–∞ —Ä–∞–∑
    
    const options = {
      method: 'POST',
      headers: {
        'Client-Id': config.CLIENT_ID,
        'Api-Key': config.API_KEY,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    };
    
    const response = UrlFetchApp.fetch(url, options);
    const responseCode = response.getResponseCode();
    const responseText = response.getContentText();
    
    console.log(`Response code: ${responseCode}`);
    
    if (responseCode === 200) {
      const data = JSON.parse(responseText);
      console.log(`üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ v3:`, Object.keys(data));
      
      if (data.result && data.result.items && Array.isArray(data.result.items)) {
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –æ—Å—Ç–∞—Ç–∫–∏ —á–µ—Ä–µ–∑ v3: ${data.result.items.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        return data.result.items;
      } else if (data.items && Array.isArray(data.items)) {
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –æ—Å—Ç–∞—Ç–∫–∏ —á–µ—Ä–µ–∑ v3 (items): ${data.items.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        return data.items;
      } else {
        console.log(`‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ v3:`, data);
        return [];
      }
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ ${responseCode} v3: ${responseText}`);
      return [];
    }
    
  } catch (error) {
    console.log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ v3: ${error.message}`);
    return [];
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ –∞–Ω–∞–ª–∏—Ç–∏–∫—É FBO (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π –º–µ—Ç–æ–¥)
 */
function getFBOStocksAnalytics(warehouseIds = []) {
  const config = getOzonConfig();
  
  try {
    const url = `${config.BASE_URL}/v1/analytics/stocks`;
    console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º endpoint –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: ${url}`);
    
    const payload = {
      skus: [] // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    };
    
    // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–∫–ª–∞–¥—ã, –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä
    if (warehouseIds.length > 0) {
      payload.warehouse_ids = warehouseIds;
    }
    
    const options = {
      method: 'POST',
      headers: {
        'Client-Id': config.CLIENT_ID,
        'Api-Key': config.API_KEY,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    };
    
    const response = UrlFetchApp.fetch(url, options);
    const responseCode = response.getResponseCode();
    const responseText = response.getContentText();
    
    console.log(`Response code: ${responseCode}`);
    
    if (responseCode === 200) {
      const data = JSON.parse(responseText);
      console.log(`üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:`, Object.keys(data));
      
      if (data.items && Array.isArray(data.items)) {
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –æ—Å—Ç–∞—Ç–∫–∏ —á–µ—Ä–µ–∑ –∞–Ω–∞–ª–∏—Ç–∏–∫—É: ${data.items.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        return data.items;
      } else {
        console.log(`‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—è items –≤ –æ—Ç–≤–µ—Ç–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:`, Object.keys(data));
        return [];
      }
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ ${responseCode} –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: ${responseText}`);
      return [];
    }
    
  } catch (error) {
    console.log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: ${error.message}`);
    return [];
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Å–∫–ª–∞–¥–µ (—Å—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
 */
function getFBOStocks(warehouseId) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  return getFBOStocksAnalytics([warehouseId]);
}

/**
 * –û—á–∏—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –æ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
 */
function sanitizeSheetName(name) {
  // Google Sheets –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: –º–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤, –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: \ / ? * [ ]
  let cleanName = name
    .replace(/[\\\/\?\*\[\]]/g, '') // –£–¥–∞–ª—è–µ–º –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
    .replace(/\s+/g, ' ') // –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –æ–¥–∏–Ω
    .trim(); // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ
  
  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤
  if (cleanName.length > 100) {
    cleanName = cleanName.substring(0, 100);
  }
  
  // –ï—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—É—Å—Ç–æ–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
  if (!cleanName) {
    cleanName = 'FBO Stocks';
  }
  
  return cleanName;
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ Google –¢–∞–±–ª–∏—Ü—ã
 */
function writeToGoogleSheets(stocks) {
  const config = getOzonConfig();
  
  // –ü–æ–ª—É—á–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã
  let spreadsheetId = config.SPREADSHEET_ID;
  
  // –ï—Å–ª–∏ ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
  if (!spreadsheetId) {
    spreadsheetId = SpreadsheetApp.getActiveSpreadsheet().getId();
    console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É: ${spreadsheetId}`);
  }
  
  console.log(`–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å ID: ${spreadsheetId}`);
  
  let spreadsheet;
  try {
    spreadsheet = SpreadsheetApp.openById(spreadsheetId);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å ID ${spreadsheetId}:`, error);
    // –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
    spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É');
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞–≥–∞–∑–∏–Ω–∞
  const storeName = config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω';
  const sheetName = sanitizeSheetName(storeName);
  
  console.log(`–°–æ–∑–¥–∞–µ–º/–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–∏—Å—Ç: ${sheetName}`);
  
  let sheet = spreadsheet.getSheetByName(sheetName);
  
  // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!sheet) {
    sheet = spreadsheet.insertSheet(sheetName);
  }
  
  // –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∏–∞–ø–∞–∑–æ–Ω —Å –¥–∞–Ω–Ω—ã–º–∏ (A:J)
  const lastRow = sheet.getLastRow();
  if (lastRow > 0) {
    const range = sheet.getRange(1, 1, lastRow, 10); // 10 –∫–æ–ª–æ–Ω–æ–∫ A-J
    range.clear();
  }
  
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏
  const headers = [
    '–ú–∞–≥–∞–∑–∏–Ω',
    'Product ID',
    'SKU',
    '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞',
    '–ê—Ä—Ç–∏–∫—É–ª',
    'FBO –û—Å—Ç–∞—Ç–æ–∫',
    'FBO –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ',
    'FBO –î–æ—Å—Ç—É–ø–Ω–æ',
    'ID —Å–∫–ª–∞–¥–æ–≤',
    '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
  ];
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  const headerRange = sheet.getRange(1, 1, 1, headers.length);
  headerRange.setFontWeight('bold');
  headerRange.setBackground('#E8F0FE');
  
  if (stocks.length === 0) {
    console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
    return;
  }
  
  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  const rows = [];
  
  stocks.forEach(stock => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö - –Ω–æ–≤—ã–π v4 API –∏–ª–∏ —Å—Ç–∞—Ä—ã–µ –º–µ—Ç–æ–¥—ã
    if (stock.fbo_present !== undefined) {
      // –ù–æ–≤—ã–π v4 API —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π - —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      rows.push([
        stock.store_name || config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
        stock.product_id || '',
        stock.sku || '',
        stock.name || '',
        stock.offer_id || '',
        stock.fbo_present || 0,
        stock.fbo_reserved || 0,
        (stock.fbo_present || 0) - (stock.fbo_reserved || 0), // available = present - reserved
        stock.warehouse_ids || '',
        new Date().toLocaleString('ru-RU')
      ]);
    } else if (stock.stocks && Array.isArray(stock.stocks)) {
      // v3 API - —É —Ç–æ–≤–∞—Ä–∞ –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ stocks
      stock.stocks.forEach(stockItem => {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ FBO –æ—Å—Ç–∞—Ç–∫–∏
        if (stockItem.type === 'fbo') {
          rows.push([
            stock.store_name || config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
            stock.product_id || '',
            stock.sku || '',
            stock.name || '',
            stock.offer_id || '',
            stockItem.present || 0,
            stockItem.reserved || 0,
            (stockItem.present || 0) - (stockItem.reserved || 0), // available = present - reserved
            stockItem.warehouse_ids && stockItem.warehouse_ids.length > 0 ? stockItem.warehouse_ids.join(',') : '',
            new Date().toLocaleString('ru-RU')
          ]);
        }
      });
    } else if (stock.available_stock_count !== undefined) {
      // API –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ - –ø–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
      rows.push([
        stock.store_name || config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
        stock.product_id || '',
        stock.sku || '',
        stock.name || '',
        stock.offer_id || '',
        stock.available_stock_count || 0,
        0, // reserved –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ
        stock.available_stock_count || 0,
        stock.warehouse_id || '',
        new Date().toLocaleString('ru-RU')
      ]);
    } else {
      // –°—Ç–∞—Ä–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
      rows.push([
        stock.store_name || config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω',
        stock.product_id || '',
        stock.sku || '',
        stock.name || '',
        stock.offer_id || '',
        stock.present || 0,
        stock.reserved || 0,
        stock.available || 0,
        stock.warehouse_id || '',
        new Date().toLocaleString('ru-RU')
      ]);
    }
  });
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  if (rows.length > 0) {
    sheet.getRange(2, 1, rows.length, headers.length).setValues(rows);
  }
  
  // –ê–≤—Ç–æ–ø–æ–¥–±–æ—Ä —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫
  sheet.autoResizeColumns(1, headers.length);
  
  // –§–∏–ª—å—Ç—Ä—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é
  
  console.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${rows.length} —Å—Ç—Ä–æ–∫ –≤ Google –¢–∞–±–ª–∏—Ü—ã`);
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Å–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function exportAllStoresStocks() {
  try {
    const stores = getStoresList();
    
    if (stores.length === 0) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ (${stores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤)...`);
    
    const originalActiveStore = getActiveStore();
    let totalProcessed = 0;
    
    stores.forEach((store, index) => {
      try {
        console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–∞–≥–∞–∑–∏–Ω ${index + 1}/${stores.length}: ${store.name}`);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
        setActiveStore(store.id);
        
        // –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
        let storeStocks = fetchAllFboStocksV4();
        
        if (storeStocks.length === 0) {
          console.log(`  v4 API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–±—É–µ–º v3...`);
          storeStocks = getFBOStocksV3();
          
          if (storeStocks.length === 0) {
            console.log(`  v3 API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–±—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É...`);
            storeStocks = getFBOStocksAnalytics();
          }
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞ –∫ –∫–∞–∂–¥–æ–º—É —Ç–æ–≤–∞—Ä—É
        storeStocks.forEach(stock => {
          stock.store_name = store.name;
        });
        
        console.log(`  –ü–æ–ª—É—á–µ–Ω–æ ${storeStocks.length} —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ "${store.name}"`);
        
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç –¥–ª—è —ç—Ç–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
        if (storeStocks.length > 0) {
          writeToGoogleSheets(storeStocks);
          totalProcessed += storeStocks.length;
        }
        
        console.log(`  –ú–∞–≥–∞–∑–∏–Ω "${store.name}" –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
        
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –º–∞–≥–∞–∑–∏–Ω–∞ "${store.name}":`, error);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏
      }
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
    if (originalActiveStore) {
      setActiveStore(originalActiveStore.id);
    }
    
    console.log(`–í—ã–≥—Ä—É–∑–∫–∞ —Å–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`);
    
    SpreadsheetApp.getUi().alert('–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${stores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≤—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å–æ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤:', error);
    throw error;
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API Ozon
 */
function testOzonConnection() {
  try {
    const config = getOzonConfig();
    if (!config.CLIENT_ID || !config.API_KEY) {
      console.error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ saveOzonConfig() –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.');
      return false;
    }
    
    const warehouses = getWarehouses();
    console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Ozon API —É—Å–ø–µ—à–Ω–æ!');
    console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å–∫–ª–∞–¥—ã:', warehouses);
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Ozon API:', error);
    return false;
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function showStoreSheets() {
  const config = getOzonConfig();
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheets = spreadsheet.getSheets();
  
  const storeSheets = sheets.filter(sheet => {
    const sheetName = sheet.getName();
    const stores = getStoresList();
    return stores.some(store => sanitizeSheetName(store.name) === sheetName);
  });
  
  if (storeSheets.length === 0) {
    SpreadsheetApp.getUi().alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ù–µ—Ç –ª–∏—Å—Ç–æ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤', SpreadsheetApp.getUi().ButtonSet.OK);
    return;
  }
  
  let message = '–õ–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤:\n\n';
  storeSheets.forEach((sheet, index) => {
    const rowCount = sheet.getLastRow() - 1; // -1 –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    message += `${index + 1}. ${sheet.getName()} (${rowCount} —Ç–æ–≤–∞—Ä–æ–≤)\n`;
  });
  
  SpreadsheetApp.getUi().alert('–õ–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤', message, SpreadsheetApp.getUi().ButtonSet.OK);
}

/**
 * –£–¥–∞–ª—è–µ—Ç –ª–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function deleteStoreSheets() {
  const ui = SpreadsheetApp.getUi();
  const confirm = ui.alert('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', '–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ª–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤?', ui.ButtonSet.YES_NO);
  
  if (confirm === ui.Button.YES) {
    const config = getOzonConfig();
    const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    const sheets = spreadsheet.getSheets();
    const stores = getStoresList();
    
    let deletedCount = 0;
    
    sheets.forEach(sheet => {
      const sheetName = sheet.getName();
      const isStoreSheet = stores.some(store => sanitizeSheetName(store.name) === sheetName);
      
      if (isStoreSheet) {
        spreadsheet.deleteSheet(sheet);
        deletedCount++;
      }
    });
    
    ui.alert('–£—Å–ø–µ—Ö', `–£–¥–∞–ª–µ–Ω–æ –ª–∏—Å—Ç–æ–≤: ${deletedCount}`, ui.ButtonSet.OK);
  }
}

/**
 * –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç –ª–∏—Å—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function renameStoreSheets() {
  const ui = SpreadsheetApp.getUi();
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheets = spreadsheet.getSheets();
  const stores = getStoresList();
  
  let renamedCount = 0;
  
  stores.forEach(store => {
    const expectedSheetName = sanitizeSheetName(store.name);
    const existingSheet = spreadsheet.getSheetByName(expectedSheetName);
    
    if (!existingSheet) {
      // –ò—â–µ–º –ª–∏—Å—Ç —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
      const oldSheet = sheets.find(sheet => {
        const sheetName = sheet.getName();
        return sheetName.includes(store.name) || store.name.includes(sheetName);
      });
      
      if (oldSheet && oldSheet.getName() !== expectedSheetName) {
        try {
          oldSheet.setName(expectedSheetName);
          renamedCount++;
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –ª–∏—Å—Ç–∞ ${oldSheet.getName()}:`, error);
        }
      }
    }
  });
  
  ui.alert('–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ', `–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ –ª–∏—Å—Ç–æ–≤: ${renamedCount}`, ui.ButtonSet.OK);
}

// ==================== WB API –§–£–ù–ö–¶–ò–ò ====================

const WB_ANALYTICS_HOST = 'https://seller-analytics-api.wildberries.ru';
const WB_STATISTICS_HOST = 'https://statistics-api.wildberries.ru';
const WB_REPORT_TIMEOUT_MS = 6 * 60 * 1000; // –∂–¥–∞—Ç—å –¥–æ 6 –º–∏–Ω—É—Ç
const WB_REPORT_POLL_INTERVAL_MS = 4000;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–∏–º–∏—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
const WB_RATE_LIMIT_MAX_RETRIES = 5; // –º–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ 429 –æ—à–∏–±–∫–µ
const WB_RATE_LIMIT_BASE_DELAY_MS = 2000; // –±–∞–∑–æ–≤–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ 2 —Å–µ–∫—É–Ω–¥—ã
const WB_RATE_LIMIT_MAX_DELAY_MS = 30000; // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ 30 —Å–µ–∫—É–Ω–¥

/**
 * –§–æ—Ä–º–∏—Ä—É–µ—Ç URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ (–∞–Ω–∞–ª–æ–≥ URLSearchParams –¥–ª—è Google Apps Script)
 */
function buildUrlWithParams(baseUrl, params) {
  const urlParams = Object.keys(params)
    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`)
    .join('&');
  return `${baseUrl}?${urlParams}`;
}

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ WB API —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ª–∏–º–∏—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤ (HTTP 429)
 */
function wbApiRequestWithRetry(url, options, maxRetries = null) {
  // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ PropertiesService –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const properties = PropertiesService.getScriptProperties();
  const actualMaxRetries = maxRetries || parseInt(properties.getProperty('WB_RATE_LIMIT_MAX_RETRIES')) || WB_RATE_LIMIT_MAX_RETRIES;
  const baseDelay = parseInt(properties.getProperty('WB_RATE_LIMIT_BASE_DELAY_MS')) || WB_RATE_LIMIT_BASE_DELAY_MS;
  const maxDelay = parseInt(properties.getProperty('WB_RATE_LIMIT_MAX_DELAY_MS')) || WB_RATE_LIMIT_MAX_DELAY_MS;
  
  let lastError;
  
  for (let attempt = 0; attempt <= actualMaxRetries; attempt++) {
    try {
      const resp = UrlFetchApp.fetch(url, options);
      const code = resp.getResponseCode();
      
      if (code === 429) {
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É "Too Many Requests"
        const errorBody = resp.getContentText();
        console.log(`‚ö†Ô∏è HTTP 429 (Too Many Requests) –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ ${attempt + 1}/${actualMaxRetries + 1}`);
        console.log(`–û—à–∏–±–∫–∞: ${errorBody}`);
        
        if (attempt < actualMaxRetries) {
          // –í—ã—á–∏—Å–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º backoff
          const delay = Math.min(
            baseDelay * Math.pow(2, attempt),
            maxDelay
          );
          
          console.log(`‚è≥ –ñ–¥—ë–º ${delay}ms –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π...`);
          Utilities.sleep(delay);
          continue;
        } else {
          throw new Error(`WB API: –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ—Å–ª–µ ${actualMaxRetries + 1} –ø–æ–ø—ã—Ç–æ–∫. –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${errorBody}`);
        }
      }
      
      // –ï—Å–ª–∏ –Ω–µ 429, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç (—É—Å–ø–µ—à–Ω—ã–π –∏–ª–∏ —Å –¥—Ä—É–≥–æ–π –æ—à–∏–±–∫–æ–π)
      return resp;
      
    } catch (error) {
      lastError = error;
      
      // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ HTTP –æ—à–∏–±–∫–∞, –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –µ—ë –¥–∞–ª—å—à–µ
      if (!error.message.includes('HTTP')) {
        throw error;
      }
      
      // –î–ª—è HTTP –æ—à–∏–±–æ–∫, –æ—Ç–ª–∏—á–Ω—ã—Ö –æ—Ç 429, –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ä–∞–∑—É
      if (!error.message.includes('429')) {
        throw error;
      }
      
      // –î–ª—è 429 –æ—à–∏–±–æ–∫ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª
      if (attempt < actualMaxRetries) {
        const delay = Math.min(
          baseDelay * Math.pow(2, attempt),
          maxDelay
        );
        
        console.log(`‚è≥ HTTP 429, –∂–¥—ë–º ${delay}ms –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π...`);
        Utilities.sleep(delay);
      }
    }
  }
  
  // –ï—Å–ª–∏ –¥–æ—à–ª–∏ —Å—é–¥–∞, –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã
  throw lastError || new Error('WB API: –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∏—Å—á–µ—Ä–ø–∞–Ω—ã');
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º —á–µ—Ä–µ–∑ Statistics API (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥)
 */
function wbGetReportDetailByPeriod_(apiKey, dateFrom, dateTo) {
  const url = WB_STATISTICS_HOST + '/api/v5/supplier/reportDetailByPeriod';
  const params = {
    dateFrom: dateFrom, // –§–æ—Ä–º–∞—Ç: YYYY-MM-DD
    dateTo: dateTo,     // –§–æ—Ä–º–∞—Ç: YYYY-MM-DD
    limit: 100000,      // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    rrdid: 0            // ID –æ—Ç—á—ë—Ç–∞ (0 –¥–ª—è –Ω–æ–≤–æ–≥–æ)
  };
  
  const fullUrl = buildUrlWithParams(url, params);
  
  const options = {
    method: 'get',
    muteHttpExceptions: true,
    headers: {
      'Authorization': apiKey
    }
  };
  
  console.log('–ü–æ–ª—É—á–∞–µ–º –æ—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º —á–µ—Ä–µ–∑ Statistics API...');
  console.log(`URL: ${fullUrl}`);
  console.log(`–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:`, params);
  
  const resp = wbApiRequestWithRetry(fullUrl, options);
  
  const code = resp.getResponseCode();
  if (code < 200 || code >= 300) {
    throw new Error(`WB Statistics API: HTTP ${code} ‚Äî ${resp.getContentText()}`);
  }
  
  const body = JSON.parse(resp.getContentText() || '{}');
  console.log('WB Statistics API Response:', JSON.stringify(body, null, 2));
  
  return body;
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ Statistics API (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥)
 */
function exportWBStocksViaStatisticsAPI() {
  try {
    const config = getWBConfig();
    
    if (!config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É —á–µ—Ä–µ–∑ Statistics API –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞: ${config.STORE_NAME}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—ã (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π - –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–µ—Ä–∏–æ–¥)
    const today = new Date();
    const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);
    
    const dateTo = today.toISOString().split('T')[0]; // YYYY-MM-DD
    const dateFrom = weekAgo.toISOString().split('T')[0]; // YYYY-MM-DD
    
    console.log(`–ü–µ—Ä–∏–æ–¥: —Å ${dateFrom} –ø–æ ${dateTo}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á—ë—Ç
    const reportData = wbGetReportDetailByPeriod_(config.API_KEY, dateFrom, dateTo);
    
    if (!reportData || !Array.isArray(reportData)) {
      console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç—á—ë—Ç–µ');
      SpreadsheetApp.getUi().alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç—á—ë—Ç–µ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${reportData.length}`);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const processedData = reportData.map(item => ({
      nmId: item.nmId || '',
      supplierArticle: item.supplierArticle || '',
      barcode: item.barcode || '',
      techSize: item.techSize || '',
      warehouseName: item.warehouseName || '',
      warehouseId: item.warehouseId || '',
      quantity: 0, // –í –æ—Ç—á—ë—Ç–µ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –Ω–µ—Ç –æ—Å—Ç–∞—Ç–∫–æ–≤
      reserve: 0,
      inWayToClient: 0,
      inWayFromClient: 0,
      store_name: config.STORE_NAME,
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∏–∑ –æ—Ç—á—ë—Ç–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
      sale_dt: item.sale_dt || '',
      price: item.price || 0,
      quantity_sold: item.quantity || 0,
      total_price: item.totalPrice || 0
    }));
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ Google Sheets
    writeWBStatisticsToGoogleSheets(processedData);
    
    console.log(`–í—ã–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ Statistics API –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ó–∞–ø–∏—Å–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${processedData.length}`);
    
    SpreadsheetApp.getUi().alert('–£—Å–ø–µ—Ö', `–í—ã–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ Statistics API –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n–ó–∞–ø–∏—Å–µ–π: ${processedData.length}\n–ü–µ—Ä–∏–æ–¥: ${dateFrom} - ${dateTo}`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —á–µ—Ä–µ–∑ Statistics API:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ Statistics API –≤ Google –¢–∞–±–ª–∏—Ü—ã
 */
function writeWBStatisticsToGoogleSheets(data) {
  const config = getWBConfig();
  
  // –ü–æ–ª—É—á–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã
  let spreadsheetId = config.SPREADSHEET_ID;
  
  // –ï—Å–ª–∏ ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
  if (!spreadsheetId) {
    spreadsheetId = SpreadsheetApp.getActiveSpreadsheet().getId();
    console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É: ${spreadsheetId}`);
  }
  
  console.log(`–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å ID: ${spreadsheetId}`);
  
  let spreadsheet;
  try {
    spreadsheet = SpreadsheetApp.openById(spreadsheetId);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å ID ${spreadsheetId}:`, error);
    // –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
    spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É');
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞
  const storeName = config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω';
  const sheetName = sanitizeSheetName(storeName + ' - Statistics');
  
  console.log(`–°–æ–∑–¥–∞–µ–º/–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–∏—Å—Ç: ${sheetName}`);
  
  let sheet = spreadsheet.getSheetByName(sheetName);
  
  // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!sheet) {
    sheet = spreadsheet.insertSheet(sheetName);
  }
  
  // –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∏–∞–ø–∞–∑–æ–Ω —Å –¥–∞–Ω–Ω—ã–º–∏ (A:N)
  const lastRow = sheet.getLastRow();
  if (lastRow > 0) {
    const range = sheet.getRange(1, 1, lastRow, 14); // 14 –∫–æ–ª–æ–Ω–æ–∫ A-N
    range.clear();
  }
  
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è Statistics API
  const headers = [
    '–ú–∞–≥–∞–∑–∏–Ω',
    'nmId',
    '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
    '–®—Ç—Ä–∏—Ö–∫–æ–¥',
    '–†–∞–∑–º–µ—Ä',
    '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞',
    'ID —Å–∫–ª–∞–¥–∞',
    '–û—Å—Ç–∞—Ç–æ–∫',
    '–ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ',
    '–í –ø—É—Ç–∏ –∫ –∫–ª–∏–µ–Ω—Ç—É',
    '–í –ø—É—Ç–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞',
    '–î–∞—Ç–∞ –ø—Ä–æ–¥–∞–∂–∏',
    '–¶–µ–Ω–∞',
    '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–Ω–æ'
  ];
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  const headerRange = sheet.getRange(1, 1, 1, headers.length);
  headerRange.setFontWeight('bold');
  headerRange.setBackground('#E8F0FE');
  
  if (data.length === 0) {
    console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
    return;
  }
  
  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  const rows = data.map(item => [
    item.store_name || config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω',
    item.nmId || '',
    item.supplierArticle || '',
    item.barcode || '',
    item.techSize || '',
    item.warehouseName || '',
    item.warehouseId || '',
    item.quantity || 0,
    item.reserve || 0,
    item.inWayToClient || 0,
    item.inWayFromClient || 0,
    item.sale_dt || '',
    item.price || 0,
    item.quantity_sold || 0
  ]);
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  if (rows.length > 0) {
    try {
      const dataRange = sheet.getRange(2, 1, rows.length, headers.length);
      dataRange.setValues(rows);
      
      // –§–∏–ª—å—Ç—Ä—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é
      
      console.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${rows.length} —Å—Ç—Ä–æ–∫ –≤ Google –¢–∞–±–ª–∏—Ü—ã`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      throw error;
    }
  } else {
    console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
  }
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç FBO –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ WB –º–∞–≥–∞–∑–∏–Ω–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏
 */
function exportWBFBOStocksWithLongDelays() {
  try {
    const config = getWBConfig();
    
    if (!config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞: ${config.STORE_NAME} (—Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏)`);
    
    // –í—Ä–µ–º–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    const originalMaxRetries = WB_RATE_LIMIT_MAX_RETRIES;
    const originalBaseDelay = WB_RATE_LIMIT_BASE_DELAY_MS;
    const originalMaxDelay = WB_RATE_LIMIT_MAX_DELAY_MS;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ–ª–µ–µ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const properties = PropertiesService.getScriptProperties();
    properties.setProperties({
      'WB_RATE_LIMIT_MAX_RETRIES': '3',
      'WB_RATE_LIMIT_BASE_DELAY_MS': '15000', // 15 —Å–µ–∫—É–Ω–¥
      'WB_RATE_LIMIT_MAX_DELAY_MS': '60000'   // 60 —Å–µ–∫—É–Ω–¥
    });
    
    try {
      const taskId = wbCreateWarehouseRemainsReport_(config.API_KEY);
      const downloadUrl = wbWaitReportAndGetUrl_(taskId, config.API_KEY);
      const csv = wbDownloadReportCsv_(taskId, config.API_KEY);
      const rows = parseCsv_(csv);
      
      if (rows.length === 0) {
        console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
        return;
      }
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      const headerMap = normalizeHeaderMap_(rows[0]);
      const data = rows.slice(1).map(r => ({
        nmId: pick_(r, headerMap.nmId),
        supplierArticle: pick_(r, headerMap.supplierArticle),
        barcode: pick_(r, headerMap.barcode),
        techSize: pick_(r, headerMap.techSize),
        warehouseName: pick_(r, headerMap.warehouseName),
        warehouseId: pick_(r, headerMap.warehouseId),
        quantity: toNum_(pick_(r, headerMap.quantity)),
        reserve: toNum_(pick_(r, headerMap.reserve)),
        inWayToClient: toNum_(pick_(r, headerMap.inWayToClient)),
        inWayFromClient: toNum_(pick_(r, headerMap.inWayFromClient)),
        store_name: config.STORE_NAME
      }));
      
      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ Google Sheets
      writeWBToGoogleSheets(data);
      
      console.log(`–í—ã–≥—Ä—É–∑–∫–∞ WB FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ó–∞–ø–∏—Å–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${data.length}`);
      
    } finally {
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      properties.setProperties({
        'WB_RATE_LIMIT_MAX_RETRIES': originalMaxRetries.toString(),
        'WB_RATE_LIMIT_BASE_DELAY_MS': originalBaseDelay.toString(),
        'WB_RATE_LIMIT_MAX_DELAY_MS': originalMaxDelay.toString()
      });
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ WB FBO –æ—Å—Ç–∞—Ç–∫–æ–≤:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç FBO –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ WB –º–∞–≥–∞–∑–∏–Ω–∞
 */
function exportWBFBOStocks() {
  try {
    console.log('–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ —á–µ—Ä–µ–∑ Statistics API...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–∫—Ç–∏–≤–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    const config = getWBConfig();
    if (!config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ WB –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤
    loadAllStocks();
    
    console.log('–í—ã–≥—Ä—É–∑–∫–∞ WB FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ —á–µ—Ä–µ–∑ Statistics API –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ WB FBO –æ—Å—Ç–∞—Ç–∫–æ–≤:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç FBO –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤ —á–µ—Ä–µ–∑ Statistics API
 */
function exportAllWBStoresStocksStatisticsAPI() {
  try {
    const stores = getWBStoresList();
    
    if (stores.length === 0) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å–æ –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤ —á–µ—Ä–µ–∑ Statistics API (${stores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤)...`);
    
    const originalActiveStore = getActiveWBStore();
    let totalProcessed = 0;
    
    stores.forEach((store, index) => {
      try {
        console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º WB –º–∞–≥–∞–∑–∏–Ω ${index + 1}/${stores.length}: ${store.name}`);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
        setActiveWBStore(store.id);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤
        if (index > 0) {
          console.log('–ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞...');
          Utilities.sleep(3000);
        }
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ —á–µ—Ä–µ–∑ Statistics API
        const allData = loadAllStocksForStore(store);
        totalProcessed += allData.length;
        
        console.log(`  WB –º–∞–≥–∞–∑–∏–Ω "${store.name}" –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ. –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${allData.length}`);
        
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ WB –º–∞–≥–∞–∑–∏–Ω–∞ "${store.name}":`, error);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏
      }
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
    if (originalActiveStore) {
      setActiveWBStore(originalActiveStore.id);
    }
    
    console.log(`–í—ã–≥—Ä—É–∑–∫–∞ —Å–æ –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`);
    
    SpreadsheetApp.getUi().alert('–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${stores.length} WB –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≤—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å–æ –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤:', error);
    throw error;
  }
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç FBO –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤ (—Å—Ç–∞—Ä—ã–π API —Å –ª–∏–º–∏—Ç–∞–º–∏)
 */
function exportAllWBStoresStocks() {
  try {
    const stores = getWBStoresList();
    
    if (stores.length === 0) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É FBO –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å–æ –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤ (${stores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤)...`);
    
    const originalActiveStore = getActiveWBStore();
    let totalProcessed = 0;
    
    stores.forEach((store, index) => {
      try {
        console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º WB –º–∞–≥–∞–∑–∏–Ω ${index + 1}/${stores.length}: ${store.name}`);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
        setActiveWBStore(store.id);
        
        // –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
        const taskId = wbCreateWarehouseRemainsReport_(store.api_key);
        const downloadUrl = wbWaitReportAndGetUrl_(taskId, store.api_key);
        const csv = wbDownloadReportCsv_(taskId, store.api_key);
        const rows = parseCsv_(csv);
        
        if (rows.length > 0) {
          // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
          const headerMap = normalizeHeaderMap_(rows[0]);
          const data = rows.slice(1).map(r => ({
            nmId: pick_(r, headerMap.nmId),
            supplierArticle: pick_(r, headerMap.supplierArticle),
            barcode: pick_(r, headerMap.barcode),
            techSize: pick_(r, headerMap.techSize),
            warehouseName: pick_(r, headerMap.warehouseName),
            warehouseId: pick_(r, headerMap.warehouseId),
            quantity: toNum_(pick_(r, headerMap.quantity)),
            reserve: toNum_(pick_(r, headerMap.reserve)),
            inWayToClient: toNum_(pick_(r, headerMap.inWayToClient)),
            inWayFromClient: toNum_(pick_(r, headerMap.inWayFromClient)),
            store_name: store.name
          }));
          
          // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç –¥–ª—è —ç—Ç–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
          writeWBToGoogleSheets(data);
          totalProcessed += data.length;
        }
        
        console.log(`  WB –º–∞–≥–∞–∑–∏–Ω "${store.name}" –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
        
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ WB –º–∞–≥–∞–∑–∏–Ω–∞ "${store.name}":`, error);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏
      }
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
    if (originalActiveStore) {
      setActiveWBStore(originalActiveStore.id);
    }
    
    console.log(`–í—ã–≥—Ä—É–∑–∫–∞ —Å–æ –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`);
    
    SpreadsheetApp.getUi().alert('–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${stores.length} WB –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≤—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å–æ –≤—Å–µ—Ö WB –º–∞–≥–∞–∑–∏–Ω–æ–≤:', error);
    throw error;
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ—Ç—á—ë—Ç "Warehouses Remains Report" –≤ WB —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
 */
function wbCreateWarehouseRemainsReportWithParams_(apiKey, params = {}) {
  // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ PropertiesService
  const properties = PropertiesService.getScriptProperties();
  
  // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—Å —É—á—ë—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫)
  const defaultParams = {
    locale: properties.getProperty('WB_REPORT_LOCALE') || 'ru',           // –Ø–∑—ã–∫ –ø–æ–ª–µ–π –æ—Ç–≤–µ—Ç–∞
    groupByBrand: properties.getProperty('WB_REPORT_GROUP_BY_BRAND') || 'false',  // –†–∞–∑–±–∏–≤–∫–∞ –ø–æ –±—Ä–µ–Ω–¥–∞–º
    groupBySubject: properties.getProperty('WB_REPORT_GROUP_BY_SUBJECT') || 'false', // –†–∞–∑–±–∏–≤–∫–∞ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º
    groupBySa: properties.getProperty('WB_REPORT_GROUP_BY_SA') || 'false',     // –†–∞–∑–±–∏–≤–∫–∞ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º –ø—Ä–æ–¥–∞–≤—Ü–∞
    groupByNm: properties.getProperty('WB_REPORT_GROUP_BY_NM') || 'true',      // –†–∞–∑–±–∏–≤–∫–∞ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º WB (–≤–∫–ª—é—á–∞–µ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—è volume)
    groupByBarcode: properties.getProperty('WB_REPORT_GROUP_BY_BARCODE') || 'false', // –†–∞–∑–±–∏–≤–∫–∞ –ø–æ –±–∞—Ä–∫–æ–¥–∞–º
    groupBySize: properties.getProperty('WB_REPORT_GROUP_BY_SIZE') || 'false',   // –†–∞–∑–±–∏–≤–∫–∞ –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º
    filterPics: properties.getProperty('WB_REPORT_FILTER_PICS') || '0',        // –ù–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ñ–æ—Ç–æ
    filterVolume: properties.getProperty('WB_REPORT_FILTER_VOLUME') || '0'       // –ù–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å —Ñ–∏–ª—å—Ç—Ä –ø–æ –æ–±—ä—ë–º—É
  };
  
  // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏
  const finalParams = { ...defaultParams, ...params };
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API
  const baseUrl = WB_ANALYTICS_HOST + '/api/v1/warehouse_remains';
  const url = buildUrlWithParams(baseUrl, finalParams);
  
  const options = {
    method: 'get',
    muteHttpExceptions: true,
    headers: {
      'Authorization': apiKey
    }
  };
  
  console.log('–°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç WB —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏...');
  console.log(`URL: ${url}`);
  console.log(`–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:`, finalParams);
  
  const resp = wbApiRequestWithRetry(url, options);
  
  const code = resp.getResponseCode();
  if (code < 200 || code >= 300) {
    throw new Error(`WB create report: HTTP ${code} ‚Äî ${resp.getContentText()}`);
  }
  
  const body = JSON.parse(resp.getContentText() || '{}');
  console.log('WB API Response:', JSON.stringify(body, null, 2));
  
  // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–ª—É—á–µ–Ω–∏—è taskId (–Ω–æ–≤—ã–π API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç taskId –≤–º–µ—Å—Ç–æ reportId)
  const taskId = body?.data?.taskId || 
                 body?.data?.id || 
                 body?.data?.reportId || 
                 body?.reportId || 
                 body?.id ||
                 body?.requestId ||
                 body?.data?.requestId ||
                 body?.taskId;
  
  if (!taskId) {
    console.error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ taskId –≤ –æ—Ç–≤–µ—Ç–µ:', body);
    throw new Error(`WB create report: –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ taskId. –û—Ç–≤–µ—Ç: ${JSON.stringify(body)}`);
  }
  
  console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω taskId: ${taskId}`);
  return taskId;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ—Ç—á—ë—Ç "Warehouses Remains Report" –≤ WB (—É–ø—Ä–æ—â—ë–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
 */
function wbCreateWarehouseRemainsReport_(apiKey) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  return wbCreateWarehouseRemainsReportWithParams_(apiKey);
}

/**
 * –ñ–¥—ë—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á—ë—Ç–∞ –∏ –ø–æ–ª—É—á–∞–µ—Ç URL —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
 */
function wbWaitReportAndGetUrl_(taskId, apiKey) {
  const started = Date.now();
  
  while (Date.now() - started < WB_REPORT_TIMEOUT_MS) {
    Utilities.sleep(WB_REPORT_POLL_INTERVAL_MS);
    
    const url = WB_ANALYTICS_HOST + '/api/v1/warehouse_remains';
    const options = {
      method: 'get',
      muteHttpExceptions: true,
      headers: {
        'Authorization': apiKey
      }
    };
    
    try {
      const resp = wbApiRequestWithRetry(url + '?id=' + encodeURIComponent(taskId), options);
      
      if (resp.getResponseCode() === 200) {
        const body = JSON.parse(resp.getContentText() || '{}');
        console.log(`WB Report Status Response:`, JSON.stringify(body, null, 2));
        
        const status = (body?.data?.status || body?.status || '').toLowerCase();
        console.log(`Report status: ${status}`);
        
        if (status === 'ready' || status === 'done' || status === 'success') {
          const downloadUrl = body?.data?.file || 
                             body?.data?.downloadUrl || 
                             body?.downloadUrl || 
                             body?.file ||
                             body?.data?.url ||
                             body?.url;
          
          if (!downloadUrl) {
            console.error('–ù–µ –Ω–∞–π–¥–µ–Ω downloadUrl –≤ –æ—Ç–≤–µ—Ç–µ:', body);
            throw new Error(`WB report ready, –Ω–æ –Ω–µ—Ç downloadUrl. –û—Ç–≤–µ—Ç: ${JSON.stringify(body)}`);
          }
          
          console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω downloadUrl: ${downloadUrl}`);
          return downloadUrl;
        }
        
        if (status === 'failed' || status === 'error') {
          throw new Error('WB report status: ' + status);
        }
      }
    } catch (error) {
      // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∂–¥–∞—Ç—å
      if (error.message.includes('429') || error.message.includes('Too Many Requests')) {
        console.log(`‚ö†Ô∏è –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∂–¥–∞—Ç—å...`);
        continue;
      }
      // –î–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–ª—å—à–µ
      throw error;
    }
  }
  
  throw new Error('WB report: –æ–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–µ–≤—ã—Å–∏–ª–æ –ª–∏–º–∏—Ç');
}

/**
 * –°–∫–∞—á–∏–≤–∞–µ—Ç CSV-—Ñ–∞–π–ª –æ—Ç—á—ë—Ç–∞ –ø–æ taskId
 */
function wbDownloadReportCsv_(taskId, apiKey) {
  // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–æ taskId
  const statusUrl = WB_ANALYTICS_HOST + '/api/v1/warehouse_remains';
  const statusOptions = {
    method: 'get',
    muteHttpExceptions: true,
    headers: {
      'Authorization': apiKey
    }
  };
  
  console.log('–ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞...');
  const statusResp = wbApiRequestWithRetry(statusUrl + '?id=' + encodeURIComponent(taskId), statusOptions);
  
  if (statusResp.getResponseCode() !== 200) {
    throw new Error(`WB get download URL: HTTP ${statusResp.getResponseCode()} ‚Äî ${statusResp.getContentText()}`);
  }
  
  const statusBody = JSON.parse(statusResp.getContentText() || '{}');
  const downloadUrl = statusBody?.data?.file || 
                     statusBody?.data?.downloadUrl || 
                     statusBody?.downloadUrl || 
                     statusBody?.file ||
                     statusBody?.data?.url ||
                     statusBody?.url;
  
  if (!downloadUrl) {
    throw new Error(`WB download: –Ω–µ –Ω–∞–π–¥–µ–Ω downloadUrl –¥–ª—è taskId ${taskId}. –û—Ç–≤–µ—Ç: ${JSON.stringify(statusBody)}`);
  }
  
  console.log(`–°–∫–∞—á–∏–≤–∞–µ–º –æ—Ç—á—ë—Ç –ø–æ URL: ${downloadUrl}`);
  
  // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
  const downloadOptions = {
    method: 'get',
    muteHttpExceptions: true,
    headers: {
      'Authorization': apiKey
    }
  };
  
  const resp = wbApiRequestWithRetry(downloadUrl, downloadOptions);
  
  const code = resp.getResponseCode();
  if (code < 200 || code >= 300) {
    throw new Error(`WB download CSV: HTTP ${code} ‚Äî ${resp.getContentText()}`);
  }
  
  console.log(`‚úÖ –û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω, —Ä–∞–∑–º–µ—Ä: ${resp.getContentText().length} —Å–∏–º–≤–æ–ª–æ–≤`);
  return resp.getContentText();
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ WB –≤ Google –¢–∞–±–ª–∏—Ü—ã
 */
function writeWBToGoogleSheets(data) {
  const config = getWBConfig();
  
  // –ü–æ–ª—É—á–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã
  let spreadsheetId = config.SPREADSHEET_ID;
  
  // –ï—Å–ª–∏ ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
  if (!spreadsheetId) {
    spreadsheetId = SpreadsheetApp.getActiveSpreadsheet().getId();
    console.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É: ${spreadsheetId}`);
  }
  
  console.log(`–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å ID: ${spreadsheetId}`);
  
  let spreadsheet;
  try {
    spreadsheet = SpreadsheetApp.openById(spreadsheetId);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å ID ${spreadsheetId}:`, error);
    // –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
    spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –∞–∫—Ç–∏–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É');
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞–≥–∞–∑–∏–Ω–∞
  const storeName = config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω';
  const sheetName = sanitizeSheetName(storeName);
  
  console.log(`–°–æ–∑–¥–∞–µ–º/–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–∏—Å—Ç: ${sheetName}`);
  
  let sheet = spreadsheet.getSheetByName(sheetName);
  
  // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!sheet) {
    sheet = spreadsheet.insertSheet(sheetName);
  }
  
  // –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∏–∞–ø–∞–∑–æ–Ω —Å –¥–∞–Ω–Ω—ã–º–∏ (A:K)
  const lastRow = sheet.getLastRow();
  if (lastRow > 0) {
    const range = sheet.getRange(1, 1, lastRow, 11); // 11 –∫–æ–ª–æ–Ω–æ–∫ A-K
    range.clear();
  }
  
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è WB
  const headers = [
    '–ú–∞–≥–∞–∑–∏–Ω',
    'nmId',
    '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
    '–®—Ç—Ä–∏—Ö–∫–æ–¥',
    '–†–∞–∑–º–µ—Ä',
    '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞',
    'ID —Å–∫–ª–∞–¥–∞',
    '–û—Å—Ç–∞—Ç–æ–∫',
    '–ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ',
    '–í –ø—É—Ç–∏ –∫ –∫–ª–∏–µ–Ω—Ç—É',
    '–í –ø—É—Ç–∏ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞'
  ];
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
  const headerRange = sheet.getRange(1, 1, 1, headers.length);
  headerRange.setFontWeight('bold');
  headerRange.setBackground('#E8F0FE');
  
  if (data.length === 0) {
    console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
    return;
  }
  
  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  const rows = data.map(item => [
    item.store_name || config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω',
    item.nmId || '',
    item.supplierArticle || '',
    item.barcode || '',
    item.techSize || '',
    item.warehouseName || '',
    item.warehouseId || '',
    item.quantity || 0,
    item.reserve || 0,
    item.inWayToClient || 0,
    item.inWayFromClient || 0
  ]);
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  if (rows.length > 0) {
    try {
      const dataRange = sheet.getRange(2, 1, rows.length, headers.length);
      dataRange.setValues(rows);
      
      // –§–∏–ª—å—Ç—Ä—ã –æ—Ç–∫–ª—é—á–µ–Ω—ã –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é
      
      console.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${rows.length} —Å—Ç—Ä–æ–∫ –≤ Google –¢–∞–±–ª–∏—Ü—ã`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      throw error;
    }
  } else {
    console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
  }
}

/**
 * –ü–∞—Ä—Å–∏—Ç CSV –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫
 */
function parseCsv_(csv) {
  const rows = Utilities.parseCsv(csv, ',');
  return rows;
}

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫ –æ–∂–∏–¥–∞–µ–º—ã–º –∫–ª—é—á–∞–º
 */
function normalizeHeaderMap_(headerRow) {
  const map = {};
  const norm = s => String(s || '').trim().toLowerCase();
  
  headerRow.forEach((h, i) => {
    const n = norm(h);
    if (['nmid', 'nm_id', 'nm id', 'nm'].includes(n)) map.nmId = i;
    if (['supplierarticle', 'supplier_article', 'sa', 'vendorcode'].includes(n)) map.supplierArticle = i;
    if (['barcode', 'bar_code', '—à—Ç—Ä–∏—Ö–∫–æ–¥'].includes(n)) map.barcode = i;
    if (['techsize', 'size', 'tech_size', '—Ä–∞–∑–º–µ—Ä'].includes(n)) map.techSize = i;
    if (['warehousename', 'warehouse_name', '—Å–∫–ª–∞–¥'].includes(n)) map.warehouseName = i;
    if (['warehouseid', 'warehouse_id', 'id —Å–∫–ª–∞–¥–∞'].includes(n)) map.warehouseId = i;
    if (['quantity', 'qty', 'present', '–æ—Å—Ç–∞—Ç–æ–∫'].includes(n)) map.quantity = i;
    if (['reserve', 'reserved'].includes(n)) map.reserve = i;
    if (['inwaytoclient', 'in_way_to_client'].includes(n)) map.inWayToClient = i;
    if (['inwayfromclient', 'in_way_from_client'].includes(n)) map.inWayFromClient = i;
  });
  
  return map;
}

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */
function pick_(row, idx) { 
  return (idx == null) ? '' : row[idx]; 
}

function toNum_(v) { 
  return Number(String(v || '').replace(',', '.')) || 0; 
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç—á—ë—Ç–∞ WB API
 */
function configureWBReportParams() {
  const ui = SpreadsheetApp.getUi();
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  const properties = PropertiesService.getScriptProperties();
  const currentParams = {
    locale: properties.getProperty('WB_REPORT_LOCALE') || 'ru',
    groupByBrand: properties.getProperty('WB_REPORT_GROUP_BY_BRAND') || 'false',
    groupBySubject: properties.getProperty('WB_REPORT_GROUP_BY_SUBJECT') || 'false',
    groupBySa: properties.getProperty('WB_REPORT_GROUP_BY_SA') || 'false',
    groupByNm: properties.getProperty('WB_REPORT_GROUP_BY_NM') || 'true',
    groupByBarcode: properties.getProperty('WB_REPORT_GROUP_BY_BARCODE') || 'false',
    groupBySize: properties.getProperty('WB_REPORT_GROUP_BY_SIZE') || 'false',
    filterPics: properties.getProperty('WB_REPORT_FILTER_PICS') || '0',
    filterVolume: properties.getProperty('WB_REPORT_FILTER_VOLUME') || '0'
  };
  
  let message = `–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—á—ë—Ç–∞ WB:\n\n`;
  message += `–Ø–∑—ã–∫: ${currentParams.locale}\n`;
  message += `–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –±—Ä–µ–Ω–¥–∞–º: ${currentParams.groupByBrand}\n`;
  message += `–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º: ${currentParams.groupBySubject}\n`;
  message += `–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º –ø—Ä–æ–¥–∞–≤—Ü–∞: ${currentParams.groupBySa}\n`;
  message += `–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º WB: ${currentParams.groupByNm}\n`;
  message += `–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –±–∞—Ä–∫–æ–¥–∞–º: ${currentParams.groupByBarcode}\n`;
  message += `–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º: ${currentParams.groupBySize}\n`;
  message += `–§–∏–ª—å—Ç—Ä –ø–æ —Ñ–æ—Ç–æ: ${currentParams.filterPics}\n`;
  message += `–§–∏–ª—å—Ç—Ä –ø–æ –æ–±—ä—ë–º—É: ${currentParams.filterVolume}\n\n`;
  message += `–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏? (y/n)`;
  
  const response = ui.prompt('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ—Ç—á—ë—Ç–∞ WB', message, ui.ButtonSet.OK_CANCEL);
  if (response.getSelectedButton() !== ui.Button.OK) return;
  
  if (response.getResponseText().toLowerCase() === 'y' || response.getResponseText().toLowerCase() === 'yes') {
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const localeResponse = ui.prompt('–Ø–∑—ã–∫ –æ—Ç—á—ë—Ç–∞', '–Ø–∑—ã–∫ (ru/en/zh):', ui.ButtonSet.OK_CANCEL);
    if (localeResponse.getSelectedButton() !== ui.Button.OK) return;
    
    const groupByNmResponse = ui.prompt('–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º WB', '–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º WB (true/false):', ui.ButtonSet.OK_CANCEL);
    if (groupByNmResponse.getSelectedButton() !== ui.Button.OK) return;
    
    const groupBySizeResponse = ui.prompt('–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º', '–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º (true/false):', ui.ButtonSet.OK_CANCEL);
    if (groupBySizeResponse.getSelectedButton() !== ui.Button.OK) return;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    const newParams = {
      locale: localeResponse.getResponseText().trim() || 'ru',
      groupByNm: groupByNmResponse.getResponseText().trim() || 'true',
      groupBySize: groupBySizeResponse.getResponseText().trim() || 'false'
    };
    
    properties.setProperties({
      'WB_REPORT_LOCALE': newParams.locale,
      'WB_REPORT_GROUP_BY_NM': newParams.groupByNm,
      'WB_REPORT_GROUP_BY_SIZE': newParams.groupBySize
    });
    
    ui.alert('–£—Å–ø–µ—Ö', `–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—á—ë—Ç–∞ WB —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:\n\n–Ø–∑—ã–∫: ${newParams.locale}\n–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º WB: ${newParams.groupByNm}\n–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º: ${newParams.groupBySize}`, ui.ButtonSet.OK);
  }
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–∏–º–∏—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤ WB API
 */
function configureWBRateLimits() {
  const ui = SpreadsheetApp.getUi();
  
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  const properties = PropertiesService.getScriptProperties();
  const currentMaxRetries = properties.getProperty('WB_RATE_LIMIT_MAX_RETRIES') || WB_RATE_LIMIT_MAX_RETRIES;
  const currentBaseDelay = properties.getProperty('WB_RATE_LIMIT_BASE_DELAY_MS') || WB_RATE_LIMIT_BASE_DELAY_MS;
  const currentMaxDelay = properties.getProperty('WB_RATE_LIMIT_MAX_DELAY_MS') || WB_RATE_LIMIT_MAX_DELAY_MS;
  
  let message = `–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏–º–∏—Ç–æ–≤ WB API:\n\n`;
  message += `–ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –ø—Ä–∏ 429 –æ—à–∏–±–∫–µ: ${currentMaxRetries}\n`;
  message += `–ë–∞–∑–æ–≤–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ (–º—Å): ${currentBaseDelay}\n`;
  message += `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ (–º—Å): ${currentMaxDelay}\n\n`;
  message += `–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö):`;
  
  const maxRetriesResponse = ui.prompt('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–º–∏—Ç–æ–≤ WB API', `${message}\n\n–ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ (1-10):`, ui.ButtonSet.OK_CANCEL);
  if (maxRetriesResponse.getSelectedButton() !== ui.Button.OK) return;
  
  const baseDelayResponse = ui.prompt('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–º–∏—Ç–æ–≤ WB API', '–ë–∞–∑–æ–≤–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö (1000-10000):', ui.ButtonSet.OK_CANCEL);
  if (baseDelayResponse.getSelectedButton() !== ui.Button.OK) return;
  
  const maxDelayResponse = ui.prompt('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–º–∏—Ç–æ–≤ WB API', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö (10000-60000):', ui.ButtonSet.OK_CANCEL);
  if (maxDelayResponse.getSelectedButton() !== ui.Button.OK) return;
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
  try {
    const newMaxRetries = maxRetriesResponse.getResponseText().trim() ? 
      Math.max(1, Math.min(10, parseInt(maxRetriesResponse.getResponseText()))) : 
      currentMaxRetries;
    
    const newBaseDelay = baseDelayResponse.getResponseText().trim() ? 
      Math.max(1000, Math.min(10000, parseInt(baseDelayResponse.getResponseText()))) : 
      currentBaseDelay;
    
    const newMaxDelay = maxDelayResponse.getResponseText().trim() ? 
      Math.max(10000, Math.min(60000, parseInt(maxDelayResponse.getResponseText()))) : 
      currentMaxDelay;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    properties.setProperties({
      'WB_RATE_LIMIT_MAX_RETRIES': newMaxRetries.toString(),
      'WB_RATE_LIMIT_BASE_DELAY_MS': newBaseDelay.toString(),
      'WB_RATE_LIMIT_MAX_DELAY_MS': newMaxDelay.toString()
    });
    
    ui.alert('–£—Å–ø–µ—Ö', `–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏–º–∏—Ç–æ–≤ WB API —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:\n\n–ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫: ${newMaxRetries}\n–ë–∞–∑–æ–≤–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞: ${newBaseDelay}–º—Å\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞: ${newMaxDelay}–º—Å`, ui.ButtonSet.OK);
    
  } catch (error) {
    ui.alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: ${error.message}`, ui.ButtonSet.OK);
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WB API
 */
function testWBConnection() {
  try {
    const config = getWBConfig();
    
    if (!config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WB API...');
    console.log(`API Key: ${config.API_KEY.substring(0, 10)}...`);
    
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ endpoints
    const endpoints = [
      '/api/v1/warehouse_remains',
      '/api/v1/warehouses',
      '/api/v1/supplier/warehouses',
      '/api/v1/supplier/warehouse_remains'
    ];
    
    let success = false;
    let lastError = '';
    
    for (const endpoint of endpoints) {
      try {
        console.log(`–ü—Ä–æ–±—É–µ–º endpoint: ${WB_ANALYTICS_HOST}${endpoint}`);
        
        const resp = UrlFetchApp.fetch(WB_ANALYTICS_HOST + endpoint, {
          method: 'get',
          muteHttpExceptions: true,
          headers: {
            'Authorization': config.API_KEY
          }
        });
        
        const code = resp.getResponseCode();
        console.log(`Response code: ${code}`);
        
        if (code === 200) {
          const body = resp.getContentText();
          console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç ${endpoint}:`, body.substring(0, 500));
          success = true;
          break;
        } else {
          const errorText = resp.getContentText();
          console.log(`‚ùå –û—à–∏–±–∫–∞ ${code} —Å ${endpoint}:`, errorText);
          lastError = `HTTP ${code}: ${errorText}`;
        }
        
      } catch (error) {
        console.log(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ —Å ${endpoint}:`, error.message);
        lastError = error.message;
      }
    }
    
    if (success) {
      SpreadsheetApp.getUi().alert('–£—Å–ø–µ—Ö', '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WB API —Ä–∞–±–æ—Ç–∞–µ—Ç!', SpreadsheetApp.getUi().ButtonSet.OK);
    } else {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WB API. –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: ${lastError}`, SpreadsheetApp.getUi().ButtonSet.OK);
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WB API:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç Statistics API WB —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏
 */
function testWBStatisticsAPIWithPeriods() {
  try {
    const config = getWBConfig();
    
    if (!config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º WB Statistics API —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–µ—Ä–∏–æ–¥–∞–º–∏...');
    console.log(`API Key: ${config.API_KEY.substring(0, 10)}...`);
    
    const today = new Date();
    const periods = [
      { name: '3 –¥–Ω—è', days: 3 },
      { name: '7 –¥–Ω–µ–π', days: 7 },
      { name: '14 –¥–Ω–µ–π', days: 14 },
      { name: '30 –¥–Ω–µ–π', days: 30 },
      { name: '60 –¥–Ω–µ–π', days: 60 }
    ];
    
    let results = [];
    
    for (const period of periods) {
      const periodAgo = new Date(today.getTime() - period.days * 24 * 60 * 60 * 1000);
      const dateTo = today.toISOString().split('T')[0];
      const dateFrom = periodAgo.toISOString().split('T')[0];
      
      console.log(`\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–∏–æ–¥: ${period.name} (${dateFrom} - ${dateTo})`);
      
      try {
        const reportData = wbGetReportDetailByPeriod_(config.API_KEY, dateFrom, dateTo);
        const count = Array.isArray(reportData) ? reportData.length : 0;
        
        console.log(`‚úÖ ${period.name}: ${count} –∑–∞–ø–∏—Å–µ–π`);
        results.push(`${period.name}: ${count} –∑–∞–ø–∏—Å–µ–π`);
        
        // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –¥–∞–Ω–Ω—ã–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –∑–∞–ø–∏—Å–∏
        if (count > 0) {
          console.log('–ü–µ—Ä–≤—ã–µ 2 –∑–∞–ø–∏—Å–∏:');
          reportData.slice(0, 2).forEach((item, index) => {
            console.log(`${index + 1}. nmId: ${item.nmId}, –ê—Ä—Ç–∏–∫—É–ª: ${item.supplierArticle}, –î–∞—Ç–∞: ${item.sale_dt}`);
          });
          break; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª, –µ—Å–ª–∏ –Ω–∞—à–ª–∏ –¥–∞–Ω–Ω—ã–µ
        }
        
        // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        Utilities.sleep(1000);
        
      } catch (error) {
        console.log(`‚ùå ${period.name}: –û—à–∏–±–∫–∞ - ${error.message}`);
        results.push(`${period.name}: –û—à–∏–±–∫–∞`);
      }
    }
    
    const message = `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WB Statistics API:\n\n${results.join('\n')}`;
    SpreadsheetApp.getUi().alert('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è', message, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WB Statistics API:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç Statistics API WB
 */
function testWBStatisticsAPI() {
  try {
    const config = getWBConfig();
    
    if (!config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º WB Statistics API...');
    console.log(`API Key: ${config.API_KEY.substring(0, 10)}...`);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—ã (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π –¥–ª—è —Ç–µ—Å—Ç–∞)
    const today = new Date();
    const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);
    
    const dateTo = today.toISOString().split('T')[0]; // YYYY-MM-DD
    const dateFrom = weekAgo.toISOString().split('T')[0]; // YYYY-MM-DD
    
    console.log(`–¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–∏–æ–¥: —Å ${dateFrom} –ø–æ ${dateTo}`);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    const reportData = wbGetReportDetailByPeriod_(config.API_KEY, dateFrom, dateTo);
    
    if (!reportData || !Array.isArray(reportData)) {
      console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç—á—ë—Ç–µ');
      SpreadsheetApp.getUi().alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç—á—ë—Ç–µ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${reportData.length}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –∑–∞–ø–∏—Å–∏
    if (reportData.length > 0) {
      console.log('–ü–µ—Ä–≤—ã–µ 3 –∑–∞–ø–∏—Å–∏:');
      reportData.slice(0, 3).forEach((item, index) => {
        console.log(`${index + 1}. nmId: ${item.nmId}, –ê—Ä—Ç–∏–∫—É–ª: ${item.supplierArticle}, –î–∞—Ç–∞: ${item.sale_dt}`);
      });
    }
    
    SpreadsheetApp.getUi().alert('–£—Å–ø–µ—Ö', `WB Statistics API —Ä–∞–±–æ—Ç–∞–µ—Ç!\n–ó–∞–ø–∏—Å–µ–π: ${reportData.length}\n–ü–µ—Ä–∏–æ–¥: ${dateFrom} - ${dateTo}`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WB Statistics API:', error);
    
    // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (error.message.includes('429') || error.message.includes('Too Many Requests')) {
      SpreadsheetApp.getUi().alert('–õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤', `–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ WB Statistics API.\n\n–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫–∏–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏.\n\n–û—à–∏–±–∫–∞: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
    } else {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
    }
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π WB API —Å taskId –¥–ª—è –æ—Ç—á—ë—Ç–∞ "Warehouses Remains"
 */
function testWBTaskIdAPI() {
  try {
    const config = getWBConfig();
    
    if (!config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è WB –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π WB API —Å taskId...');
    console.log(`API Key: ${config.API_KEY.substring(0, 10)}...`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏–º–∏—Ç–æ–≤
    const properties = PropertiesService.getScriptProperties();
    const maxRetries = parseInt(properties.getProperty('WB_RATE_LIMIT_MAX_RETRIES')) || WB_RATE_LIMIT_MAX_RETRIES;
    const baseDelay = parseInt(properties.getProperty('WB_RATE_LIMIT_BASE_DELAY_MS')) || WB_RATE_LIMIT_BASE_DELAY_MS;
    const maxDelay = parseInt(properties.getProperty('WB_RATE_LIMIT_MAX_DELAY_MS')) || WB_RATE_LIMIT_MAX_DELAY_MS;
    
    console.log(`–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏–º–∏—Ç–æ–≤: maxRetries=${maxRetries}, baseDelay=${baseDelay}ms, maxDelay=${maxDelay}ms`);
    
    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞
    console.log('1. –°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç...');
    const taskId = wbCreateWarehouseRemainsReport_(config.API_KEY);
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω taskId: ${taskId}`);
    
    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç—á—ë—Ç–∞
    console.log('2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç—á—ë—Ç–∞...');
    let attempts = 0;
    const maxAttempts = 5;
    
    while (attempts < maxAttempts) {
      attempts++;
      console.log(`–ü–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts}...`);
      
      const url = WB_ANALYTICS_HOST + '/api/v1/warehouse_remains';
      const options = {
        method: 'get',
        muteHttpExceptions: true,
        headers: {
          'Authorization': config.API_KEY
        }
      };
      
      try {
        const resp = wbApiRequestWithRetry(url + '?id=' + encodeURIComponent(taskId), options);
        
        if (resp.getResponseCode() === 200) {
          const body = JSON.parse(resp.getContentText() || '{}');
          console.log(`‚úÖ –°—Ç–∞—Ç—É—Å –æ—Ç—á—ë—Ç–∞:`, JSON.stringify(body, null, 2));
          
          const status = (body?.data?.status || body?.status || '').toLowerCase();
          console.log(`–°—Ç–∞—Ç—É—Å: ${status}`);
          
          if (status === 'ready' || status === 'done' || status === 'success') {
            console.log('‚úÖ –û—Ç—á—ë—Ç –≥–æ—Ç–æ–≤!');
            
            // –¢–µ—Å—Ç 3: –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞
            console.log('3. –°–∫–∞—á–∏–≤–∞–µ–º –æ—Ç—á—ë—Ç...');
            const csv = wbDownloadReportCsv_(taskId, config.API_KEY);
            console.log(`‚úÖ –û—Ç—á—ë—Ç —Å–∫–∞—á–∞–Ω, —Ä–∞–∑–º–µ—Ä: ${csv.length} —Å–∏–º–≤–æ–ª–æ–≤`);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏
            const lines = csv.split('\n');
            console.log(`–ü–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏ –æ—Ç—á—ë—Ç–∞:`);
            lines.slice(0, 3).forEach((line, index) => {
              console.log(`${index + 1}: ${line}`);
            });
            
            SpreadsheetApp.getUi().alert('–£—Å–ø–µ—Ö', `–¢–µ—Å—Ç WB API —Å taskId –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ!\nTaskId: ${taskId}\n–†–∞–∑–º–µ—Ä –æ—Ç—á—ë—Ç–∞: ${csv.length} —Å–∏–º–≤–æ–ª–æ–≤\n\n–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!`, SpreadsheetApp.getUi().ButtonSet.OK);
            return;
          } else if (status === 'failed' || status === 'error') {
            throw new Error(`–û—Ç—á—ë—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: ${status}`);
          } else {
            console.log(`–û—Ç—á—ë—Ç –µ—â—ë –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è (—Å—Ç–∞—Ç—É—Å: ${status}), –∂–¥—ë–º...`);
            if (attempts < maxAttempts) {
              Utilities.sleep(3000); // –ñ–¥—ë–º 3 —Å–µ–∫—É–Ω–¥—ã
            }
          }
        }
      } catch (error) {
        // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç
        if (error.message.includes('429') || error.message.includes('Too Many Requests')) {
          console.log(`‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤, –Ω–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`);
          console.log(`–û—à–∏–±–∫–∞: ${error.message}`);
        } else {
          throw error;
        }
      }
    }
    
    console.log('‚ö†Ô∏è –û—Ç—á—ë—Ç –Ω–µ –≥–æ—Ç–æ–≤ –∑–∞ –æ—Ç–≤–µ–¥—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è, –Ω–æ API —Ä–∞–±–æ—Ç–∞–µ—Ç');
    SpreadsheetApp.getUi().alert('–ß–∞—Å—Ç–∏—á–Ω—ã–π —É—Å–ø–µ—Ö', `WB API —Å taskId —Ä–∞–±–æ—Ç–∞–µ—Ç!\nTaskId: ${taskId}\n–û—Ç—á—ë—Ç –µ—â—ë –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è\n\n–û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WB API —Å taskId:', error);
    
    // –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (error.message.includes('429') || error.message.includes('Too Many Requests')) {
      SpreadsheetApp.getUi().alert('–õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤', `–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ –ª–∏–º–∏—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ WB API.\n\n–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫–∏–µ –æ—à–∏–±–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏.\n\n–û—à–∏–±–∫–∞: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
    } else {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
    }
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç v4 API —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 */
function testV4Pagination() {
  try {
    const config = getOzonConfig();
    if (!config.CLIENT_ID || !config.API_KEY) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log('–ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç v4 API —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π...');
    
    const result = fetchAllFboStocksV4();
    
    console.log(`–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ü–æ–ª—É—á–µ–Ω–æ FBO —Ç–æ–≤–∞—Ä–æ–≤: ${result.length}`);
    
    if (result.length > 0) {
      console.log('–ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö:');
      result.slice(0, 3).forEach((item, index) => {
        console.log(`${index + 1}. ${item.offer_id} - FBO: ${item.fbo_present}, Reserved: ${item.fbo_reserved}`);
      });
    }
    
    SpreadsheetApp.getUi().alert('–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω', `–ü–æ–ª—É—á–µ–Ω–æ FBO —Ç–æ–≤–∞—Ä–æ–≤: ${result.length}`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ v4 API:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –î–µ—Ç–∞–ª—å–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç v3 API
 */
function analyzeV3Response() {
  const config = getOzonConfig();
  if (!config.CLIENT_ID || !config.API_KEY) {
    console.error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏!');
    return;
  }
  
  const warehouses = getWarehouses();
  if (warehouses.length === 0) {
    console.error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    return;
  }
  
  const testWarehouseId = warehouses[0].warehouse_id;
  console.log(`–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç v3 API –¥–ª—è —Å–∫–ª–∞–¥–∞: ${testWarehouseId}`);
  
  try {
    const url = `${config.BASE_URL}/v3/product/info/stocks`;
    console.log(`URL: ${url}`);
    
    const options = {
      method: 'POST',
      headers: {
        'Client-Id': config.CLIENT_ID,
        'Api-Key': config.API_KEY,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify({
        filter: {
          warehouse_id: [testWarehouseId]
        },
        limit: 10
      }),
      muteHttpExceptions: true
    };
    
    const response = UrlFetchApp.fetch(url, options);
    const responseCode = response.getResponseCode();
    const responseText = response.getContentText();
    
    console.log(`Response code: ${responseCode}`);
    console.log(`Response text: ${responseText}`);
    
    if (responseCode === 200) {
      const data = JSON.parse(responseText);
      console.log('üìã –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ v3:');
      console.log(JSON.stringify(data, null, 2));
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ v3 API:', error);
  }
}

/**
 * –î–µ—Ç–∞–ª—å–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç v4 API
 */
function analyzeV4Response() {
  const config = getOzonConfig();
  if (!config.CLIENT_ID || !config.API_KEY) {
    console.error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏!');
    return;
  }
  
  const warehouses = getWarehouses();
  if (warehouses.length === 0) {
    console.error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    return;
  }
  
  const testWarehouseId = warehouses[0].warehouse_id;
  console.log(`–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç v4 API –¥–ª—è —Å–∫–ª–∞–¥–∞: ${testWarehouseId}`);
  
  try {
    const url = `${config.BASE_URL}/v4/product/info/stocks`;
    console.log(`URL: ${url}`);
    
    const options = {
      method: 'POST',
      headers: {
        'Client-Id': config.CLIENT_ID,
        'Api-Key': config.API_KEY,
        'Content-Type': 'application/json'
      },
      payload: JSON.stringify({
        filter: {
          warehouse_id: [testWarehouseId]
        },
        limit: 10
      }),
      muteHttpExceptions: true
    };
    
    const response = UrlFetchApp.fetch(url, options);
    const responseCode = response.getResponseCode();
    const responseText = response.getContentText();
    
    console.log(`Response code: ${responseCode}`);
    console.log(`Response text: ${responseText}`);
    
    if (responseCode === 200) {
      const data = JSON.parse(responseText);
      console.log('üìã –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:');
      console.log(JSON.stringify(data, null, 2));
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ v4 API:', error);
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ API endpoints –¥–ª—è –æ—Å—Ç–∞—Ç–∫–æ–≤
 */
function testStocksEndpoints() {
  const config = getOzonConfig();
  if (!config.CLIENT_ID || !config.API_KEY) {
    console.error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã API –∫–ª—é—á–∏!');
    return;
  }
  
  const warehouses = getWarehouses();
  if (warehouses.length === 0) {
    console.error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    return;
  }
  
  const testWarehouseId = warehouses[0].warehouse_id;
  console.log(`–¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints –¥–ª—è —Å–∫–ª–∞–¥–∞: ${testWarehouseId}`);
  
  const apiEndpoints = [
    '/v3/product/info/stocks',
    '/v2/product/info/stocks', 
    '/v1/product/info/stocks',
    '/v4/product/info/stocks',
    '/v1/product/stocks',
    '/v2/product/stocks',
    '/v1/warehouse/stocks',
    '/v2/warehouse/stocks'
  ];
  
  apiEndpoints.forEach(endpoint => {
    try {
      const url = `${config.BASE_URL}${endpoint}`;
      console.log(`\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: ${endpoint}`);
      
      const options = {
        method: 'POST',
        headers: {
          'Client-Id': config.CLIENT_ID,
          'Api-Key': config.API_KEY,
          'Content-Type': 'application/json'
        },
        payload: JSON.stringify({
          filter: {
            warehouse_id: [testWarehouseId]
          },
          limit: 10
        }),
        muteHttpExceptions: true
      };
      
      const response = UrlFetchApp.fetch(url, options);
      const responseCode = response.getResponseCode();
      const responseText = response.getContentText();
      
      if (responseCode === 200) {
        console.log(`‚úÖ ${endpoint} - OK (200)`);
        try {
          const data = JSON.parse(responseText);
          console.log(`   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:`, Object.keys(data));
          if (data.result) {
            console.log(`   –†–µ–∑—É–ª—å—Ç–∞—Ç:`, typeof data.result, Array.isArray(data.result) ? `–º–∞—Å—Å–∏–≤ –∏–∑ ${data.result.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤` : Object.keys(data.result));
          }
        } catch (parseError) {
          console.log(`   –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: ${parseError.message}`);
        }
      } else {
        console.log(`‚ùå ${endpoint} - ${responseCode}: ${responseText.substring(0, 200)}...`);
      }
      
    } catch (error) {
      console.log(`‚ùå ${endpoint} - –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: ${error.message}`);
    }
  });
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ (–µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 9:00)
 */
function createDailyTrigger() {
  // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
  const triggers = ScriptApp.getProjectTriggers();
  triggers.forEach(trigger => {
    if (trigger.getHandlerFunction() === 'exportFBOStocks') {
      ScriptApp.deleteTrigger(trigger);
    }
  });
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä
  ScriptApp.newTrigger('exportFBOStocks')
    .timeBased()
    .everyDays(1)
    .atHour(9)
    .create();
    
  console.log('–¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–æ–∑–¥–∞–Ω (9:00)');
}

/**
 * –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
 */
function deleteAllTriggers() {
  const triggers = ScriptApp.getProjectTriggers();
  triggers.forEach(trigger => {
    ScriptApp.deleteTrigger(trigger);
  });
  console.log('–í—Å–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã');
}

// ==================== –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø WB STATISTICS API ====================

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –æ—Å—Ç–∞—Ç–∫–∏ FBO —á–µ—Ä–µ–∑ Statistics API
 */
function loadAllStocks() {
  try {
    Logger.log('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤ FBO...');
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–∫—Ç–∏–≤–Ω–æ–≥–æ WB –º–∞–≥–∞–∑–∏–Ω–∞
    const config = getWBConfig();
    if (!config.API_KEY) {
      throw new Error('–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API –∫–ª—é—á –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ WB –º–∞–≥–∞–∑–∏–Ω–∞!');
    }

    const storeName = config.STORE_NAME || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω';
    Logger.log(`–ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${storeName}`);
    Logger.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º API –∫–ª—é—á: ***${config.API_KEY.slice(-4)}`);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
    const allData = loadAllStocksForStore({ name: storeName, api_key: config.API_KEY });
    
    Logger.log('–í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ –æ—Å—Ç–∞—Ç–∫–æ–≤: ' + allData.length);
    writeToSheet(allData);
    Logger.log('–ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤ FBO –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

  } catch (error) {
    Logger.log('–û—à–∏–±–∫–∞: ' + error);
    throw error;
  }
}

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –æ—Å—Ç–∞—Ç–∫–∏ FBO –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ —á–µ—Ä–µ–∑ Statistics API
 */
function loadAllStocksForStore(store) {
  try {
    Logger.log(`–ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${store.name}`);
    Logger.log(`–ò—Å–ø–æ–ª—å–∑—É–µ–º API –∫–ª—é—á: ***${store.api_key.slice(-4)}`);

    // –ù–∞—á–∏–Ω–∞–µ–º —Å ¬´—Å—Ç–∞—Ä–æ–π¬ª –¥–∞—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, 1 –≥–æ–¥ –Ω–∞–∑–∞–¥ –∏–ª–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–∞—è
    let dateFrom = '2025-09-01T00:00:00'; // –ø—Ä–∏–º–µ—Ä –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã

    let allData = [];
    let keepLoading = true;

    while (keepLoading) {
      Logger.log('–ó–∞–ø—Ä–æ—Å —Å dateFrom: ' + dateFrom);
      let batch = fetchStocksBatch(dateFrom, store.api_key);
      if (batch.length === 0) {
        keepLoading = false;
        Logger.log('–í—Å–µ –æ—Å—Ç–∞—Ç–∫–∏ –≤—ã–≥—Ä—É–∂–µ–Ω—ã');
        break;
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞–≥–∞–∑–∏–Ω–µ –∫ –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏
      const batchWithStore = batch.map(item => ({
        ...item,
        store_name: store.name
      }));
      
      allData = allData.concat(batchWithStore);
      // –ë–µ—Ä–µ–º lastChangeDate –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏
      dateFrom = batch[batch.length - 1].lastChangeDate;
      Logger.log('–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: ' + allData.length);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤
      Utilities.sleep(1000);
    }

    Logger.log(`–í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ –æ—Å—Ç–∞—Ç–∫–æ–≤ –¥–ª—è ${store.name}: ${allData.length}`);
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ª–∏—Å—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –º–∞–≥–∞–∑–∏–Ω–∞
    writeToSheet(allData);
    
    return allData;

  } catch (error) {
    Logger.log('–û—à–∏–±–∫–∞: ' + error);
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Ä—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –æ—Å—Ç–∞—Ç–∫–æ–≤
 */
function fetchStocksBatch(dateFrom, apiToken) {
  const urlBase = 'https://statistics-api.wildberries.ru/api/v1/supplier/stocks';
  const url = urlBase + '?dateFrom=' + encodeURIComponent(dateFrom);
  const options = {
    method: 'GET',
    headers: {
      'Authorization': apiToken,
      'Content-Type': 'application/json',
    },
    muteHttpExceptions: true
  };
  Logger.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å: ' + url);
  const response = UrlFetchApp.fetch(url, options);
  const code = response.getResponseCode();
  Logger.log('–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ' + code);
  if (code !== 200) {
    throw new Error('API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ' + code + ' | ' + response.getContentText());
  }
  const jsonData = JSON.parse(response.getContentText());
  return jsonData;
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ Google Sheets
 */
function writeToSheet(data) {
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  
  // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ WB –º–∞–≥–∞–∑–∏–Ω–∞
  const activeStore = getActiveWBStore();
  const storeName = activeStore ? activeStore.name : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π WB –º–∞–≥–∞–∑–∏–Ω';
  const sheetName = sanitizeSheetName(storeName);
  
  console.log(`–°–æ–∑–¥–∞–µ–º/–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–∏—Å—Ç: ${sheetName}`);
  
  let sheet = spreadsheet.getSheetByName(sheetName);
  if (!sheet) {
    sheet = spreadsheet.insertSheet(sheetName);
  }
  sheet.getRange('A:O').clearContent();

  if (!data || data.length === 0) {
    sheet.getRange(1, 1).setValue('–î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
    return;
  }

  const headers = [
    '–ú–∞–≥–∞–∑–∏–Ω', 'lastChangeDate', 'warehouseName', 'supplierArticle', 'nmId', 'barcode',
    'quantity', 'inWayToClient', 'inWayFromClient',
    'price', 'discount', 'category', 'subject', 'brand', 'techSize'
  ];

  sheet.getRange(1, 1, 1, headers.length).setValues([headers]);
  sheet.getRange(1, 1, 1, headers.length)
    .setFontWeight('bold')
    .setBackground('#4285f4')
    .setFontColor('white');

  const rows = data.map(item => [
    item.store_name || storeName,
    item.lastChangeDate || '',
    item.warehouseName || '',
    item.supplierArticle || '',
    item.nmId || '',
    item.barcode || '',
    item.quantity || 0,
    item.inWayToClient || '',
    item.inWayFromClient || '',
    item.price || '',
    item.discount || '',
    item.category || '',
    item.subject || '',
    item.brand || '',
    item.techSize || ''
  ]);

  sheet.getRange(2, 1, rows.length, headers.length).setValues(rows);
  sheet.autoResizeColumns(1, headers.length);

  sheet.getRange(rows.length + 3, 1)
    .setValue('–û–±–Ω–æ–≤–ª–µ–Ω–æ: ' + new Date().toLocaleString('ru-RU'));
}

// ==================== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –Ø–ù–î–ï–ö–° –ú–ê–†–ö–ï–¢ API ====================

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–∞
 */
function exportYandexStocks() {
  try {
    console.log('–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–∫—Ç–∏–≤–Ω—ã–π –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω
    const config = getYandexConfig();
    if (!config.API_TOKEN || !config.CAMPAIGN_ID) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API —Ç–æ–∫–µ–Ω –∏–ª–∏ Campaign ID –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–í—ã–≥—Ä—É–∂–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${config.STORE_NAME}`);
    console.log(`Campaign ID: ${config.CAMPAIGN_ID}`);
    console.log(`API Token: ***${config.API_TOKEN.slice(-4)}`);
    
    // –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ —á–µ—Ä–µ–∑ API
    const stocks = getYandexStocks(config.API_TOKEN, config.CAMPAIGN_ID);
    
    if (stocks.length === 0) {
      console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
      SpreadsheetApp.getUi().alert('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ Google Sheets
    writeYandexToGoogleSheets(stocks, config.STORE_NAME);
    
    console.log(`–í—ã–≥—Ä—É–∑–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ó–∞–ø–∏—Å–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${stocks.length}`);
    SpreadsheetApp.getUi().alert('–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', `–ó–∞–ø–∏—Å–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${stocks.length}`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤
 */
function exportAllYandexStoresStocks() {
  try {
    const stores = getYandexStoresList();
    
    if (stores.length === 0) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–ù–∞—á–∏–Ω–∞–µ–º –≤—ã–≥—Ä—É–∑–∫—É –æ—Å—Ç–∞—Ç–∫–æ–≤ —Å–æ –≤—Å–µ—Ö –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤ (${stores.length} –º–∞–≥–∞–∑–∏–Ω–æ–≤)...`);
    
    const originalActiveStore = getActiveYandexStore();
    let totalProcessed = 0;
    
    stores.forEach((store, index) => {
      try {
        console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω ${index + 1}/${stores.length}: ${store.name}`);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
        setActiveYandexStore(store.id);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –º–µ–∂–¥—É –º–∞–≥–∞–∑–∏–Ω–∞–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤
        if (index > 0) {
          console.log('–ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞...');
          Utilities.sleep(2000);
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
        const stocks = getYandexStocks(store.api_token, store.campaign_id);
        
        if (stocks.length > 0) {
          // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–∏—Å—Ç –¥–ª—è —ç—Ç–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
          writeYandexToGoogleSheets(stocks, store.name);
          totalProcessed += stocks.length;
        }
        
        console.log(`  –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω "${store.name}" –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ. –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${stocks.length}`);
        
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ "${store.name}":`, error);
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ –º–∞–≥–∞–∑–∏–Ω–∞–º–∏
      }
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω
    if (originalActiveStore) {
      setActiveYandexStore(originalActiveStore.id);
    }
    
    console.log(`–í—ã–≥—Ä—É–∑–∫–∞ —Å–æ –≤—Å–µ—Ö –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`);
    
    SpreadsheetApp.getUi().alert('–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', `–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${stores.length} –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≤—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: ${totalProcessed}`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ —Å–æ –≤—Å–µ—Ö –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤:', error);
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç API (—Ç–æ—á–Ω–∞—è –∫–æ–ø–∏—è —Ä–∞–±–æ—á–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞)
 */
function getYandexStocks(apiToken, campaignId) {
  try {
    // URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤
    const stocksUrl = `https://api.partner.market.yandex.ru/campaigns/${campaignId}/offers/stocks`;
    // URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤
    const warehousesUrl = "https://api.partner.market.yandex.ru/warehouses";
    
    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ HTTP –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: –∏—Å–ø–æ–ª—å–∑—É–µ–º Api Key —Ç–æ–∫–µ–Ω
    const headers = {
      "Api-Key": apiToken
    };
    
    console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç API: ${stocksUrl}`);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–∫–ª–∞–¥–æ–≤ –ú–∞—Ä–∫–µ—Ç–∞ (FBY)
    const warehouseMap = {};
    try {
      const whResponse = UrlFetchApp.fetch(warehousesUrl, { 
        "method": "get", 
        "headers": headers 
      });
      const whData = JSON.parse(whResponse.getContentText());
      if (whData.status == "OK" && whData.result && whData.result.warehouses) {
        whData.result.warehouses.forEach(function (w) {
          warehouseMap[w.id] = w.name;
        });
        console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–∫–ª–∞–¥–æ–≤: ${Object.keys(warehouseMap).length}`);
      }
    } catch (e) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤: " + e);
    }
    
    // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤
    const requestBody = {
      "archived": false,
      "withTurnover": false
    };
    
    // –û–ø—Ü–∏–∏ –¥–ª—è UrlFetchApp (POST –∑–∞–ø—Ä–æ—Å —Å JSON-—Ç–µ–ª–æ–º)
    const options = {
      "method": "post",
      "contentType": "application/json",
      "headers": headers,
      "payload": JSON.stringify(requestBody)
    };
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π
    const allStocks = [];
    let pageToken = null;
    
    do {
      // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –∫ —Ç–µ–ª—É –∑–∞–ø—Ä–æ—Å–∞
      if (pageToken) {
        requestBody.page_token = pageToken;
        options.payload = JSON.stringify(requestBody);
      }
      
      // –í—ã–ø–æ–ª–Ω—è–µ–º API-–∑–∞–ø—Ä–æ—Å –∑–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –æ—Å—Ç–∞—Ç–∫–æ–≤
      const response = UrlFetchApp.fetch(stocksUrl, options);
      const code = response.getResponseCode();
      console.log(`–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
      
      if (code !== 200) {
        throw new Error(`API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${code} | ${response.getContentText()}`);
      }
      
      const data = JSON.parse(response.getContentText());
      if (data.status != "OK" || !data.result) {
        throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤: " + (data.errors ? JSON.stringify(data.errors) : "—Å—Ç–∞—Ç—É—Å " + data.status));
      }
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Å–∫–ª–∞–¥—É –∏ –∫–∞–∂–¥–æ–º—É —Ç–æ–≤–∞—Ä—É
      const warehouses = data.result.warehouses;
      warehouses.forEach(function (warehouse) {
        const warehouseId = warehouse.warehouseId;
        const warehouseName = warehouseMap[warehouseId] || "";  // –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞ (–µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å)
        warehouse.offers.forEach(function (offer) {
          const sku = offer.offerId;               // SKU —Ç–æ–≤–∞—Ä–∞ (–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞ —É –ø—Ä–æ–¥–∞–≤—Ü–∞)
          const stocks = offer.stocks;             // –º–∞—Å—Å–∏–≤ –æ—Å—Ç–∞—Ç–∫–æ–≤ –ø–æ —Ç–∏–ø–∞–º (FIT, AVAILABLE, –∏ —Ç.–¥.)
          // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—Å—Ç–∞—Ç–∫–æ–≤:
          let totalFit = 0, available = 0, reserved = 0;
          stocks.forEach(function (stock) {
            if (stock.type === "FIT") totalFit = stock.count;
            if (stock.type === "AVAILABLE") available = stock.count;
            if (stock.type === "FREEZE") reserved = stock.count;
          });
          // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          allStocks.push({
            sku: sku,
            warehouseId: warehouseId,
            warehouseName: warehouseName,
            totalFit: totalFit,
            available: available,
            reserved: reserved
          });
        });
      });
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å)
      pageToken = data.result.paging && data.result.paging.nextPageToken ? data.result.paging.nextPageToken : null;
    } while (pageToken);
    
    console.log(`–ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${allStocks.length}`);
    return allStocks;
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞:', error);
    throw error;
  }
}

/**
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞ –≤ Google Sheets (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
 */
function writeYandexToGoogleSheets(data, storeName) {
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞–≥–∞–∑–∏–Ω–∞
  const sheetName = sanitizeSheetName(storeName);
  
  console.log(`–°–æ–∑–¥–∞–µ–º/–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–∏—Å—Ç: ${sheetName}`);
  
  let sheet = spreadsheet.getSheetByName(sheetName);
  
  // –°–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!sheet) {
    sheet = spreadsheet.insertSheet(sheetName);
  }
  
  // –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∏–∞–ø–∞–∑–æ–Ω E:J (–¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–æ–≤) –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ
  const lastRow = sheet.getLastRow();
  if (lastRow > 0) {
    sheet.getRange(1, 5, lastRow, 6).clearContent(); // —Å—Ç–æ–ª–±—Ü—ã E‚ÄìJ
  }
  
  if (data.length === 0) {
    console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
    return;
  }
  
  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
  const rows = [];
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ (–¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)
  rows.push(["SKU —Ç–æ–≤–∞—Ä–∞", "ID —Å–∫–ª–∞–¥–∞", "–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞", "–í—Å–µ–≥–æ (FIT)", "–î–æ—Å—Ç—É–ø–Ω–æ (AVAILABLE)", "–†–µ–∑–µ—Ä–≤ (FREEZE)"]);
  
  // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
  data.forEach(item => {
    rows.push([
      item.sku || '',
      item.warehouseId || '',
      item.warehouseName || '',
      item.totalFit || 0,
      item.available || 0,
      item.reserved || 0
    ]);
  });
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç–æ–ª–±—Ü—ã E:J
  if (rows.length > 0) {
    try {
      const dataRange = sheet.getRange(1, 5, rows.length, rows[0].length);
      dataRange.setValues(rows);
      
      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
      const headerRange = sheet.getRange(1, 5, 1, rows[0].length);
      headerRange.setFontWeight('bold');
      headerRange.setBackground('#E8F0FE');
      
      // –§–∏–ª—å—Ç—Ä—ã —É–±—Ä–∞–Ω—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      
      console.log(`–ó–∞–ø–∏—Å–∞–Ω–æ ${rows.length} —Å—Ç—Ä–æ–∫ –≤ Google –¢–∞–±–ª–∏—Ü—ã (–≤–∫–ª—é—á–∞—è –∑–∞–≥–æ–ª–æ–≤–∫–∏)`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      throw error;
    }
  } else {
    console.log('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏');
  }
}

/**
 * –í—ã–≥—Ä—É–∂–∞–µ—Ç —Ü–µ–Ω—ã –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –ø–∏—à–µ—Ç –≤ T:X
 */
function exportYandexPrices() {
  const config = getYandexConfig();
  const token = config.API_TOKEN;
  const campaignId = config.CAMPAIGN_ID;
  if (!token || !campaignId) {
    throw new Error('–ù–µ –∑–∞–¥–∞–Ω—ã —Ç–æ–∫–µ–Ω –∏ campaign_id –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞. –î–æ–±–∞–≤—å—Ç–µ –º–∞–≥–∞–∑–∏–Ω.');
  }
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ü–µ–Ω—ã –Ω–∞–ø—Ä—è–º—É—é –∏–∑ offer-prices (GET —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π)
  const allOffers = fetchAllYandexPrices(token, campaignId);
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  const sheetName = sanitizeSheetName(config.STORE_NAME || '–Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç');
  const sheet = spreadsheet.getSheetByName(sheetName) || spreadsheet.insertSheet(sheetName);
  writeYandexAllPricesToSheetT(sheet, allOffers);
}

function fetchYandexPricesBySkus(token, campaignId, skus) {
  const base = 'https://api.partner.market.yandex.ru';
  const headers = {
    'Authorization': 'OAuth ' + token,
    'Content-Type': 'application/json'
  };

  const map = new Map(); // sku -> {price, old_price, currency}
  const chunk = 200; // –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–∞–∑–º–µ—Ä
  for (let i = 0; i < skus.length; i += chunk) {
    const part = skus.slice(i, i + chunk);
    // –í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö API: POST /v2/campaigns/{id}/offer-prices
    const url = `${base}/v2/campaigns/${encodeURIComponent(campaignId)}/offer-prices`; 
    const body = { offers: part.map(sku => ({ sku })) };
    try {
      const resp = UrlFetchApp.fetch(url, { method: 'post', headers, muteHttpExceptions: true, payload: JSON.stringify(body) });
      const code = resp.getResponseCode();
      if (code >= 200 && code < 300) {
        const data = JSON.parse(resp.getContentText());
        const items = (data && data.result && data.result.offers) || data.offers || [];
        for (const it of items) {
          const s = String(it.sku || it.offerId || it.shopSku || '');
          const p = it.price || it.basicPrice || it.currentPrice || {};
          const price = Number(p.value || p.price || it.priceValue || 0);
          const currency = p.currency || it.currency || 'RUB';
          const oldPrice = Number(it.oldPrice || p.oldValue || 0) || '';
          if (s) map.set(s, { price: price || '', old_price: oldPrice, currency });
        }
      }
    } catch (e) {
      // –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∏ –∏–¥—ë–º –¥–∞–ª—å—à–µ
    }
    Utilities.sleep(120);
  }
  return map;
}

/**
 * –ü–∞–≥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Ü–µ–Ω —á–µ—Ä–µ–∑ GET offer-prices
 */
function fetchAllYandexPrices(token, campaignId) {
  const base = 'https://api.partner.market.yandex.ru';
  // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const headersCandidates = [
    { 'Authorization': 'Api-Key ' + token, 'Content-Type': 'application/json' },
    { 'Authorization': 'OAuth oauth_token="' + token + '"', 'Content-Type': 'application/json' },
    { 'Authorization': 'OAuth ' + token, 'Content-Type': 'application/json' }
  ];
  const urls = [
    (pageToken, limit) => `${base}/campaigns/${encodeURIComponent(campaignId)}/offer-prices?limit=${limit}${pageToken ? `&page_token=${encodeURIComponent(pageToken)}` : ''}`,
    (pageToken, limit) => `${base}/v2/campaigns/${encodeURIComponent(campaignId)}/offer-prices?limit=${limit}${pageToken ? `&page_token=${encodeURIComponent(pageToken)}` : ''}`
  ];

  const limit = 1000;
  let pageToken = '';
  const all = [];
  let page = 0;
  do {
    let resp = null;
    for (const makeUrl of urls) {
      for (const headers of headersCandidates) {
        try {
          const url = makeUrl(pageToken, limit);
          const r = UrlFetchApp.fetch(url, { method: 'get', headers, muteHttpExceptions: true });
          const code = r.getResponseCode();
          if (code >= 200 && code < 300) {
            resp = JSON.parse(r.getContentText());
            break;
          }
        } catch (e) {
          // –ø—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é
        }
      }
      if (resp) break;
    }
    if (!resp) break;
    const offers = (resp && resp.result && resp.result.offers) || resp.offers || [];
    for (const offer of offers) {
      const sku = String(offer.offerId || offer.id || offer.shopSku || offer.sku || '').trim();
      const priceObj = offer.price || {};
      const price = Number(priceObj.value || 0) || '';
      const currency = priceObj.currencyId || priceObj.currency || 'RUR';
      const discountBase = Number(priceObj.discountBase || 0) || '';
      all.push({ sku, price, old_price: discountBase, currency });
    }
    pageToken = (resp && resp.result && resp.result.paging && resp.result.paging.nextPageToken) || resp.nextPageToken || '';
    page++;
    Utilities.sleep(120);
    if (page > 5000) break;
  } while (pageToken);

  return all;
}

function writeYandexAllPricesToSheetT(sheet, offers) {
  const startCol = 20; // T
  const headers = ['SKU', '–¶–µ–Ω–∞, ‚ÇΩ', '–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞, ‚ÇΩ', '–í–∞–ª—é—Ç–∞'];
  sheet.getRange(1, startCol, 1, headers.length).setValues([headers]);
  sheet.getRange(1, startCol, 1, headers.length).setFontWeight('bold').setBackground('#FFF3CD');

  const rows = offers.map(o => [o.sku, o.price, o.old_price, o.currency || 'RUR']);
  if (rows.length > 0) {
    sheet.getRange(2, startCol, rows.length, headers.length).setValues(rows);
  }
  sheet.autoResizeColumns(startCol, headers.length);
  sheet.getRange(rows.length + 3, startCol).setValue('–¶–µ–Ω—ã –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞ (–≤—Å–µ) –æ–±–Ω–æ–≤–ª–µ–Ω—ã: ' + new Date().toLocaleString('ru-RU'));
}

function writeYandexPricesToSheetT(sheet, pricesMap, orderSkus) {
  const startCol = 20; // T
  const headers = ['SKU', '–¶–µ–Ω–∞, ‚ÇΩ', '–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞, ‚ÇΩ', '–í–∞–ª—é—Ç–∞'];
  sheet.getRange(1, startCol, 1, headers.length).setValues([headers]);
  sheet.getRange(1, startCol, 1, headers.length).setFontWeight('bold').setBackground('#FFF3CD');

  const rows = [];
  const source = Array.isArray(orderSkus) && orderSkus.length ? orderSkus : [];
  for (const sku of source) {
    const p = pricesMap.get(sku);
    if (p) rows.push([sku, p.price || '', p.old_price || '', p.currency || 'RUB']);
    else rows.push([sku, '', '', 'RUB']);
  }
  sheet.getRange(2, startCol, rows.length, headers.length).setValues(rows);
  sheet.autoResizeColumns(startCol, headers.length);
  sheet.getRange(rows.length + 3, startCol).setValue('–¶–µ–Ω—ã –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: ' + new Date().toLocaleString('ru-RU'));
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ shopSku –∏–∑ –∫–∞–±–∏–Ω–µ—Ç–∞ –ú–∞—Ä–∫–µ—Ç–∞ (offer-mappings) —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
 */
function fetchAllYandexShopSkus(token, campaignId) {
  const base = 'https://api.partner.market.yandex.ru';
  const headers = {
    'Authorization': 'OAuth ' + token,
    'Content-Type': 'application/json'
  };
  const url = `${base}/v2/campaigns/${encodeURIComponent(campaignId)}/offer-mappings`;
  const limit = 200;
  let pageToken = '';
  const result = [];
  let page = 0;
  do {
    const body = { limit, page_token: pageToken };
    try {
      const resp = UrlFetchApp.fetch(url, { method: 'post', headers, muteHttpExceptions: true, payload: JSON.stringify(body) });
      const code = resp.getResponseCode();
      if (code >= 200 && code < 300) {
        const data = JSON.parse(resp.getContentText());
        const mappings = (data && data.result && (data.result.offerMappings || data.result.mappings)) || data.offerMappings || data.mappings || [];
        for (const m of mappings) {
          const sku = String((m.offer && (m.offer.shopSku || m.offer.sku)) || m.shopSku || m.sku || '').trim();
          if (sku) result.push(sku);
        }
        pageToken = (data && data.result && data.result.page_token) || data.page_token || '';
      } else {
        break;
      }
    } catch (e) {
      break;
    }
    page++;
    Utilities.sleep(120);
    if (page > 5000) break;
  } while (pageToken);
  return Array.from(new Set(result));
}

/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç API
 */
function testYandexConnection() {
  try {
    const config = getYandexConfig();
    
    if (!config.API_TOKEN || !config.CAMPAIGN_ID) {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω API —Ç–æ–∫–µ–Ω –∏–ª–∏ Campaign ID –¥–ª—è –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç –º–∞–≥–∞–∑–∏–Ω–∞!', SpreadsheetApp.getUi().ButtonSet.OK);
      return;
    }
    
    console.log(`–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç API –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞: ${config.STORE_NAME}`);
    console.log(`Campaign ID: ${config.CAMPAIGN_ID}`);
    console.log(`API Token: ***${config.API_TOKEN.slice(-4)}`);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–º–ø–∞–Ω–∏–∏
    const url = `https://api.partner.market.yandex.ru/campaigns/${config.CAMPAIGN_ID}`;
    
    const options = {
      method: 'GET',
      headers: {
        'Api-Key': config.API_TOKEN,
        'Content-Type': 'application/json',
      },
      muteHttpExceptions: true
    };
    
    console.log(`–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: ${url}`);
    const response = UrlFetchApp.fetch(url, options);
    const code = response.getResponseCode();
    const responseText = response.getContentText();
    
    console.log(`–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
    console.log(`–û—Ç–≤–µ—Ç: ${responseText}`);
    
    if (code === 200) {
      const data = JSON.parse(responseText);
      if (data.status === "OK" && data.result) {
        SpreadsheetApp.getUi().alert('–£—Å–ø–µ—Ö', `–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç API —É—Å–ø–µ—à–Ω–æ!\n\n–ö–∞–º–ø–∞–Ω–∏—è: ${data.result.domain || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n–°—Ç–∞—Ç—É—Å: ${data.result.status || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`, SpreadsheetApp.getUi().ButtonSet.OK);
      } else {
        SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${data.errors ? JSON.stringify(data.errors) : '—Å—Ç–∞—Ç—É—Å ' + data.status}`, SpreadsheetApp.getUi().ButtonSet.OK);
      }
    } else {
      SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç API!\n\n–ö–æ–¥: ${code}\n–û—Ç–≤–µ—Ç: ${responseText}`, SpreadsheetApp.getUi().ButtonSet.OK);
    }
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç API:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}

/**
 * –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å –≤–∞—à–∏–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏ (—Ç–æ—á–Ω–∞—è –∫–æ–ø–∏—è —Ä–∞–±–æ—á–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞)
 */
function testYandexWithYourTokens() {
  try {
    // === –ù–ê–°–¢–†–û–ô–ö–ò: –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∏–∂–µ ===
    const API_TOKEN = "ACMA:b0BKJAZYstQEOJf5sYDNyOlEONs3cGcrTYprLMZi:bb8c04d4";       // –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω API –Ø–Ω–¥–µ–∫—Å.–ú–∞—Ä–∫–µ—Ç–∞ (Api Key –∏–ª–∏ OAuth)
    const CAMPAIGN_ID = 89101200;             // –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ (campaignId) –Ω–∞ –ú–∞—Ä–∫–µ—Ç–µ (—á–∏—Å–ª–æ)
    const SHEET_NAME = "YM MR";      // –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ Google –¢–∞–±–ª–∏—Ü—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤

    console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –≤–∞—à–∏–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏...');
    console.log(`Campaign ID: ${CAMPAIGN_ID}`);
    console.log(`API Token: ***${API_TOKEN.slice(-4)}`);

    // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ª–∏—Å—Ç–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
    let sheet = spreadsheet.getSheetByName(SHEET_NAME);
    if (!sheet) {
      // –ï—Å–ª–∏ –ª–∏—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
      sheet = spreadsheet.insertSheet(SHEET_NAME);
      console.log(`–°–æ–∑–¥–∞–Ω –ª–∏—Å—Ç: ${SHEET_NAME}`);
    }
    
    // –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∏–∞–ø–∞–∑–æ–Ω E:J (–¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–æ–≤)
    const lastRow = sheet.getLastRow();
    if (lastRow > 0) {
      sheet.getRange(1, 5, lastRow, 6).clearContent(); // —Å—Ç–æ–ª–±—Ü—ã E‚ÄìJ
    }

    // --- 1) –û–ø—Ä–µ–¥–µ–ª—è–µ–º URL –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è API-–∑–∞–ø—Ä–æ—Å–æ–≤ ---
    // –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤:
    const stocksUrl = "https://api.partner.market.yandex.ru/campaigns/" + CAMPAIGN_ID + "/offers/stocks";
    // (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤ (—á—Ç–æ–±—ã —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å ID —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏):
    const warehousesUrl = "https://api.partner.market.yandex.ru/warehouses";

    // –ó–∞–≥–æ–ª–æ–≤–∫–∏ HTTP –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: –∏—Å–ø–æ–ª—å–∑—É–µ–º Api Key —Ç–æ–∫–µ–Ω
    const headers = {
      "Api-Key": API_TOKEN
    };

    // --- 2) –ü–æ–ª—É—á–∞–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–∫–ª–∞–¥–æ–≤ –ú–∞—Ä–∫–µ—Ç–∞ (FBY) ---
    const warehouseMap = {};  // —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è warehouseId -> name
    try {
      const whResponse = UrlFetchApp.fetch(warehousesUrl, { "method": "get", "headers": headers });
      const whData = JSON.parse(whResponse.getContentText());
      if (whData.status == "OK" && whData.result && whData.result.warehouses) {
        whData.result.warehouses.forEach(function (w) {
          warehouseMap[w.id] = w.name;
        });
        console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–∫–ª–∞–¥–æ–≤: ${Object.keys(warehouseMap).length}`);
      }
    } catch (e) {
      console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤: " + e);
    }

    // --- 3) –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ ---
    // –ó–∞–ø—Ä–æ—Å–∏–º **–≤—Å–µ –Ω–µ–∞—Ä—Ö–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã** —Å —É—á–µ—Ç–æ–º FBY-—Å–∫–ª–∞–¥–æ–≤. 
    // withTurnover:false –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –Ω–µ –≤–∫–ª—é—á–∞—Ç—å.
    const requestBody = {
      "archived": false,
      "withTurnover": false
    };

    // –û–ø—Ü–∏–∏ –¥–ª—è UrlFetchApp (POST –∑–∞–ø—Ä–æ—Å —Å JSON-—Ç–µ–ª–æ–º)
    const options = {
      "method": "post",
      "contentType": "application/json",
      "headers": headers,
      "payload": JSON.stringify(requestBody)
    };

    // --- 4) –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π ---
    const rows = [];  // –º–∞—Å—Å–∏–≤ –¥–ª—è —Å—Ç—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–∏—à–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É
    // –î–æ–±–∞–≤–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ (–¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞)
    rows.push(["SKU —Ç–æ–≤–∞—Ä–∞", "ID —Å–∫–ª–∞–¥–∞", "–ù–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞", "–í—Å–µ–≥–æ (FIT)", "–î–æ—Å—Ç—É–ø–Ω–æ (AVAILABLE)", "–†–µ–∑–µ—Ä–≤ (FREEZE)"]);

    let pageToken = null;
    do {
      // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –∫ —Ç–µ–ª—É –∑–∞–ø—Ä–æ—Å–∞
      if (pageToken) {
        requestBody.page_token = pageToken;
        options.payload = JSON.stringify(requestBody);
      }
      // –í—ã–ø–æ–ª–Ω—è–µ–º API-–∑–∞–ø—Ä–æ—Å –∑–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –æ—Å—Ç–∞—Ç–∫–æ–≤
      const response = UrlFetchApp.fetch(stocksUrl, options);
      const code = response.getResponseCode();
      console.log(`–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: ${code}`);
      
      if (code !== 200) {
        throw new Error(`API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: ${code} | ${response.getContentText()}`);
      }
      
      const data = JSON.parse(response.getContentText());
      if (data.status != "OK" || !data.result) {
        throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤: " + (data.errors ? JSON.stringify(data.errors) : "—Å—Ç–∞—Ç—É—Å " + data.status));
      }

      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Å–∫–ª–∞–¥—É –∏ –∫–∞–∂–¥–æ–º—É —Ç–æ–≤–∞—Ä—É
      const warehouses = data.result.warehouses;
      warehouses.forEach(function (warehouse) {
        const warehouseId = warehouse.warehouseId;
        const warehouseName = warehouseMap[warehouseId] || "";  // –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥–∞ (–µ—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å)
        warehouse.offers.forEach(function (offer) {
          const sku = offer.offerId;               // SKU —Ç–æ–≤–∞—Ä–∞ (–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä–∞ —É –ø—Ä–æ–¥–∞–≤—Ü–∞)
          const stocks = offer.stocks;             // –º–∞—Å—Å–∏–≤ –æ—Å—Ç–∞—Ç–∫–æ–≤ –ø–æ —Ç–∏–ø–∞–º (FIT, AVAILABLE, –∏ —Ç.–¥.)
          // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—Å—Ç–∞—Ç–∫–æ–≤:
          let totalFit = 0, available = 0, reserved = 0;
          stocks.forEach(function (stock) {
            if (stock.type === "FIT") totalFit = stock.count;
            if (stock.type === "AVAILABLE") available = stock.count;
            if (stock.type === "FREEZE") reserved = stock.count;
          });
          // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
          rows.push([sku, warehouseId, warehouseName, totalFit, available, reserved]);
        });
      });

      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å)
      pageToken = data.result.paging && data.result.paging.nextPageToken ? data.result.paging.nextPageToken : null;
    } while (pageToken);

    // --- 5) –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –ª–∏—Å—Ç —Ç–∞–±–ª–∏—Ü—ã ---
    if (rows.length > 0) {
      sheet.getRange(1, 5, rows.length, rows[0].length).setValues(rows);
    }
    
    const totalRows = rows.length - 1; // -1 –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    console.log(`YM MR: –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${totalRows} —Å—Ç—Ä–æ–∫ (–≤–∫–ª. –∑–∞–≥–æ–ª–æ–≤–∫–∏)`);
    
    SpreadsheetApp.getUi().alert('–£—Å–ø–µ—Ö', `–ü–æ–ª—É—á–µ–Ω–æ –∏ –∑–∞–ø–∏—Å–∞–Ω–æ ${totalRows} –∑–∞–ø–∏—Å–µ–π –æ—Å—Ç–∞—Ç–∫–æ–≤ –≤ –ª–∏—Å—Ç "YM MR"`, SpreadsheetApp.getUi().ButtonSet.OK);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞: ${error.message}`, SpreadsheetApp.getUi().ButtonSet.OK);
  }
}